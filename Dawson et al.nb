(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    390567,       8399]
NotebookOptionsPosition[    383509,       8161]
NotebookOutlinePosition[    383856,       8176]
CellTagsIndexPosition[    383813,       8173]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The Bath: Ohmic", "Subsection",
 CellChangeTimes->{{3.8217517678010235`*^9, 3.821751768646145*^9}, {
  3.821751953180216*^9, 3.8217519603164215`*^9}, {3.8250608978394284`*^9, 
  3.8250609055420218`*^9}}],

Cell["The Bath Spectral function", "Text",
 CellChangeTimes->{{3.8217519734679155`*^9, 3.8217519816613307`*^9}, {
  3.825061510528457*^9, 3.8250615136545753`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "[", "w_", "]"}], ":=", 
  RowBox[{"w", "*", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"w", "/", "s"}], ")"}], "^", "2"}]}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{{3.8217519655963297`*^9, 3.8217520197930503`*^9}}],

Cell["\<\


The Imaginary part of \\Sigma^R is then given by, \
\>", "Text",
 CellChangeTimes->{{3.825061532324966*^9, 3.8250615528578196`*^9}, {
  3.825061633572931*^9, 3.825061650791919*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ImSigma", "[", "w_", "]"}], "=", 
  RowBox[{"-", 
   RowBox[{"J", "[", "w", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8217522299389095`*^9, 3.8217522587548575`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["w", "2"], 
      SuperscriptBox["s", "2"]]}]]}], " ", "w"}]], "Output",
 CellChangeTimes->{3.821752259671894*^9, 3.82183968374121*^9, 
  3.821929505207243*^9, 3.821964861035446*^9, 3.822452485082708*^9, 
  3.8230374805364113`*^9, 3.8231556075229917`*^9}]
}, Open  ]],

Cell["The Real Part is then obtained by Kramers-Kronig Relations,", "Text",
 CellChangeTimes->{{3.8250616560259285`*^9, 3.8250616839629216`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "Pi"}], ")"}], "*", "a", " ", "*", 
    RowBox[{
     RowBox[{"ImSigma", "[", "a", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "^", "2"}], "-", 
       RowBox[{"w", "^", "2"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821753749189503*^9, 3.821753753198762*^9}, {
  3.821755306375981*^9, 3.821755312546644*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "s"}], "+", 
     RowBox[{"2", " ", "w", " ", 
      RowBox[{"DawsonF", "[", 
       FractionBox["w", "s"], "]"}]}]}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]], " ", "s"}]], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"w", "\[Element]", "Reals"}], "||", 
      RowBox[{
       RowBox[{"Re", "[", "w", "]"}], "\[Equal]", "0"}]}], ")"}], "&&", 
    RowBox[{
     SuperscriptBox["w", "2"], "\[Element]", "Reals"}], "&&", 
    RowBox[{"w", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", "w", "]"}], "\[NotEqual]", "0"}], "||", 
      RowBox[{"w", "\[NotElement]", "Reals"}]}], ")"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", 
      SuperscriptBox["s", "2"], "]"}], "\[GreaterEqual]", "0"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.821753759731719*^9, 3.8217553184824705`*^9, 
  3.821839695270445*^9, 3.82245249641241*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReSigma", "[", "w_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "s"}], "+", 
    RowBox[{"2", " ", "w", " ", 
     RowBox[{"DawsonF", "[", 
      FractionBox["w", "s"], "]"}]}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "Input",
 CellChangeTimes->{{3.821839741047043*^9, 3.8218397592830734`*^9}, {
  3.8218452121259537`*^9, 3.8218452127185745`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SigmaR", "[", "w_", "]"}], ":=", " ", 
  RowBox[{"L", "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ReSigma", "[", "w", "]"}], "+", 
     RowBox[{"I", " ", "*", 
      RowBox[{"ImSigma", "[", "w", "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.821839778202778*^9, 3.8218398036582165`*^9}, {
  3.823038173203387*^9, 3.8230381802528486`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SigmaR", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.8218398069955335`*^9, 3.8218398119370995`*^9}}],

Cell[BoxData[
 RowBox[{"L", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["a", "2"], 
        SuperscriptBox["s", "2"]]}]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "s"}], "+", 
      RowBox[{"2", " ", "a", " ", 
       RowBox[{"DawsonF", "[", 
        FractionBox["a", "s"], "]"}]}]}], 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", "s"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8218398127570295`*^9, 3.8230381828596225`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierTransform", "[", 
  RowBox[{
   RowBox[{"SigmaR", "[", "w", "]"}], ",", "w", ",", "t", ",", 
   RowBox[{"FourierParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218401317029853`*^9, 3.8218401516552687`*^9}, {
  3.8218401926371565`*^9, 3.8218402058454757`*^9}, {3.82184354174257*^9, 
  3.821843542105509*^9}, {3.8218436033623877`*^9, 3.82184360511215*^9}, {
  3.8218436425072947`*^9, 3.82184367876254*^9}, {3.8218438223023806`*^9, 
  3.821843823073576*^9}, {3.823038224640732*^9, 3.8230382250730515`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", "L", " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]], " ", 
     SuperscriptBox["s", "4"], " ", "t"}], 
    RowBox[{"4", " ", 
     SqrtBox["\[Pi]"]}]]}], "-", 
  FractionBox[
   RowBox[{"L", " ", 
    RowBox[{"DiracDelta", "[", "t", "]"}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "L", " ", 
    SuperscriptBox["s", "3"], " ", "t", " ", 
    RowBox[{"Sign", "[", "t", "]"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "L", " ", "s", " ", 
    RowBox[{
     SuperscriptBox["Sign", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.821840221328022*^9, 3.8218436833403797`*^9, 
  3.8224525125971365`*^9, 3.823038200710368*^9, 3.8230382309728703`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%13", "/.", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.823038315217091*^9, 3.8230383313054914`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"9", " ", 
         SuperscriptBox["s", "2"]}], "4"]}]], " ", "L", " ", 
     SuperscriptBox["s", "3"]}], 
    RowBox[{"4", " ", 
     SqrtBox["\[Pi]"]}]]}], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"9", " ", 
        SuperscriptBox["s", "2"]}], "4"]}]], " ", "L", " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]], " ", 
    SuperscriptBox["s", "4"]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"9", " ", 
        SuperscriptBox["s", "2"]}], "4"]}]], " ", "L", " ", "s", " ", 
    RowBox[{
     SuperscriptBox["Sign", "\[Prime]",
      MultilineFunction->None], "[", "3", "]"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.8230383318380437`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8230383120401344`*^9, 3.823038312340904*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plots: some preliminary calculation", "Subsection",
 CellChangeTimes->{{3.8250608773691483`*^9, 3.8250608784628897`*^9}, {
  3.8250609096042466`*^9, 3.8250609211190805`*^9}, {3.8250609612100115`*^9, 
  3.8250609730706205`*^9}, {3.8251391182629614`*^9, 3.825139127794942*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["t", "2"]}]], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", 
      SuperscriptBox["s", "4"], " ", "t"}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}], "-", 
   FractionBox[
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"DiracDelta", "[", "t", "]"}]}], 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", 
     SuperscriptBox["s", "3"], " ", "t", " ", 
     RowBox[{"Sign", "[", "t", "]"}]}], 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", "s", " ", 
     RowBox[{
      SuperscriptBox["Sign", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], 
    SqrtBox["2"]]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"DiracDelta", "[", "t", "]"}]}], 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]]]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"], " ", "t"}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", "t", " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]]}]], "Output",
 CellChangeTimes->{3.8224526479188848`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", "t"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         SuperscriptBox["s", "2"], " ", 
         SuperscriptBox["t", "2"]}]], " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "4"], " ", "t"}], 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "-", 
    FractionBox[
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"DiracDelta", "[", "t", "]"}]}], 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["t", "2"]}]], " ", 
      SuperscriptBox["s", "3"], " ", "t", " ", 
      RowBox[{"Sign", "[", "t", "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["t", "2"]}]], " ", "s", " ", 
      RowBox[{
       SuperscriptBox["Sign", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], 
     SqrtBox["2"]]}], ")"}]}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]], " ", 
     SuperscriptBox["s", "4"]}], 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]], " ", 
    SuperscriptBox["s", "6"], " ", 
    SuperscriptBox["t", "2"]}], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SuperscriptBox["s", "3"], " ", 
    RowBox[{"Sign", "[", "t", "]"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SuperscriptBox["s", "5"], " ", 
    SuperscriptBox["t", "2"], " ", 
    RowBox[{"Sign", "[", "t", "]"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{
     SuperscriptBox["DiracDelta", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], 
   SqrtBox[
    FractionBox["1", 
     SuperscriptBox["s", "2"]]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SuperscriptBox["s", "3"], " ", "t", " ", 
    RowBox[{
     SuperscriptBox["Sign", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], 
   SqrtBox["2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "s", " ", 
    RowBox[{
     SuperscriptBox["Sign", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{3.822452621967168*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", "Pi", ")"}]}], ")"}], "*", 
    RowBox[{
     RowBox[{"J", "[", "a", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"a", "-", "w"}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218396972054005`*^9, 3.8218396990860257`*^9}, {
  3.8230377730551443`*^9, 3.823037826665965*^9}, {3.823038016870184*^9, 
  3.823038047850198*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", 
          SqrtBox[
           FractionBox["1", 
            SuperscriptBox["s", "2"]]]}]], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["w", "2"], 
            SuperscriptBox["s", "2"]]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["w", "2"], 
              SuperscriptBox["s", "2"]]], " ", 
            SqrtBox["\[Pi]"]}], "+", 
           RowBox[{"2", " ", "\[Pi]", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["s", "2"]]], " ", "w", " ", 
            RowBox[{"Erfi", "[", 
             RowBox[{
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["s", "2"]]], " ", "w"}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["s", "2"]]], " ", "w", " ", 
            RowBox[{"ExpIntegralEi", "[", 
             FractionBox[
              SuperscriptBox["w", "2"], 
              SuperscriptBox["s", "2"]], "]"}]}], "+", 
           RowBox[{
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["s", "2"]]], " ", "w", " ", 
            RowBox[{"Log", "[", 
             FractionBox["1", 
              SuperscriptBox["w", "2"]], "]"}]}], "+", 
           RowBox[{"4", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["s", "2"]]], " ", "w", " ", 
            RowBox[{"Log", "[", 
             RowBox[{"-", "w"}], "]"}]}], "-", 
           RowBox[{
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["s", "2"]]], " ", "w", " ", 
            RowBox[{"Log", "[", 
             SuperscriptBox["w", "2"], "]"}]}]}], ")"}]}]}]}], "+", 
      RowBox[{"\[Pi]", " ", "w", " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "4"]}], ",", 
             RowBox[{"-", 
              FractionBox["1", "4"]}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "4"]}], ",", 
             RowBox[{"-", 
              FractionBox["1", "4"]}]}], "}"}]}], "}"}], ",", 
         FractionBox[
          SuperscriptBox["w", "2"], 
          SuperscriptBox["s", "2"]]}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      SuperscriptBox["s", "2"], "]"}], "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "w", "]"}], "<", "0"}], "&&", 
    RowBox[{
     RowBox[{"Im", "[", "w", "]"}], "\[Equal]", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.8218397021853905`*^9, 3.8230378538525066`*^9, {3.823038031392242*^9, 
   3.8230380556548786`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%9", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{
      SuperscriptBox["DiracDelta", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]]]}], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", 
     SqrtBox["2"]}]], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "4"]}], "+", 
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "6"], " ", 
       SuperscriptBox["t", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["s", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{
          SuperscriptBox["s", "2"], " ", 
          SuperscriptBox["t", "2"]}]}], ")"}], " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["s", "3"], " ", "t", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"4", " ", "s", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.8224526305049725`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"InverseFourierTransform", "[", 
   RowBox[{
    RowBox[{"SigmaR", "[", "w", "]"}], ",", "w", ",", "t", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8218438334632096`*^9, 3.8218438640941935`*^9}, {
   3.821843981629959*^9, 3.8218439836720314`*^9}, 3.8224527936587515`*^9, 
   3.8224528267971945`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]], " ", 
     SuperscriptBox["s", "4"], " ", "t"}], 
    RowBox[{"4", " ", 
     SqrtBox["\[Pi]"]}]]}], "-", 
  FractionBox[
   RowBox[{"DiracDelta", "[", "t", "]"}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SuperscriptBox["s", "3"], " ", "t", " ", 
    RowBox[{"Sign", "[", "t", "]"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "s", " ", 
    RowBox[{
     SuperscriptBox["Sign", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.8218438507143693`*^9, 3.8218438975570235`*^9, 
  3.821843986060584*^9, 3.8224528281627345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["t", "2"]}]], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", 
      SuperscriptBox["s", "4"], " ", "t"}], 
     RowBox[{"4", " ", 
      SqrtBox["\[Pi]"]}]]}], "-", 
   FractionBox[
    RowBox[{"DiracDelta", "[", "t", "]"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]]}]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", 
     SuperscriptBox["s", "3"], " ", "t", " ", 
     RowBox[{"Sign", "[", "t", "]"}]}], 
    RowBox[{"4", " ", 
     SqrtBox["\[Pi]"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", "s", " ", 
     RowBox[{
      SuperscriptBox["Sign", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"]}]]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"DiracDelta", "[", "t", "]"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]]}]]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"], " ", "t"}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", "t", " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.822452832040481*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%15", "/.", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", " ", "7"}], "}"}]}]], "Input",
 CellChangeTimes->{3.8224535388744926`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"49", " ", 
        SuperscriptBox["s", "2"]}], "4"]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"7", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"7", " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "7", "]"}]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.822453539544669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%15", "/.", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", " ", 
    RowBox[{"-", "7"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.822453506786804*^9, 3.8224535224790397`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"49", " ", 
        SuperscriptBox["s", "2"]}], "4"]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"7", " ", 
       SuperscriptBox["s", "2"]}], "-", 
      RowBox[{"7", " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "7"}], "]"}]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.8224535235811167`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", "t"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"DiracDelta", "[", "t", "]"}], 
      RowBox[{
       SqrtBox["\[Pi]"], " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]]}]]}], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["t", "2"]}]], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", 
         SuperscriptBox["s", "3"], " ", "t"}], "+", 
        RowBox[{
         SuperscriptBox["s", "2"], " ", "t", " ", 
         RowBox[{"Sign", "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["Sign", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
     RowBox[{"4", " ", 
      SqrtBox["\[Pi]"]}]]}], ")"}]}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["DiracDelta", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]]}]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SuperscriptBox["s", "3"], " ", "t", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"], " ", "t"}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", "t", " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
   RowBox[{"8", " ", 
    SqrtBox["\[Pi]"]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"]}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", "t", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.8224528573603697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%16", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["DiracDelta", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]]}]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "4"]}], "+", 
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "6"], " ", 
       SuperscriptBox["t", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["s", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{
          SuperscriptBox["s", "2"], " ", 
          SuperscriptBox["t", "2"]}]}], ")"}], " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["s", "3"], " ", "t", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"4", " ", "s", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
   RowBox[{"8", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.8224528615242934`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%17", "/.", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", " ", 
     RowBox[{"-", "7"}]}], "}"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.822452577090623*^9, {3.822453774074772*^9, 3.822453782965702*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"49", " ", 
       SuperscriptBox["s", "2"]}], "4"]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", 
      SuperscriptBox["s", "4"]}], "+", 
     RowBox[{"49", " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", 
      SuperscriptBox["s", "6"]}], "-", 
     RowBox[{
      SuperscriptBox["s", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"49", " ", 
         SuperscriptBox["s", "2"]}]}], ")"}]}], "+", 
     RowBox[{"28", " ", 
      SuperscriptBox["s", "3"], " ", 
      RowBox[{
       SuperscriptBox["Sign", "\[Prime]",
        MultilineFunction->None], "[", 
       RowBox[{"-", "7"}], "]"}]}], "+", 
     RowBox[{"4", " ", "s", " ", 
      RowBox[{
       SuperscriptBox["Sign", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", 
       RowBox[{"-", "7"}], "]"}]}]}], ")"}]}], 
  RowBox[{"8", " ", 
   SqrtBox["\[Pi]"]}]]], "Output",
 CellChangeTimes->{3.8224537833820543`*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.8224525790963387`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierTransform", "[", 
  RowBox[{
   RowBox[{"SigmaR", "[", "w", "]"}], ",", "w", ",", "t", ",", 
   RowBox[{"FourierParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218403170369873`*^9, 3.8218403179859514`*^9}, {
  3.8218435357875896`*^9, 3.821843536209077*^9}, {3.8218439953966894`*^9, 
  3.8218439956974616`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], " ", 
     SuperscriptBox["s", "2"], " ", 
     SuperscriptBox["t", "2"]}]], " ", 
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    FractionBox["1", 
     SuperscriptBox["s", "2"]]], " ", 
   SuperscriptBox["s", "4"], " ", "t"}], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"], " ", 
    RowBox[{"DiracDelta", "[", "t", "]"}]}], 
   SqrtBox[
    FractionBox["1", 
     SuperscriptBox["s", "2"]]]], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], " ", 
     SuperscriptBox["s", "2"], " ", 
     SuperscriptBox["t", "2"]}]], " ", 
   SqrtBox["\[Pi]"], " ", 
   SuperscriptBox["s", "3"], " ", "t", " ", 
   RowBox[{"Sign", "[", "t", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], " ", 
     SuperscriptBox["s", "2"], " ", 
     SuperscriptBox["t", "2"]}]], " ", 
   SqrtBox["\[Pi]"], " ", "s", " ", 
   RowBox[{
    SuperscriptBox["Sign", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.821840322398514*^9, 3.8218439966149244`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DR", "[", "w_", "]"}], ":=", " ", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"w", "+", 
        RowBox[{"I", "*", "n"}]}], ")"}], " ", "^", "2"}], "-", 
     RowBox[{"k", "^", "2"}], "-", 
     RowBox[{"SigmaR", "[", "w", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8219295244825687`*^9, 3.821929572255233*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DR", "[", "w", "]"}]], "Input",
 CellChangeTimes->{{3.8219295766767344`*^9, 3.8219295803684845`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["k", "2"]}], "+", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["w", "2"], 
       SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "n"}], "+", "w"}], ")"}], "2"], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "s"}], "+", 
     RowBox[{"2", " ", "w", " ", 
      RowBox[{"DawsonF", "[", 
       FractionBox["w", "s"], "]"}]}]}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]], " ", "s"}]]}]]], "Output",
 CellChangeTimes->{{3.821929580958147*^9, 3.821929607146673*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Im", "[", 
  RowBox[{"DR", "[", "w", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.821929613996758*^9, 3.821929641703515*^9}}],

Cell[BoxData[
 RowBox[{"Im", "[", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["k", "2"]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["w", "2"], 
        SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "n"}], "+", "w"}], ")"}], "2"], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "s"}], "+", 
      RowBox[{"2", " ", "w", " ", 
       RowBox[{"DawsonF", "[", 
        FractionBox["w", "s"], "]"}]}]}], 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}]], "Output",
 CellChangeTimes->{3.8219296422155485`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Im", "[", 
     RowBox[{"DR", "[", "w", "]"}], "]"}], 
    RowBox[{"Coth", "[", 
     RowBox[{
      RowBox[{"w", "/", "2"}], "T"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8219296691828623`*^9, 3.8219297245052776`*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{
    RowBox[{"Coth", "[", 
     FractionBox[
      RowBox[{"T", " ", "w"}], "2"], "]"}], " ", 
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "n"}], "+", "w"}], ")"}], "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}]}], 
   RowBox[{"\[DifferentialD]", "w"}]}]}]], "Output",
 CellChangeTimes->{3.821929933164854*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Im", "[", 
     RowBox[{"DR", "[", "w", "]"}], "]"}], 
    RowBox[{"Coth", "[", 
     RowBox[{
      RowBox[{"w", "/", "2"}], "T"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821929757258026*^9, 3.821929761029167*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Coth", "[", 
     FractionBox[
      RowBox[{"T", " ", "w"}], "2"], "]"}], " ", 
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "n"}], "+", "w"}], ")"}], "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8219300403324547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "*", "w"}], "+", 
       SuperscriptBox["w", "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}], 
    RowBox[{"Coth", "[", 
     RowBox[{
      RowBox[{"w", "/", "2"}], "T"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.82192978676337*^9, 3.821929818674303*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{
    RowBox[{"Coth", "[", 
     FractionBox[
      RowBox[{"T", " ", "w"}], "2"], "]"}], " ", 
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
       SuperscriptBox["w", "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}]}], 
   RowBox[{"\[DifferentialD]", "w"}]}]}]], "Output",
 CellChangeTimes->{3.8219302445225525`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "*", "w"}], "+", 
       SuperscriptBox["w", "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}], 
    RowBox[{"Coth", "[", 
     RowBox[{
      RowBox[{"w", "/", "2"}], "T"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219298416800904`*^9, 3.821929845629278*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Coth", "[", 
     FractionBox[
      RowBox[{"T", " ", "w"}], "2"], "]"}], " ", 
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
       SuperscriptBox["w", "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8219303327547245`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"w", "^", "2"}], "-", "4", "-", 
        RowBox[{"w", " ", 
         RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"w", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219405184338765`*^9, 3.8219405475986123`*^9}, {
  3.821940674846694*^9, 3.821941003387356*^9}, {3.821941060289645*^9, 
  3.821941061673741*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
S534qCNiwoYVmSxEEXtON1jw7mXD/wCc654h
       "]]},
     Annotation[#, "Charting`Private`Tag$79265#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.5, 0.00047503241917094845`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, -2}, {0.00047503241917094845`, 2.863870911607771}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.82194092890119*^9, 3.821941003946752*^9}, 
   3.821941063050807*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"w", "^", "2"}], "-", "4", "-", 
        RowBox[{"w", " ", 
         RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"w", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219410757973175`*^9, 3.8219410772611723`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
0QrpxM9sqW6ddfie166jEixk/HPP91wsqsOyLC8q9pDeWZC+UTulDkftqL19
lHROjanXRvc6XNj0+aYt6ZXm1Izli3VY1EE32530wW7aUN+ROnw5JlLNn7TP
oNHmCoU6rObIP/OcdPlEkn7Ghjp894n0aBxpnr8r3pFLtfiolJ5YGmnDZYPs
e721uGJ+6kUu6Xb2RTH9T7XYI/2KUTVpUf4TRrtf1OJU7w1vWkhfFo4L2OJV
i9MMp3b1kE4Sm8tnsqrF5+UuCY+sjUfq2J8x3Vpc5FZ5fHptPIqvJeuVazGd
9VXdHGmX3X/McoVrseoqPXV5bXz7jzyNpdbi2tqhLhqrIlo9/LLQf6gGOx2R
tF1H+tDxyfmbVTVY1FrHgJ20n6GmvMnXGux7Ozmci3SFWfgleFWDJTgT9vGS
5rEYDZPwrsEedeFa/KQNbaCM07YGb8iu+byedIR9yMrMyRrcUJ0UsIF0p+vg
zvY9NZj3pEvZmrfd3WtdsLUG1z1+6LJmK98nL5OYazDrH8lna99PCuqtejZe
jYtXkjavtT8RtpvRrb4ae+w13bT2fOVXj/ZczK3Gh9S9nqz1z/Vt17UjsdVY
8fElj7X+5yUrv1Hwr8b+37V+rY2PkuHbsOFmNZY0dShgWBtvThvrslE1Li3d
sX2VjE9q0ju1kr3V+HuO37N/pAVf3rj6TLQaR+uqXftD+v4jtQgzpmrczcGd
OUa6cY45+Fh9FR4N6nTqX5uf5sjprldV+KOFW0IHac9shZNO1lXYlDfVsIH0
Dg8jnlcLlfhFAve2AtLzZiM3lAor8YktZdrZpCs0PKuKHlfiIie1P6mknVbe
BU2IVuLhVoXOF6R/3JvlQEf+w8k6PibWpJ+b+1+r5/kPv//KPXyG9FVNkYor
rRVYxWSIT3dt/TEdfvTsegX+xrV+H530Bb9Q1t6QclxyzkZlmtwfS0HKzD7d
pTi5vmf0MunqGyWXhZNK8eV4R61TpOP0zYpSHUvxD+kec0T6KN8D7ybmUixq
OzciRDoirJYmLf8Tv1u4415G7v9dUfar5W7FuHbF/ZU46ZuJH+d5+QtwU8Q/
7SIy/yhy2T042P0D36s7npZGetpBjsvxww/88bi9SBRpB41E8fojP3Dmb1Vu
R9LOVbF6z29/x58cTd3FSP8ZkdVRrcB474YdaffIfOf0OeH8cyuMd45/2WZH
+u+dHU5zFIzPuyR9Ml3LjzxbX2er5uMIwW5pFdJLu/hm973Ow+tlnsYPkfmV
+cF8jJZDNm5gr243Ie2r6/z1PUc2nrp85/0R0iwbf5ezvM/CNZkn3uwizZY4
+resLRNf/O4nsYE0d1Wn7onDX7GU882QejJ/P31hZp7W9QXnpDz8U0iaz7z5
Fq/7Fyxl8ybgC+n1szWxdamfceaHJ5fCSQtuKpo3FszALNSmsnOkI/oOcGWn
p+P9uRWLJ0gLp+aLCx9Px11/42wOkhY5kKXXfu8TDnTdwCRFWrPSSOd740es
Fjd54C/5vtG6pO/0gP0jTgr+5zJCWntG5/VhlIpZuj9PdpLWFd43W5qYgh8a
N6X+JG1kJf6m9nYi7pBgdH5NOsDe0S/4SwL+fiyQ5Tnpb7cLbhhMvMdcA+m/
AklvD7HYX3shHn9prbDyIG0SnbEj+MU7XL+Yyu9I+lEiA6dBzVt8V4STxZb0
bxzXVnMwDqvunfxpRlqi/M+PZx6xmJt+8Lkh6TONmkknP7/BLLwfU46TJsZ6
XWt2xGDfZO2viPTQpDWx7Vs0rrfdnqRO+gQzy5NYhVeYU8p1SIX0FmVtuVje
SFz0IvuwDOmHOkMLYg9eYIrOrss7SI9d8Ct9M/Mcq4xqV4uSPuUi9ULMKgy/
+KPgu5l0TuBPqzdNIfhijViAIGmxuCuqYjrBWH7CqGU9ab9sFsY3OU+x54dV
J17Sna9PvjtgEoTVr+mc4yL9oeLZwQN7H2HVu+eC2Ul7/KvpQlv8cMnuS+tZ
SetI8N1B1IfYqcW5l5m0wCkDYdR3DwfEZa0yki5f3X7DK+gO/lV+8CoD6Stn
3iV6Gt7CoV7SojTSjBk7+u4I2+PanjvbqaSRkO6+BeIyfs9z3IVCeupFhOV0
hAHuE47ZsObbtNAirT1qwMh2m7ZmhUiLkvW7LoBYxy+NNXcKfZpg574GE/6V
hWs+pdyc53PACQqW1CPX2v/aYnzf18MdkgQ3f1t7PicxKl5oehfuZ5rLr/UX
QpJ9Cm89ANGkxREm0vZWtsOFoT5wL6tqdh3pWDVZ3aJP/sAeW3CcjXQ9x2hq
UWUglIlk/eYgzdydxFs8+gRKW/37uElHnVFVt/B+BtZ3ecX5Satqhtn28oVA
dqp46kbSlXKzURZvQoGy+vShMGkK5cuqRX44SB5LFhQnHTG8XqlPNwLKzfrr
JEnvrHMyt2yLBKHs0FY50pbxKkWW869AweBA6W7Sy09C//b5vAa7+8lp+9bi
r7EQkh4QAwXDlj2aa/dLmBbtFIqFUhVH8ZOkFTexdTp0x4I844adJmvf5875
m/4+Dhp7X/tfIP38n5CU8q53UIY7eW+QLqloCVA+lQCbzoh7PFubT9fWEjPZ
RNBs1wl+SZplexujN0MSjGgwL74jfdSj3bM+IxnimSPzc0lXSHc5OK//CGrT
1xfW9u+1hq6Pr8Y+wu/lxIA50j7o5l9z8zTQZHljxUjuf8mxm8qP1D9B1H3b
lS2kr2g6fGgbSQfNgzOhxqT3RPwunzTKANGLaTZWpFkmHUYYCjLAzP+391r9
mRjpKCn38jMkDbE8CCU9Mu305vaxr7DqaOjXQPpazK0wkZRssF1tzjMn853G
37kMJcEcSLzHZuJMmkPXtfawdw68j7i4w4/0hzlXbruzuTA1JXcylfSEnrt/
Psc3SPjEVrJEOsszP//jLgISJ+4Ox5D5WF3+e7p+eAE0xl+dWSDzu2p94/P8
0gK4pPniOjdZfyp6jLnLLRXAh+MO/eKkJUoFNFkuFUL524EyXdL8l+3qsEwR
4NBDKJr0WNSmGYX8YvD/43N5P/n+GdRUao6aKgaFIz+YDUj3jGjlsYmXgKDH
1sDLpFv2OHgP+JbAf/9kNQJJF9f/XB998idwyRmtNpF+zeGiytlfCp8s6C7W
5PsuMuORkIdAGbzJ6/V0Jf3c9M3ykE4ZcOax6fmTDkyoKCpMLQPV5o7dSaRd
D4kb3XYth1a53bS1+tRxdI/6SFI5DLkrr5snbRest8WkoxzuaXz+wbxW73W7
DSgfrAAZZsHT4qQNble7jLL/BxZJ8R9MSB8XHzA9s/8/WPYXkL9MWrtscX/J
zf/gl7mDgT3p/YKS6+Ia/oOcfmsfP9JqWGOUh6USKIe+PQ0hrWJlUOWpXgkC
3A57oknLfr4Tbvq6EhJOGhqnk5YwC/H4WVMJD2ekytbq0220xAu7GKuAYpVc
U7hWD+nXS/JdrQL9xfGwtXqGf26Y/e7LKjjtcFBvrd7hil6dHP+vCp5evR7c
R5rmsqHdUqga+i2NvqzVp6YXk2qzVKrheu79dfOk049CKYd+NVzyci5eq0/Z
VOvxRdtq0Lc7NrlWn5pvvfr1s081aB3f4rVWv+WwrqSwxFbDtWlGx7X6jm8m
OO7st2r4qM3/c63+s+mUjExrroYr5qYea/Xhj595TxlnqoHLdch/rX4Uzjjp
a8JdA39nf06t1ZcOrwbupMjUAJc344e1+rPM18OJolUD8Vxvcv+3PnXgsTW8
VANaVW+E1ux+9t2lhNs1cOf0usK19mq11E2Wwmvgx5OqzLXnyShV6eln1IBh
/ez0Wn8ebLI8/LayBqRGHG6s9bed6d/e+eEaaOLdJ782HpWpxzt1mWohnEtb
am28ga3bpGNEa0GJ/vDcEhmPvsLMrTN7a4HduLd0lrTGR92N2sbk9XUnbCZI
h0b84ohyqAUz6/S9A6THHrgwTD2uBdYTs+pr83HIjn1BM7EWwvSWLetIR5nE
TIUX1sKFrA9ff5KeOag6ONpVC12Jg3LfSOvKl3XAYi20rw8oXDuvvBW4UB+y
sQ6e/7R3XzvPLFFnygaV6uCfu9uxsLXzzJjf973H66C2xk3FhzTj9/TU3gd1
wD6ad2BtfZ5NPvJu9+s6+LIYf+EU6c9h7S8f5dTBwoVmP0Ta0obZX3m6DkLK
j04JkM4zfOnly1EPR/i3S9FIrwdFlzbJemA66Hx+lNwvRfymFg/O10OuR1R2
DuktKxNnmtzqQbJvqSmGtMvQA33ZsHowoI4MPiQt8e3Dvrryejhjcr1Kd+28
aUUVFFdrgLOhzZf+I/d3p/5zrluGDVCx1eZT0lr9uleWqfxGAwTyX2leO88O
cJ/+7RDfACfmPF/vJa2VnVDxg78RWkpSvjwn80103L6CjfRGqF3eb2lD+u/j
2mybo42w4VlZlQbpePOleL57jfCi1au6g8xv6zj075lPNMLzb5ybeEibSJoS
u1ibQCxUw7iVzIdJBy1X2bY3wYDclYNxpPXcXO9knGmCjzLMQmvn/+cDMW6M
RU0wGHrTToPMp0PU5KzmriZ44fWqdO33A3WRL3MpC03grmSak02681Sp82nF
ZmAaKzihRFri+7R9/MtmqHvLNb1Wv7i2L6a5f22Gj0L9+x+u0lHZHNOUXk0z
BL/5ETK8Qkd2CsJ2c8wt0HFEmSNxmY6+vjxoo+3QAioqGx/SFunosEuI+Yh2
K2x0y6EIz9LR82ev3uRbtMLRp1+7j8/Q0VDK++5gz1a4dj7NwPMPHQX25p7f
+7kV3Jxl6uqn6ahev880cGsbpN7TCzWeoCNLWdVTCn/bQM2GNTB1gHyeFgTT
eNthq1VncEI/HbGY69Q0yraD2g634ug+Okp5ce6E16V20Hw0EunVQ0czTD7H
qivaYbwzUoevk44edDdqOsR1wJX5EF2XejrqzD523TWvA17zrtfSqqMj9RDi
uWdDB5Q6JIbx1dLR1OGk4YB1nbBtUU08poqOziffeRJn2wkXvty5HlRG3u+y
va1euQvsIymOGZgc74kIxjbdLug9oOellU9H01JcCr8ud0F37NWQhjw6Smib
uzse3gUJrY14MJuONh4ol2Be6gKT+Oq4tgw6+seklr3JvBuIPd+cluPpKN7h
z3/Rdt3w1vZyod47OjLs+tAj5tEN94a9ql/G0VFa1jYOqdBuuGaTzC4dQ0dW
thwXVIq7wWScOYg7goxndRfjcZlfsOVQUDVLAHn/Sx99z9+/YNv9wcePr9BR
Ob/PIDelB9JOCM1ttqKjgUcPPd9w9oBAlVZWvAUdbb7tnVIo1QO5P5rlE8/T
kd/Z+yzsF3pAyFjG6KohHV0U8STCy3vg5MPHKrX76cgj7I6xdEsPmPH5f2PU
IOPBeWciZ6AHBvo/6Cmp0VHFssfmTmovsAW7urgq09GeTjfX7Xt6gb2qySRf
ko54XjsrfnpLWrrFejs3HckKOJccTO+FyC8pOrPsdKT1xOl8Pe6FPo+do5iF
jm57OQbOtfZCW7rO2YM0cn1dsB/ax9sHOxdE7y3OKCBC9HpM2Z0+uM975tDe
FgV0I9aSp8+oH4rDjPsbohRQkFtEVJBFPzwXO2K8KUIBpepXSqnd7IcvvJIT
pmEKaGJl94Eg/374UXr27s/HCuiaGbvDnrx+4DjxfvKspwKyWZ9eFyg2AP8J
8LdcOa+ArHxWn6uODUBF+3udZSEF5HNORbx7fgASRB+03d+ggOJVrn4MYBqE
nnG+4zReBdTfU1vStWWQrBeDf06sU0CWED/vf3IQNrj7/bkzK4/M53VNO78O
whnbmCLHKnl03iZSxPfeEIT4zx397CmPFltYK6cfD0Fsx5vkx27y6IWOm+fZ
yCHo4ddguOQkj2qkTLqUMoZAdMPt0Nmr8ujQ4IY37X1DUB19Tr7RUB5JWz7b
vlN7GLoEP393kpZHM+f8ZDu4RiBd75/Kjko55H/SRU05ahSumIkUmTDJoeAK
mWspiaPQx1ziIbIii6KOdEXvyBwFwaO/t7f9lUVp+7QZBWtHgemEueGBIVnU
LC1ctbRuDPZkN+hnl8kiKVq+ZbHjGHDVLEidCZJFxelMT88cG4elaq1nl3lk
EeP6sAGvhQkQFc+KUqPIIL4JTy6+dZPwiuGaTP+cNBL7eWXXW/5JUH1yTOzR
pDTaf1vD56fcJAjSXYyKO6WRW1/vDt4Lk5AUtFt5IU8aTXzeeTm2YBJ6Hw/f
NHWVRmMyQ/bmWlOgvsGHf/2oFGoqfzjlzT0NemljC7u/S6LTHua7Igt+w6j9
aa7TK9vRNfbRbZWmM3Dy5+bea0rb0Nbk4ufMI7MwTnO/JJ+0BXlkaZ7ifjkH
9P9aw1SuC6Kb8de+7qL/g8NKQUtpZXyIg7bbXKF/AS4LDZ6VOsSGsm8xnBoY
XYCZBROlvcJsyGq8SjP69wJkWiXLW06xIqL5yg4uyiJYzbsL/ItiRY4fI4fG
hRfhza5P1J1zLKj17IrdB/1FGLD0zVj4uA4lZBZ5yOUtQuXj2J4cZSZ0+Lph
mEzIErg+e37lYQAFOQXnUm5EkDYWYbh5lYLeZm67lvF6Cf7KG1g7aVMQjTZ9
UCNlCZovJI2VMVMQ8fzx1PGiJYgr+cpvwboK6kTxMfu5JeD+vGfxD9syKPCr
0bLMlmEsgy133+5/cG5PzPWlS8twNnbTzK/FeQg8t64FXVmGFnbIxMQ8jL5v
+FjqtAwwGBchdWweEjQczrU9XgaOCO/Vz+ZzIG6VnLWCl0FU+1vZr6hZEMwW
uXF4+wocVNJ537j/N6xYvN/EK7sC/g0q31KYf0Mfl9LPdqUV8BlkcfivchrS
LA+JOcEKTPX1JExemIYjPLZ1saYr8PPQ1s5vD6fAxTprN+XZCqS+ixixxePQ
sOEUJXd5BSyLfWvtXw1CDtGe4sO4CnzEwwupaBBibK3OGLCvwpOaLzJP+gbg
2ne39GHBVUgx2mwGCgPAeD3GUlBlFQrFx8G6tA9UCsd/OtusQrfS5vl9W3sg
2MHvmWLTKrCnR9pGvWiFhYqULL+OVfix6u5gwd8K5pI1Xd29qxARd6vV/EkL
KLcLKTybIq/bCLVxPmqGkdjT/fOMFGS/786y9LNGCOQYvHdmCwXVPu2p3NFS
C4SaW9hDMQradSLvQaV1LcxYsSd+2k5BnhuaanLnauDsd3o1qywFcdQ2aVtv
qgF5F9ctObspSFpyv7BCXyVUdrHmCp8k23cwLmfL/Qk0zqhKLUMKec53Z3lP
/Qm71BV6HIwp6AP+b77vaAlEhxqwlp+jIIbx5Q26/UVwQ+elsYcNBRk9cdP4
rVYAb13kbd9fp6B9wTc5SsJ+QHMc9qy7SUHnu3836cx8B7TS+072FgXpy0X4
XsgmgCdDbqbtAQWFL6ilj5XkwaHu/HUsvhS02axbqiIpF1w5T25SIdct6l1U
Fg3JgW5r54OBTylo4PYp051OWfBpc/5TjVcUVHzIfvdp188woKP/9koMBXU+
l4yh+2aA8K2ezNA4CjpxslQ7/GU63K9h7hpLpKCA3+s+CzekgYHPCflXXyno
1ZPvk083kufsM1M62dlkPBj5cizCEuGf3DOrhjwKqtj8rIh3awLE1NW+5iyg
oOPtUn83nnoHf+Id86SLKWgs07vEbTkOtNzXtxwupaBHAi92VqXHwrioEZ9n
FQVV3/urfHV/DKCZvwqRtRR06vmOWQfpaAgtCT/2tYGC3nEI3JIcewnqdi3e
E20UpJMzsmMxIxyCDri/YeuioOHEllyl7DD4tX5TvkQPBbGVvBZMrg8Bv9yz
c+eHKOiw11fGML2n0B60zO8xSkEP3j5nVzd9DHTzaMXwCQrq5vY3lz8UAPdV
4XjGNAVlXXjzcJOZLzSydF+tmqEgP6v7E5tee4N0+12f0TkyXpZCQlo89+H2
R7G4dYsUlHfl8DqLc15Qff8HFl+hoINM586NzriDuJFFO1Cp6O34UXXDQRdw
kWb8Z8ZIRTZfIxMqVByhbOntBtd1VLSTafeNdbk3QKT68M5QNioaj6j9q19w
FW7GDeilcVIRk/SYUP19Syh08bWt4KGiLFNdqc4/F0DgqJTfED8VebQOnqYY
mICNSOlbRgEq0r5hbFYuagD5U1e/iwpTkdgNy8a570eBr5CtU0OEikylNF68
kjgEl8OTF0xEqehI6OAnqj2CLBtdAWdxKpLlC2TQOAzAsX9c+ZkEFa06yj0Z
yzsAF3iD9D9IU5F5Q0qA9XctSO9TuF4qR7bvc07P/5MeMGdV+ffTqYjYxEO3
KjGEM49uxlOVqajxxEzG6Q9mkHKet0BkFxW9/045mcBkDpSd6V1qalT08JXR
PrZpKzjFdGrptAYVlb67YUOPuAbxzX8EHYCMl+Jh471e9rCQHKoadJCKQuMu
Or/mcYbjXqoGSYepyIwp6OEfihvEGDTaFWtT0cBVfQZr/Tsws+PWo55jVORm
1pIZunoXtP8JJKzoUdFX/gSpLz4P4GVFVqGwARX5XlWITNnnAwcdF5YNTMjn
Z/x657U3EMK0XgrfMKMiiTmr1oD7T2BISGP3o/NUdNVOYdvA7WfwhLhzs8CS
itjm7XwSNMKgJ2TL4y5rKvrnasXVg8JhlzVOXLShosWDnuZW5yKgnZPaq2xP
RRv/PFf06noFMmbep9/eoaJjzYgaw/gWzth/5WO8R86vpsifs77vwM93qMrC
mxyPaMBAtOB76M/QPSr+iIpqeCRuVlslQQzHBoh9QUUpzo/1LrakQeW2I0vU
KCrSY7Lg3d/wCZb3uGVfek1FrzLFqXea08H0coeyWDwVLR3vL5Gf/Qwb8t9J
xWRQ0TcmzS/FvtlwqL6pf/UrFQmPXI8WwjngMMIadyGHij4SUt5jy7lQvdFO
ZOt3KpJ/9i9TLDgfAm7s4ouupKL5KEnaS7YfQBErWXw5TMZXe3Xzl0M/gb77
X9biGBVtrWYv0xIphfPHZV3MpqgompfzTua/Ush1ezIlPEdF55DD93355eBS
a9wfwUhD428arq13qYLRB0OV4VtpqHxD6An9mjoQjhQOnNtGQ88lS94yn6sH
7TRdHWMJGkI7T0jljdRDfHtawUZ58vrbpiQpjka4qOqWFaZOQ1+wsbq4dTM0
DrDGhpymIZU55z8enh1QbOgflW1CQ2bH7kSxbO2Erz9YwrvMaKg9RVvo4vdO
eB69LlDWnIYkmrZezmbqhtNGTC4FdjQkb1TWGm36C+qLKEf/+NIQ7zZhglux
DwqV7x4SekRDuTtGTTuC+uDzm9X9EERDDwxcup5P9EHonRXlR6E0FPObTbsq
rR9OqS6JiL+hIQ9HBfZL5Pu09u3ctEEODSX6SSlbBo7AD75bY67faEhByyhE
bIGsM+/+HYgmaGi00M2u5sooBJ+dbRsppiHp/osabDpjcHL9n6L7dTQUodZe
Orp+AqofTESkj9HQ0/+OE5fHp6DSvP8A31YGJJ3S1/+HZxZ+Mb6fD9vGgMQ1
dzhFXpiFmfgrH4UkyOsCzTe6U2dBaHR0s5g8A8r039R+7MRfsHT8PUffy4BO
CrAWJITPwcKD1Q/HjRnQxsqW2jytBZB4JyTs/4QBHXVYn6jIQ0FqR9qqOUIY
UO96C5HCAxSkOxzl+/Q5A7o12MSS4ki+R+RFZ8NfMSA1HtTl1kzm0S8S1fHJ
DMiokusHL7lODYqVfQpLGNDlzD1qhifJzyuzGtrlDOjnIdN9B/wYkCtb5p/y
SgZkFXZ6+0PMgF7pqV+qa2BABw437eKjM6KhRqTR08uAwvxTMw7zMaEFV9qf
y4MMiL6ee/3EMSbEuakwcXiEAZ3n4X068ZAJ7bxwRGB6mgElff59a36BrA+p
rJVOswxI/4f5TtouZmQSV+Y9P8+ArLnD3lnaMyObw4F7by8xoKag/vmtH5jR
//0/Av3//yP+B8603HQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$79878#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.00047714915449173734`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {0.00047714915449173734`, 16.035488752256303`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.821941077760187*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"w", "^", "2"}], "-", "4", "-", 
        RowBox[{"w", " ", 
         RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"w", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821941166601681*^9, 3.8219411754292183`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
//+/53+UfvO0
       "]]},
     Annotation[#, "Charting`Private`Tag$80818#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.00048708636926779426`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0.00048708636926779426`, 19.937887667387752`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.821941169280187*^9, 3.8219411759921722`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219411919008884`*^9, 3.821941192228113*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
L/Hq6jwd/A9n6Ogi
       "]]},
     Annotation[#, "Charting`Private`Tag$81431#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.5, 0.3491777495790137},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, -2}, {0.3491777495790137, 2105.119481624544}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.821941192862199*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219412156494637`*^9, 3.821941216069435*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
KehutIBfpEBRhsEaAkP7QIPiZkiX6xrb1F5DnB/svIQ+NEPv7zB21QtryEli
mNfMrRlO7ttp9VthDS0kxV6ik2qGkXfT27f41hDTRz+2xf+aQCXqx0XV8VVk
KKXBp/ChEaYDO9dph1eRhdh1BbonjRDpuZbws2cVyX8OxjluNMK46Sl6+cZV
lHidorZLrBFe82cg8dxV5NgYz3L6RwN0f046xua3ilZmwuh+jdWD39uq7trH
q4iN96BWekM9SD4fDQhwX0Wj3wVSWnLqwcfmyF+6O6uIobTsd4VfPYiIf4pd
vryKFMM2BPWF68E59R1rt8AqaliPsXFwqgPej7l4JM8qKjxUy517rQ4qQtrt
DfauImpElI+UWh3sv7+3qm4n0d89pVjagTooPBHiXTSzgjQ8sKGK8Fpg/uE/
/wWtoG+gvnLEpAbiy1xbHK+uoDL131zZAtUQIeWs/FVvBd3q7/3yc6sKAqIc
qN2aK6j9waz4vs4qcHC09VfDVpAja5p9bmgVnD5oonjw8ApSkb/X8pKxCpqc
sfjKyWX0JvYncy99JZT1KbCRRpaR2jdqyOORCsjVOPVItm8Z2QldqblRUQEx
/FJGMY3LqLbL0XXuRQXY1ggwO2cvoyIn1dJd7BVAEaR35nuyjFZDRUQzjpbD
wkuaAX33ZaS1ERJwlL0cRta2tAKcltHt7jHG/uUyqKlfFl6yWkZnxgpZJgrL
IMJjtKtafRlh9uniL66UwbHmX+dc9iyjmMvO3bdflsI1nzd7ar8soZbnyq0G
fCVQA4v0LnFLKOhi5+MzTCUAawarvO+XkNGy49uLK8XA67CvxyF4CVkzNhbX
1xdDv2ncFw7nJRR4jmLn6FMMVvJU+WvKS+jua1vzvqkisJ+tuj7RtYjqNDhL
PboKofubuF5Y6yIybsJ9VH4Vgtat4PNQv4iG53L3iP0ohGO9OqKvihcRuTy9
8mxUIcz+ap+XSVxELiX5Vt+vFYLz1z/PHrososT83W7Swz/B04zmOwPbIqJ2
Gb39uu0nUGtVgpoYF1ESt69M0goO/YoB9lHbFtE1D+a8wnEczvPsOXp0dQE1
xjeMizTixHkmSNXpW0DOU2fRQAwO0boXUiOSF1B+xbp4K+CAzr/KFNJYQI6P
yNe+70Ewm9EcNn1uAU0J30g5TEJw6DD3gxxYQLJRAu75owXgR/PxhLr0Agrs
KQxUwQtAG0/PtudeQFt+Gy9/2RVA76m23IyReTR0wqzgVtUPIIkfRMpP59GW
j0jqo6h8eMhx5tpTz3k0M8XGsvY8H5a2zDdKH8yj4YsRvCHO+TDZEC9/wWYe
OfJSHuzTzocOF4lsba159EX5waFntPmQWXw6xYRrHr2ZFDge5ZAHt42NPz74
NofYv7E33DPPhZFznko58XNoKd7r+hmdXLA8StzUPswh33uj344o5YIRZfCg
5+s5dGfry+/T/Lmg+sX2vc+DOfTwkiC/50AOHJp3C311Zg6pD33zkLHJgd8v
Ip4lNs8i9VM6tG7PsqGxhDfJrHYWoQPK53rcsqF663PdnopZJKxF0rxsnw0F
jplcj/JnUa2njIbj5WyIu9qYqPdxFhWKZus6HcoGG1Gmuo27s+imqvSD+yVZ
sFb5iFObcRbVsDr9bWLNgnna7afpts0inVD2rMPbs2BSMfh67tYM+rFxw8Nn
IxN6U6MSDs3NoNfDUv/ZjmRCcWSuwkr7DBreIXWmuyATAmzmzeI+z6Cu5KwD
Z+0zYf9O66/zSjOI6aoGQ2hLBlwrqA7gV5hBmZ82swqqMyDWQfKutuwMkql+
JLNYmAGCHavHk4RmkAWXimZQcgYcTQostmCcQfeP+LSZPc8ApYtpPQ3N06jD
x/w/T8iAW68396RYT6NR05GaAxnpkHTeYqX7+jTSBYp/d1I6TK6WdTJenUZ2
mUO/v35KBweLVx+tNaeRbajolvmbdHgoc0iSV2oa8TkPfDBxSocD30LeHlia
QjyS35lvHk8HW1kRuo79Uyj50qqNVWEaONDlfHbeNYVEOjRS3uelgVuzygVW
yhTKVRi73ZmeBv73bwSr/ZlEFf53uV0+p0FCRgxXdsokev3gx9KBwDT4K7tX
IvT8JIr5zpjPa5QGN4/TGmjdnUDf2BoXP6+mgv22kJVR8wkUZH3deGk+FZxb
+N77Xp5AvU1vui9OpYKvM/T9kJtAr00OsHIMpkJ8pputGN0EUrV1FKatSYWh
4zNeOyLH0c8rEn/0P6aCxYnuL0VFY8is3nY8XDcVrL6c0D+fNYa6THhqRbRS
wYbrFU1Fwhiyr8upKLqQCnfXlK/VvBpDkQ/jxumVUuEh+srWbjqGlA99kmk7
lgpvVO57Tq6NomLvqrMhu1Kh1IBRj0tmFNnrV5Sr1qdARfkN8nuhUXRXaPPT
618pUH0KfT+wbxTlJtC39VWkQMM+hx2HKKNobPim2MvCFOjpaS2QqPuLjkp5
zYump8DyzY/CZ+3+ojiLV6pX36aAiIvclv2nEUT/mM3dyTIF8K6LIgNhIygx
qkZv//UU0Fe2uGzwfAQ9urAvrcIkBZ4wBySC/Qg6kTM6KGOQAu2fugx2nxxB
lCeujhoXUsCv/hE1peoPAiyTxl0yBYZFyq7Pzw6j+vc/Hn+jSYGHLzsCrIeG
UbDVbNAqKQVYF6eyOluHkWOM3C2NTSoo/uRkLskfRm/mY+9sLlMh1MAmN9R3
GJUfkzv6bpIKZ32Y2E5wDyM94ayh1N9UiO3SLXY9M4QMghsDTmRSQWpQarVJ
Zgg5SMqEnEynQvEoy7FjR4aQoegL+dOpVBheqn03zDyEdmy9NL/0nQoirBqO
up2D6HlWXdSneCqknj/LL/5gEOWG0NybC6eCsqaAoZ/NINJ0vVopFkaFJl1K
0IDJIDLdVeh36w0VFs3wlYizg+jT8+7DEy+pIO+uUL+NdRC5V7W47vcn/j9Z
5lFv0gCSKsT1OD2ocDmTLVM+ZgCZ9Yqf93Un+pM/OxYWMoBY6DXNl1ypsL2S
aqDpNoC0KEaMA85U0BwUO5qrMoBiaKSKe+5SoYXzcHdIfz9qYcz7ZnuDCn8e
71FQ4exH0q90D2doU2GnR/JUyM5+NCVnusdaiwoSLmofe9f7UL24tPyBi1Rw
tvfY6dbXhxSVTu59o06FbVeH2pIS+hAr28XI/85T4ZBMxn3W032o+tUpXuPT
VFA9qiVserQP8VXHO2IKVLAT+duZyNeHHF27c4TkqZDOy3P23LY+tLNEinnr
JBEvpqesLrW9SG/Kw6JOhgrmw3rJXdd7UcKdDYlVMSr49k2ai+j1InZft2IG
wgmdfhwPzveiszpfGHhFqTDbkO+xW7QXkT4zfNAWpgLFS+2t70gPEvtEY1N/
mAog+bf+ElMPmj7ky3HxIPE9IZ5TYzPdaPCz0F+/A1So4bkU49PSjfrct0uU
8lDh2s4c+6wP3ehkcN+myn4qPBzwY+CR6kathZla1lxUyA09cm5EvwtFdQ2r
crIT8b/6x4Ks0IXsfdkuubNRQZ83/gk3XxeiC1F27WUl+pcggGuMdaKXTbL7
UlioIIwfkE/x6kTVqZaY7S4ivk+7rlRadiKuuU8D3czE/F947zKg1onofnH7
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
T6RYOAgzarg0nPPJBWVaxSfTRD79tuSyy944D8q9PJU/EZ686Pa8gPEHwIh6
MD3hbM+CguTjONSZzxJFQTLIif9M1Q4vguCPo0eZiPwv29QSVlBRBMyW0gaD
RD16zH3cTWy9CCTXXjzOIyxYsVd5+/ViSNw/MnaLMNsN+0YkUgINtgfvlhH1
6vj7ffMSBaUgsubP6kecP3+UJdveT5fCXvuWSTPC/aPn83cKlIFFIAuNHOH2
kw4+w8/KgGvNtm+cOL9Km8rZoy+Vg7J3ZPtlwh8YnWWZhipgMh+NniDOu8i0
F1zueytBe9/E8h7CYUaxGyNqleAkzuI2T5ynAV+qS4q/V8Lu4fLBVMIuZwX0
H7pUgbrIeoUsYcexk3KjCVUgovyjay9h+9cXDxh2VYG4F7fPKnE+3+h1HZZW
qobpm/1vfxLWeVjnPMbwC5CT8WUDwpoCw0ZXFH9BZlbgXUXCqpVrimV3f4H6
OT0QJKzIKUT/sfkXqBZ4bl8m6oVTSGFs9/YayG0zYegnLGOlU+spVwPVz8sb
qgmLpnuEG32oAVa62/gnwoJXQ9zL62tgZZfa1CvC/JSvpsdpa2En38Kc1796
SLtJiPVWLew4e/zlNcJsS38ZHr2rhW3+Ice0CDNHb01N/KqFYLFL2RhhivOe
TkuuOnjXTA0WJGxkltCQLVMHue8cV7gIp16ACkbtOrgWfMvvX326U7YJmdnW
AbeyttK/+tT84K3MdN86qL0xJvavPs3dsZm0Pa4OUjJoL/6r71jnX380/lEH
l+dsE8cJ23QLRVLb6qCzafHCv/q0sDz/Je18HRxZeST1rz7lTrv0zHBXPTB1
jN38V586RA17JInUQ1LxgZl/9WjlM3cn0vl6qCnc1vT/+tRht63e9Xo48zaM
4197N+P/rn95WA8WKaUF/YQbzssZrofXQ8ze0IZhwiKStRe10+qB6wad4b/+
eO+zPPepph7OZ/Ne/tffTroV+eW/9ZD2eaH233hkpgOlNOgaoEH2bQ0dMd6A
3/zCMbwN0F/MZ8BCeLA46+C8fAM07Uy5c4CwQrIGh6pBA+jQ2RwQJ/wmoo/x
vUMDDE/cv3Wa8Li3M810YANwStAY/JuPs/YMq8pfGyBH99yEOeH3hjHT4cUN
wEd3X8qF8LyS7J+xHuL5Qq1YMGEN8couWGsAs99v+z8T/rTXtCmEoxFor+01
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
       "]]},
     Annotation[#, "Charting`Private`Tag$82044#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.06236167886428115},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {0.06236167886428115, 2095.7807230428966`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8219412171117086`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219412313358974`*^9, 3.821941231594825*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$82658#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.050155764576590135`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0.050155764576590135`, 2053.0239873130427`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8219412326925783`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.586780", "^", "2"}]], "Input",
 CellChangeTimes->{{3.8219648892507925`*^9, 3.8219649092047358`*^9}, 
   3.8219652336710653`*^9, {3.821965846965816*^9, 3.8219658537990522`*^9}}],

Cell[BoxData["2.5178707684000003`"], "Output",
 CellChangeTimes->{3.821964909710767*^9, 3.821965235281515*^9, 
  3.8219658554744787`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Coth", "[", "w", "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"w", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", "25"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"w", "^", "2"}], "-", "2.5178707684000003`", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "/", 
              RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
            RowBox[{"DawsonF", "[", 
             RowBox[{"w", "/", "5"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{"w", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"w", "^", "2"}]}], "/", "25"}], "]"}]}], ")"}], "^", 
         "2"}]}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"w", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], "/",
   "Pi"}]], "Input",
 CellChangeTimes->{{3.8219649719156666`*^9, 3.821965240666183*^9}, {
   3.8219653504866333`*^9, 3.821965356661372*^9}, 3.8219658718861537`*^9}],

Cell[BoxData["0.6618698287649492`"], "Output",
 CellChangeTimes->{{3.8219650630401945`*^9, 3.821965155495999*^9}, {
   3.8219651950225906`*^9, 3.821965244170839*^9}, {3.821965351767905*^9, 
   3.8219653574777417`*^9}, 3.821965873482032*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"w", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822970798518711*^9, 3.822970820760745*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwcmnk41N/bx2eGbEm2IkpIZd+Xvqq5JyoUhUQlimbsyZ5d1hmlxZIiSRGy
pEghOR8RlX1P1ux7UXYzfvM8f831us75nPM+7/u+z3JdI2F7w5RCwOFwuaw4
3P/9Bo0bLWxusmAF7lnEczy/iGMBOxd7Nliwy5vfuHW9fxHP8A4sf1hlwUJE
j5Si/l9E8f/c6Df+smAD45rEl6VDxM+34zgGx1gw8t2LMVKxI0S5vZZby4dZ
sBK9oJcBPKPEhKJ9PI8HWbDaFX3qyr1RIqX3nYDxTyYjJd6PSWNEDsUuMayB
BbvKNTM3/WOC6P75mUTKdxYsntthcNF9kvjT3EHKt5YFO2PdozDGM0XMDVmV
Ua5kwaw7pU5NmE0Tz7SIaqS9Y8H2uvTtyxKcI36gjGgFvmXBfEP2HhJoniOK
r+VpX3jN7H8kMOTig9/EeUkiiTebBaOXdPniHvwhJnhdPX3rCQvWpkipHIcF
Ip1D5szlxyxY5TlhxW1FC0S7p/PGhx6yYJdq6ja1Zf4StWrCzP/cY8F0iBrB
nHv/EX8KvbS5GsaCmYy9dOZRWyLq5l0nHwlhwQ5lWK3wVC4R80ia9sKBLNjp
N8mEAdNlYpBjrUuzNwvGd1hg42rYClH84+RNkiMLxrW1/skpwXVi9NlC/912
LNiVAne5vdXrxIVh/6AVWxZsn3+wUbXvBrGKmzv8zWUWLP1n79qOeTrRzlrx
nrgx08/A57misThoXFh6sGHIjOeQoZMXAwdaVBT/w4AF67WyKO91xQPHG+Ok
B7osWGxs1sbRiwTIxXtm4LRYsHd87vISFqxw6FwOW5IaC2ZXYNAXMM0KNRm/
HFSUWTD1zP8wr4gtMKhnrGArw4J9z7B6NFbNBq5J1Ptr+1mwD/4Wl9+7sMP6
VMV8nCTTP8ZhkdZdHLDznsL7KlGm3nHc69cRnJAxQBa+LMyCnRNpWmzX4QIV
lRT/f4IsWF9gtx4/+1YwbOeC/TwsmBbvxRPvXnBDmMhEbRSOBSvizY97uZMX
eF32yu6lE7CsV6beDrG88PSTecyHVQJ2UH9j7j9ePii5+sV4YoGAiXOs2L8U
4YcThRuFt34TMKtnEYzYTH5oZVHfsWuGgOXc3hKpqiUAs5kvug1GCZh+2uBf
fXtB8F/pPjz0i4BFmPyoFGffARyn+FL9+wmYNNdkiFveDpCcDbHN7SJg7Pqa
tmYcQnBBzWqa+zsBa8mYGfyyVQTGIhKMXtYQsPu6/apjfSLg2VlXcLSKgP1q
FisN/iAK9/y0vVzLCdiiysRxs7A9IFrn3slWSsBci7IyD3mJQfbuV4eeFRMw
kqHtlRHXvVCFhOhNrwnYucAdxuyYOBjznb3ikEvArrmdTs09LQH9tlGVuGwC
Fs564U9QrwSsbFmMVHlOwDLW1a7G8+wDRcNWnvh4AnbqWjGL/8f9UP6U013u
AQHb6Fos8r55AAx+k9qqYghYm5CafKX2QSDHFTz6F0nAUnLjfNJ+SMPC8Nhq
TBgBo4rtcZkpkoEQDbHL+0MI2AcTXbbVR7KQ/CNG3NyXgC3b1SkxAuRBWrY6
bM6LgBUe43jxM1ABigPWR6LcCRh327ETJJoiNIs5vfrgRMDOtkhFXr6qDFso
eqq7rAgYSEc3nBlRhVZrFYvpi8z5tNU/dt1Wg9QLooGfzAmYxY/r9ZKH1EHT
8PcXG2MCZhp5YtY0WwMIJ7un1IwI2GX5h5JzzprQCFXb2U4x/dhJ8CrR0gI7
tUcXc3QJWGVBfFHE5CFQVQgNDiQRMMyudsK5+T9gHHBOP3OUmQ+ufUVGldrw
SARmFzQJmJKv1eruqiNAFpTh/6JGwCZ6v31Q6DgKyjwCWo+UCZjJEdbuW3+J
8BU/fuuwLAHj1ILrzbkkSFhvfrntIAGL/rLyyf3sMbi6WPZ9YB8B8827NZKz
dgxWJ+4JRuxh6tsjvDvdURdqhnz/MxchYKxLpS/NFI9DXK+ttbQQASvSEPkv
YuM4yDZrZtfzMvPX8eytlx9OwtI38YbUbQTMbmohr+OlHnyu4lpw4yJg/O/u
ZRHS9MHyQ//hHawEzEfBZf/Fj6dA+u3Xq+M4AlbC8TJHtv80/MspjCyl4zGR
kfNvT/MaQUxqVJPVMh47MJrjfzfzLFx47PZP6R8ekyzMeO0dZQxScZd2Eebx
mOqcQtQdXRP4FKl4LXMKj3m1dBWq9ZvC7RBhmu84HpsmGRKMP50Dcz9C/qkR
5vfSd045vTKDOZfOpbk+PLagK7HDN88cyuww0cqfeEzQwaQi/osFRF3NIcV3
4bE5oaGnhD8XwPRSAoXSjsd2Pv71e7fCJdhrFnxbqwWPRficb7cMtoQZI4cC
zkY8prJdcKfV6GUo0TNt7/mOxzyPnfYav2YNxocPiN2qxmNm+U1PG7uuwm4N
Xl3TSjy2I+C23CvMBiYU1+ylKpjtfrvqf5TawjvpkZilMjymcPhLQlv1NQiV
bHz79QMeszzXJv7fMBnO7C7pTH6Hx44Vbdn3Y6cdiOx8se7yFo+xDHJ2v7Ox
h0JOnxN8uXgMd4h6wuOkEwSzXHUazsJjF+MuCb0ddYZTdIP7xRl47C77A05c
1nXYuaz2jvocj20Xaz+2cfcGDP3Z030xFY/FhPR3Wze5wespdobcEzym/MXT
d3HOHfxH5iUZj/DYrY14WwdpTzjZ36PXnIDH3rcKH0HBXiDw44vLi1imfsQ6
7LnoDZjcc1rEPTxGGekc20G7CS4hgRl2d/DYTf9WczYdP9jVZoHp0/CYdfOT
s2ekA6DmgFqvbCQeM6w56lJLCgJPf54V7jA8Frf7MceJuBAQb5wU+B2Mx3ir
w19c4w+FBokvSi0BTP9TfkPfrTDw9047XeSLx7iPfnDeJxIBB78F2D/0xmON
Gh6Hf45EQvtui/CbHngssfR59OIEFULdVJ9dvIHHOvLzX3Ap3wbF6m0fD7vg
sSL2La2lX2KgR2iyc48jHjs0Wsh1qOQ+0JyrFzYpeKye9d6usJhY0EDPeIZs
8djXXG3NmeB4GOIPkK2+gscqxHztl7GHcN/O/GTmZWa85XmH+649hiNlKra0
i3iMo5ygmx30BCa3bQt2Msdjb7KTM3/IPoNEm4kkw3PM+FrsLiF/fQ66xVXF
isbM9Q5si41xy4A/HM9aeI2Yek5eO3+hIAueXvafXTDAYz4XqJnphblw6s15
zo6TeIy2w3pRw+oNLLOo7P+gi8fiX78n9j4oggwL7mNJJOZ8qm7jlu8/gEnu
+OWAo3js3HaU+EnpEzAYn32ttPGY7JNAsY/6nyHXNDUBtPDYDbktRiJXa+FC
pt8bCXWmPyHrcYfvN8KWNbN6FhU8dlX1AOGGezsUGilPjCow859xhOgy2gNX
nm9l/SqLx9iv+3sXSQ0D9+LY3pyDzPq0MY/jCZ6EUv3Ph2Ok8JiMZ36pb/sc
2KU8tXCVwGMui5Nf6pJ/g8AfX09jMTzWXSbLm2s0DZiu2X1VUTy2ef+tq7zq
KFx/pJQrKIzHJBp7/MsLB0Bkmqt2SZCpL3mpJeVzF9QSx4Z+8DHb+byJyvtb
wSuuklHGg8feXXwisGlZDxJjKSJPt+KxYf2v7ztyaqDxP1/NEA489jLrt+1/
wZ8h4O45U5steOwOUpBrLq0A6V+KrroEPFZzPU3Vb64UOtS5bu/fxGGmbB9K
zyq/hzDa6Ev2DRxzf804q6tVBEq9WOXkCg67UhiecLXlDfQqpfTVLeKwCX7J
o9nv8yE6/OZq/gIOG+GO/3XmZg5odpnuePAbh4lXNJ+4gLJgWFZRxWMGh9XP
eSSOe7yEB8GcRmaTOKwsgHpuNDAdjraOOGiO4TDH/ugYiYbnMLUfixAexmHj
F0pj2S3S4JHfk7S1ARx2yvS7up1EKhxv8Cnv7cVh7//2JN8feQLz4qY/Krpx
mGK/xY3ZqSRI9VL4l9aJw7iCjrHoyz6G0185eMPbcBh7uYKaXnIirIiOyFGa
cdjVBulObvWH8PIG0tNrwGHCGxnnx+fjwbQq+ZrMdxz2/Uq5yM6mOJBqH+mv
rcFhT15c9HAujIWlEcVLdlU4jFZ5wTHr7QP4uujbwYox9d8eGLaPuw9JbFXG
6eU4TEIJwnfM3AUnoW31x0pxGJYlIK/pHANHpC30BotxGKHz+1fHrXdg0GD6
6J4CHLbslxx9P40GhZc0Sj/m4rBLWyWPBd6nQrhziPqlbBz2aY/NW4P4KDAL
/FawkoHDKjzwN3++ioQDdwXkHj3HYS5/2EvNWiJg5alVpkYqDsNfNDkmzBEB
319nSbQn47CD3vuOvjcMZx6qh4X5EnCYLlV5ImEtFIi/IuMLHuCwN7lhQu9t
QoF3oYnnzF0cll/ZVODYeguGCCK3Z6JxWOKtlOTh07fgnQB5y50oHKYVtbW0
OzkEoqRe35IJx2E81CHc57xgsNBYWa8NwWGcYp0VFvVBsGYes8Dqh8PEbKIY
PsqBUG/feT3dG4ddJz+jq3oGQKqv+OQxD2a+ZStv20D+cCz53UCwMw7zF+WM
+e3lB/y5jEt7HHBYK/92Sl+PL4x81O/8SMZhdc+K1y1P+QKtr7d+xYqph3++
R+TITbg0d0D/0SUc9iJbbDCgwgfkN92qNCxw2PoEv3z+SR9oEt9S5mGMw6ZN
4v1223tDmspZDT4jZjwNylRLGV7goZP0psAAh5m4plwfSvaCnWSFrBkdZnw9
Lp/vGPCECa+bkncAhy16ynNK0zyhNLLyqcwRHOZK5ogQVveEy1nnE+w0cFiJ
49ni7YkekD4VFDp4kOlvLdm5IMgdvNZrN4KlcNi5kH0bCkR3OMnN77tHAofd
bC4T5MG7w5RCpuslEWb7fJ/zrbtuUE78M7myE4dddnIr7zN3g7tntSmPBHCY
5Kc8P1VJN1B2b7Rs58ZhVAUPu5bAG0AIE+7y4MRhOcOeh4+J3YD2OFtTPjZm
Pukt6a9+doU5h9nYFMYmWjV0PPZuhysE/D7q8mB4E4mq2G309rpAio3WBKlv
E7HPun+pSHKB8jZl8nznJrKyftWQf8EFGB/2XTb9vol8tYRCHXqdYa/snh+E
6k2U3Hi7ife5M5BSdpoVfdpEMeoht0PsnSHsFqeh4NtN1HB9j7THqhOkLxC+
Vudson+FuaU/qp2gmryh652xia6c0SPUxToBm8Hvw52PNlGE4dCSmLIT3Obr
kHscvIlUCf/8DgU5Qm54Y5a+7yZ6VnzII++cI9Qv1u5bdd9E5usL4yZyjsDz
s0z0EmUTKfAJpHP3O0Dci7Stuw030WXWl3Vmxg5QJJhMrT+xiT51RpykKDlA
e1Q8SxBsIj67bGS33QF2Oket96luIuvUq0KSrfaQrOYy/WzXJpIiOc02MO8n
H19S7I0FmONTX2980LOHXqErw7htm2gznnP0mqI9iG2Y9NjgNpHjjbyEWbod
gOtpC/41BqJkX1msHLODq4PH2z7/ZaA1mob1iWY7eFGtVbdvnIFe1WkQ9V/a
QZWmil77IAOpyRHvoQd2MJItWxXxk4FoFtwPOwLtmPW+5+NoAwO5/T252Ghu
B6/Os+RmvWOgAJ4H2xL57OB77caBC68ZSMopUPE53g6m/lt6wZHNQMlvUinK
CxSQF5tMdnzCQOZSV7CmdgoYPRjaKfKQgR41Jnj8rKGAK6E37vs9BiqxczO3
LqXAm7HG23JhDHSVL/Fj7TMKtFz4ytYbwEB8Gwke2fEUWPheGRbjzUCtlopf
VqgUUC945z/rwGwv+eEx4E6BkpvJTgVnGegY+7ttd05RQJLs/vKHPgPViohn
/yNR4K6x/iBeh4Ea+jKuN2pRwFZm6byZOgMJUY+UfztAgfodDQ+CFBgIcRL5
x8UooEnIqMs8wPSHdVrORYgCW3tMjq0KM1DsE+3ll5wU8KmVDpTkZyCCC++i
OQsFBos235/eykBiE0NGDnQynErrnPdiZaCaqr2nfyyT4V1MvnwqnY6Uu9x0
Xy6QQcwvwr52iY52dR9PbpglQzTF8sWf33SUxGaFzk6S4Z+Jat+uSTrSCrqi
KDtKBmsip7DuEB0tbXN1tfxFhq+yg6YuPXR03qySb6iPDKpCH+4+bKcjXL9e
cflPMqSw3Pta0UBH7moGuKkuMrD/IbNM1NCRWzx3hkMHGTx6DxP5MDqiaoZb
arWRofcrv592KR3Jzi9OmbWQ4WTxZNG1QjpK3/Z+L9ZEhjfPsbmYXDrqPdTS
dLORDCL3Hsm8z6AjZP2127+BDJH+ruSBp3RENzOQ+lpPhj92J55xPKKjcPXp
p9ZMvnRu90+VB3Rkpjt75CiTq+GvoGU0HVFMVxi2TFaU/342IoyONLyGJhqZ
/Fj4+e38ADqan/diu8Ucn2WL75dOLzqasFN38mbO7zp/BodzpaNXU7IKr5n6
fvTtPyxjz1yf2jtXGaZ+ne8b3qZX6ejRk9NmY61kyHvf9ibgIh2xLllyjrST
YWd6znSGKR2N7eFDEkx/Qu+HHmg8zWQlubzUbjLMBFywWT7O1H+pjftSLxnM
HZRSxIl0lKvhIXlugAyYGVuXgRYdicZS1aKHyCB7rI/PU5mOnHLC76wz47W5
6w71iyQdsXVXnY9jxteJzfbznCgdObMY+xTPk6F94RBdaAcd3fbl0eZfIkN2
3ZiHEzsd1fK5aPlskoG/5FN+PI6O1tXtjwWyUiAoI2GifHUD2Xbw3i9l5p9p
kI719pkN5HD4GdYlSIFyx11Jh0Y30EisRvwHEQocMP/TZtO/gfbrvIqqF6fA
umKqwbvmDWQQ59wWr0ABO1HviL5vG8jvVYDmCXUKNLMbIraqDRSsUdEgc5gC
GYOr6heLN9DlCc3G2wYUOBN3XpyRtIH4zhbKpzlQwF91u4Fe/AYaXI/XLXGj
QGbrV/cHMRvoGccileFLAQb/kSrJkA1kMuqiJXibAvnxknZ65A0U+Kxy49Jr
CnA//J37QHEDrf5wXOHfpMAhjVft3Qc3UPx0b+oEpx2QO2zpkhIbqKGotmFc
0A7Kd3SeKRbYQCuiZl02cnbgnFg+372yjqZFzjsSLzH3o0fRWvuq1tEL8SAr
F2QHS1q6V13K19Fe0Z3+lfV2IPljg1ZcvI5+8ftvHvlpB/7Cbj/1steR5EZF
RuaiHcgkmQe53F1H0adZlUnM/ZWWvK+q2GIdfRGlzV3PtAe9p5/O6M+soaEj
yV8n3zrAn7u9G6xja6grk3Ip6bMDJAev51QOrCHRE1uM7NscYObKf+yH29aQ
yekCEetF5vkgWYwUytbQbUFGW7G2I/Rn5SkL0NbQH51LmYQ6R/ApfMLfv28N
4dbdhGvxziCeXoYl71lDY73eovI7neFbfLerhdAaEvc7pPZa1hl2ewvVNXOt
oanLmpGcZs7wWSs+vGp+FX38kLsimu0MPJ9u/8tGqwid7ynKOe8CmbV+nZ6W
q0hsR4qTQc11SFL10X1ltop6PBUYhoPXIeapx5t+o1X0RfvSivvadfDwdL5t
QFpFSxxELnElVzi614q4d/8qaj39hJM72RXafUiZ3+dWELrzIUfMh3kfOMDu
IxG2ggpfqz0NT3cD64iEHU3Zy6hoq1uy9ksPaIQldt8Xyyi0E6wUij0A1i3W
xFOW0dDDXcMKXzxA3EN0wOP+MjotsHf/hVEPGLryInunzzLqqIxbMz7gCXaH
3xy21l1Gh3sZDk05nuC6UGcz27eE9pi2os5PXhB8leX1VoEl5D7t2efLdRNw
CnuRbuQ/dNJz31DX9kD4eSeJmtuxgA5p2F5pZAmF3VwOr/7pzKPLa4jS3hYO
1hX1MZJH5tGTds/g3IFweO6h4masMY/WR8SoQdPhcKBnTTPv4Dza7ia8zscS
AUp5d6uvcc+jrYnazqsqEaBzpmigteMPEvxWzp5zLwIc4xg73jr8QaPa+mrf
dSIh7+S11X6bPyjwp+PDr0aRMLdW28tt+QeF2pw3rrgQCR7XYtMdjP4gkhfX
hfuukRCoLqUirvoHGc7bXKlOigSx/PjHYsu/EVEu/NGVuUhw1pDd0rP7Nwpa
SCoNvR8FHltKs3y2/0aPlj45EJKiwL9D7xQ/4TdSRkdZbr6IgtvelPsG43Mo
Lio59HBxFOQUp+0qeTuHsAC+84o/o2BSQ0jx4ck5dPXwm+9pElT4syWzWfm/
ORSqFLBuIkuFlQ51z3q5ObRvukZlUZUKHD6mJSx8c0j7zWd1vuNUkH5/V8ej
ZxalbFk5kkKhgr0mq8VZt1kk9U3u8fBLKriyxa9O2c6i9CsZjZn5VPDplEiJ
Oj+LapOqJS4VUyHKB3590p5Fzavz6Q+qqZD53t9ZfsssulCQ8vm/ISqMas6H
cCbPoLJn35tsRGgww3ZL8mXMDHrOI3hPWIIG/zp5vpBCZpBL9Y3wTwdpwHpT
nsuXPIOEufmetKjTQOqDfcKY4gxSvGOoufcMDa5p9WdXVU2jhUg3Ds0gGthl
a5mf/DCNvrKGil8Lo4HTrliWbznT6O/ggFQIlQZu67rWjbHTKON5S3x4LA0C
0SuB7ivTyMYl2edjBg1ClFkqLc9NI/vHXZetXtEg7Pll1/6T06jyravnbD4N
aOHbvw0rTCPprM72rvc0SNDzDp5bn0Ljwb5DrbU0eFTSKOf+ewqdrcJ9Ga6j
QbKMdPffoSlU7r65d6iJBmlbe9RWv02h9Zq6kcwuGuQ3kSZZHk8hBsdvtTNj
NHhDSk6MujOFHLMWr32dpMG7t391OUOmkOIvy4tKszQoi89M5bGbQunqpkeq
/tKgxoLbbJf6FBr4oH0Lh4uGb18p+JSDU0i5fvVmPyEa6v9Dr8VEp1BD2X1q
9pZoaBX14JQiTKGlz4ZJuK3R0BFT9z5zcRIdaNd2v7ctGn7Qpcgyk5No3fce
NwdvNAwMdFUoNk+iTL9d2hWC0TBkrOLytmoSif2de7G2MxrGKm/vUv8wiR6y
2wdK7oqGmfSjXv+lTqKxhrdK6nui4bfgI4ny2Ek0Ecn2a8/eaFiI/NNIjJxE
TkWEwgXxaFixT5c57jKJHD8dvWYlFQ3rPzY6a65MosvOv0X/7o8GhoF5hMG5
SVSJV3rpeTAa8B8LVOpPTiJ2h4jpfuloYJXnHDijPYncsh71qMtGA/tT25gW
hUk0eU7F1lsuGrh4yv8zk5hEjH/aLmny0cATsmO8U3ASTbuisWKFaOD745pw
kWMSSbtMVxQrRoOgzddjvesTqKRm29AzpWgQbpX4bf17ArEvPDrqpRwNoroB
Kb+GJlAXWQypqkSD2Lt2A3LnBJJkuWjWw2SJ/YrLY98mUABt3/R11WiQSqRm
OH6aQFcXgtynmHyQ/ZfJzJsJVD4V02GsFg2yvtqbrhkTKE01ectzJmN9Z2SH
EyfQrsOmzf1MNte9dt4iegIZcReYENSZ/mbfvFUXMIGe97z23MrkMJ6YXHCd
QDFPIsXXmP2FvdI6i65OoPaUpzqNTH7d/Q4vfW4CfVF6XM284cBx+CafcmIC
PThxJvYAk7sz+ix4D02gGb6W+BymPleuhbAI2QnUluf0QYDJrG5sr1d2TyD9
d6njNsz1JXeIdLtsn0Dn5mR5HzL9UD6sxPoLP4F4p9n35DP9qknTVTr/b5x5
njquvWL6eZntwqVvY+PIRx5LuMP0e8HZJfJo9zgK0ir5YcKMB63l1pu3deMo
sfNw0QYzfmJaD3v2V4yjsW2efDEy0fAu5RVb8ptxFOlXPbjJjP+gfevlsIfj
6KDU3egEZr74NIxRl6jjaEifF4olo4Fbbb3QyX8cyRbW7Clj5pcWYx/nuSvj
SG3XOz633cx6uHZIvdZkHNF2b9kiIRINtt8Mrxw+Po5Wiyr6ioWi4V6Cd/E+
mXFEjL7NuM3PzG/ZWpt/C2Oo4mfCyV9s0RD4oCfGYXQM3ft5Na+AJRr4l35/
6O0aQ/0jS4E2zPojVgrzfCkfQ6vJ0QdurNLgoYVT2cOoMbRc1rlPZYoGsp+C
Rzn9xpCbTLjdLma9Y5LxvMHOY6gI9zZ35BdzP5z9aGdnPIYmqPu2S3XT4HjE
NgEtkTFk4djIdqKGBj8nJYi53GOoyav54PFK5n52VtNx7+Yo4g5MW9pfToMn
IlcQ+8goWrSn+MW+pcHCmzfOP/JH0epNYWn2JzR43neu2u/YKFIZ0piyc6CB
6ojqWrv6KHrixRBhsaVB9RSfsrL0KPq3EkGOtKTB2HLTkzGeUWRpsl/zCHO/
leU39DzXO4K63YpiPVRpUHjyuKTCzRG0ftefHb9EBV2jfRdoTiPIQbhpnT5L
hfZzhHvDViPIzFZhfXCUCktXsdWk4yOIwtkkcbGDCocDjrSw8Y+gtza4s/xF
VKguUL81mDeMWk7Nyuc6UuH8e4H3h9OGkafcLyLXVSqMlS9MJ8YPI65zCcln
zZnn1/c3Fkb+w+id3pDBXR0qGI3IK5XpDSPpvBazjl1U6BTe3x8/NITCtKrj
n1VFwXjojiN6wkMo7WX+vCNrFHAFFfyO5xpCRZLEPfFLkaDoa5A+uPELnTq8
u+3ZRCT4uAZx+f/6hYINNzXJ9ZHAZjn6Iy/nFxKXv+j8JC4SpNSLvfmP/kLH
fXNCu3dFgu2YWUGfzSBakM1WtxaMgKhfc7ayZoOIY+t9JQXmfSOnl7bz5slB
JH485cbwfDgstJYH8coNooK2aQu2pnAghBg8jpoYQEF78/llaeEAKpMtJtsG
kOn4IbFtS2FQ9lD6xIR5H3K1dl/3rwwFDsvxa/gjfUjiToz8cH4omItnholI
9CHPN3SO/5JDYSFnH2Y43Yu4rIvvv/YIBRlM7PDbkF5k9iAnpEYyFB5PCar4
Z/cgxeMVeT9CboE34Pdwr3WjDeKJx1LWwaA82f1P6WknmjOpbycM+ILXHwUZ
oYhOlFRg+tqo2BdKlkOtGE6dCEt/xpdwxxeOscnW1B/qRDpv6sx2HPIF033+
jxzbO5BepP/G0oOb4G0lop2+tQONWlo6PtfxgbKWSyE7/duQ5ydL4nK2Jxwv
6+Gkmzejku8HMhe1r8PrnJf/1R5uRg9Q5UPvMRcQfnLDMVa8GakuJSdrxLlA
5zJb3On2JuTUYI4PmHKG/QHmvE/XGlHi0aFVYqoTfA5d5CbpNaD5qeGSWgEH
2LinxhY1+A0JHDxw/Alcg+YbtRSRnG8ofvapzt1FW0g3tvzy2vMbGpTO2zKe
awun+MMjuti+Ibk7+Q86d9lC0sNWgozCV2SRv8e7Zu0qaKa4b9b51aDpHNaS
jnQrcHtVsMInUIX4LGrHCWXnQZnHNVxn8DO6GqQiuX76PMx7yPN45n9Gyhfz
x0f6zcDjyKt97XqfkR9lh2M8uxl4N704kxhYiTryn01Qyabwd0rOQKMeoZ0J
sVd1Us6A17ts60Q7hIJnr5a2DhjBUtB+r2UcQp2m8+3e+41ghXfvs1KNCpTQ
fc9w8/1p2NDkXzz6rBw9uzjj5PRXH9jCV9JOepSiWrdfbENtukA19H6fxV2K
zHFJwj/+0wWOnQt1HFklKLlpvzXnCx3gejW99L3nA/qVKHX3gN8x2N7Ub3j2
xHv0auhXE18kER48trR9M1CM1g66BMp7HwV+2x83+fyL0fvz7wiDjkdAcLHl
Rdvrd4heafRQwkYbhEW/rFgIF6GgJoEef6omJI0c4yktLESGOs3tX1M0QOR1
xT4Ro0Ik/1S+q+G9Ouw5VnKmN/Qtoo2GI65VVdBtNDeo7CxATf7W7hevK8FJ
G2Ov8K0FqEFeR0R8RAH0/xk8O0F6jT5WnjajkeXBUOTo4rdXeehAw7ZoszAZ
MLfb97w18BXKGUwieqtKwW13T1pccTYiv4zfSt+QhE+BVTdM57JQgbmA5O9m
CZCKv0ZsvZKJuI5Tt+rJ7oULqUX74x6/RDeTE0x6ufbAnVcs20xbMpB/SVao
PUMEFlB6T4tOOtLXLPsbJCYEB+r+fo4NeIG4vrgXCJ3eARc7dXNM3j1HTx2N
9KtvCwA2M+zbsj8NbX8it3ZDlxcmfttjkp9S0XWd9Nwl321wlo3j/gvFp8jj
oPZBciwXiKnpy7/gS0YLA7vNXDW2QKTBxJpE+GP0fFebwN5KAvO9Svv2/F8i
Uvin+e6MJw7O+Ug/lrB7iJKLtuRufbxBLIv5ave8Kx79u7KxPSlxhSiR7qAh
YRDHfG+lPjIb+keklXKwPi97gK4eTJcwDJgn9j8zeXnswj0kEPS2W7hqhphf
H6tz7PAddMKgUkFHdpwYsNoyQBKjIaOhDi0Z+SGiwQH+IBI+El1Im7lYGdtD
FDpnKkIaCUUHvtdtzOPaiXWbUjdC7gWhBj0RCt6wjuhw8eWrYLObSIkqnsRF
qCSyFu0fCRJxR30LkqcN9QuJpF2GR9cwCtoQZNWIiX9K/PM4iTyfZIoOP8qK
kErzJgYSEr6cPPQfxLIqHDQZ1CUqJl+rFdS8AovP20oF3e8R+3e9ndu63QVc
48Pn1ZOziefUfpRHHfOCT7QcV1pGKfF9t0UYNcAfVKorD++Z+kLchk3vq750
C+4Zu4msv28mQnxuVPXNcJi5b0xved1FdLdznqxOiIKoj2dk/HoHiC/+kzP8
8jYapoVNNiaejRDbuadff2mMgTuPGlIvz0wS2QZz+Gqm70PP4+Ln4W2/iSkX
NbSvRcTCw6+Vf9Nl/xI1dB86D/PHQ0MDB+1ryRKxUX4x5drzBAiQjDsimbBG
xOGKN69VPILroie370nCQ9KkoMqIYRJ8W8lhcVljAdU2L1tyTzKI1YzqaoSx
ATlT/Qt55Smo7svU4N3CDfT7CUsjUc9ASSxPbxtuO9QdWYsvvJ0G4twhRfm8
fEA+cOmL6q4XIEe+UGzlLAjKolz9HoMvwIjWu/uSxk6gby9bKsxKB063xUUK
vzAkru6SVtN8CSfPJfTc37Ibauu7b6udy4asB5Xb8+wlwcH3Z62l3CuwKTc5
UFe4DzikelgjWHLgovuDunWO/XAqoDe4vSgXioK8dvt3HoR6mQEPb8ECuJvp
26+9qAAuHQMFT2cKQLqz/rPWYyWIIrkt2dq+gawNjq2c6cpwcMZN7Y72W5i4
aP9J3EYVHHQ98numCuFrtqlI9x5NOJS0UPfbvAgMTfQcbES0gOO3xxRLVREo
E35TD+0+BK+SPQ/KP3kHHH//Pq5U0oapea/ngaffAwtB+FXFQyK4pN18uCev
FPJl5CZi5I/DkaXlIhXhMughfDom3X4cuA19W09ElIEBCNbpBJ+A/GXf7a6X
P0JEUs/MZPdJmDvjH13B/Qm+bP4tzn9tACXBFRUFmhg4Hnhjer7uLKS9YjSU
umBQdaOH56OhMdDaiX1VLzB4G2vWNv/OGC7IovUunkq4G9seVUczgdUOdAg3
XglyjRJ4xtFzoK1QWWj8qArcssvvVfeag0Z7Z2LFtyqw1n+YesrIApQDZvzl
N6qA47yV/ocKCzjwTUiXw6YaBnxz/hzNuAACFNc2JPsFnGZvZbf6XYKZFNF/
ihU1cLf1v5jnRtbwjNtHY9voN7Cee3X224lrQPDZ0Uve1QzxDFsGZ6ALXLqa
01qi3gy2HdP6ic0uUHgKvnEbN8NBr8KYa/uvg+1ex/fvoprBacePpo9N1+Hz
1/IHrP+aISOrdIh48AaEi5JPZDS2wIP1kY8af9yAtbLw9XB4G6jNs7SIlXoC
O7dxqO1cJ7x9kCvdRPGDCwcvYZqcXdBw+PeZ03F+kKND3uSS6gKxrJC7qMIP
zvj5BhVd7IJ3pqpC94T8IXEszY/1SxccSLvSUfTVHw5UzrtnPvkBEtG3MrKk
A+GET7ztlP5PeJmCfIJ7giEx9unzims/4TzXY+zvlhCYyMsajAv+CcddZV2N
lUMgZvij9eF3P2H8hj53RUQItBuPXIrZ2wOimtNxijtvAVlO45ziUg949Qgv
Sny8BeGDnboe6X3gk7ntXttKKPSXnr7uW94HbJrrT79zhYF2PJYY3NEH99Sy
WN/uDoM/J3Imb7P3w39bOQ+fJoWBdW7Q/XTnflDWshF/G8Xs7yPV0642AG9J
d2IkecNhdct/paK2g3Bq1rQ9l3m/zPT425DqOggvdZ6v6UtFgNlA/pBEwCAM
nHp4vEUtAt6USHJLJwzCT0GN9hemEWDnzH1FvWYQ+vfoTJ+8HwHtzQOsRrK/
wGbjKjmQNRLePIkyDl74BToBn4XW+iKhTiBqfDtuCKb+ct0anI6EsTuRwc+3
DYHd5Cue3NVI2B0YkVctPQRinY8MZgSjgHY5jGPrlSG43La2tvtUFFzdE4w9
qhsC67ItSwcKoiDgYZCFTPcQ+FWLl578GAWJ24LmysaG4KJMRZhBbRTU0wN2
9+OH4esDj/nl/ig41O/nK3VoGJqVTBqWuKnA+8xb+W3GMPR+VfL2uEYFOSHv
Wp3CYZCfqF8pv06Fk/e9rNvRMNwxz+6YvEmFwBDPmOWfw0Bd6g6eukOFiSvu
E0f5RqBJ9MdgVCEVMPHrad+DRmC03Lzu4BqVuU+7aF2+MwK39T+7PiTQYInX
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
       "]]},
     Annotation[#, "Charting`Private`Tag$2261#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 9.255594712205576*^-9},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {9.255594712205576*^-9, 0.9924707514833697}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8229708090580893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2.25`", "*", "w", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"2.25`", "*", "w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"2.25`", "w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822970838451748*^9, 3.8229708868492355`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
C/aNwgnN3O97biRIPRS4UD05Cn2seOJrPxJ82fXnHMSPQeTotlxNLAkuDPr6
8F0Yg3L/iQPKhSQ48txT/GX+GKQe/aDL1UcC4ROeTRcrxwAshb9MDZLg8gOP
O93oGHTeqBl4OE6CgGD3hPVfY/BxVpc6bJEE02au00pM41B8S/PMKJEMxF6X
4A6ucbgZuH6smJaiJ7VdjluIjMO7XumTtw6RQQdxVotQH4dsp9yqi8cpevu0
Y3Zr4DhoSWaxkM+Qof+Jw3mT+HG4P/z2tZsQRW8dcWj/82QcTJxNcFxiZBDB
2+8ceT0O1x7UTx6XIYO6r11ybu04fPlKVWxF0XeWf+8LSXeMA96m1TaZov+e
jNga6M+Ow+yvk6KPVcjwytB2cXp9HOjdg01t1MjQ3nUvyu/ABHzHMQyxqZOB
6rPN66zTExB7z0KMX4sMp+Rtrp4Tm4AJY1nBwOtkkK+0HsUUJsCsSKvjrTYZ
nHOtjozrTUC0jIpfhw4ZEn2fZibenQAOQfzHB3oU/a/dLiDnMgHcZ0xGZQwo
950lvhkLmACuvt3dWop+Xtg7r5IYOwGlbbW80sZkYOxx+HohdQIO1FfeS6Do
b9EXOYZjuROgw39wsJWiz7Uieib+K5+AbO1zGYsU/e5gTO924cMERFJXvdqi
6PsESWRvtHkCAlosFecp+r+UzjPuvx8TQKVy+kq9BUWfDhcdvzA6AaZZtMth
lmSYqxrMHV2YAKYdM02Bu2Q4+IDl3H/bEyDx9bH16/9/H7HRqDlPOwmX5cDk
rBVF/ysFqo8enQR8zGnVUAq2O1r5PYF7EgqjecQ/U3Dc3KTZebFJuLKqJzdL
wcWfOeZH5Cfh8cSaxyYFtz7V9klQn4REMcvNRQqecYmkOq8zCaNdXL+/UjCt
RvXDEfNJELHtlU2mYIFTi5wJjpPwMcHsJELBGmu8RbJ+k2B8pYjUTfHP9quB
zEjUJLyIaZ/XpuCY/P9q45MnwcCPnuoNJT6y/+drstmTwMGAUuEpuPnWet9w
6SSY6NhRy1DyMSUoYhP/fhKaiRWnb1LyRY23WJZpnISontv2upR8nulNCRr+
Ngm61PJ7KpR820Ttp8rMT4Jz7K5JN6VeUabSvMMbk6DehRj6GZGhUPp+edyB
KajRSNqjpdR3YvRb0xDXFPw36FI4rEvhVzWNTpzwFOCYdX4J/v97WZLisPSF
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
       "]]},
     Annotation[#, "Charting`Private`Tag$2931#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 4.6856442131855165`*^-8},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {4.6856442131855165`*^-8, 0.9972219002915327}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8229708882955027`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"4", "*", "w", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"4", "*", "w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"4", "*", "w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8229708659295225`*^9, 3.822970865954508*^9}, {
  3.822970906880165*^9, 3.822970942733313*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUWHc8l98X/yx7FErRQEUoIRqUz3mSKJWkQfbHjMzsEUI2ERmRkb3K1+aD
5wkhJCorIzs72SP8Pr+/ntf7dc89933OPfc8930FDKzVjAk4HK6PhMP9/2v4
IfzP7i4D9l9als6vrQjyvi1eoUv/GLCQXH1NHu9X5HrFdG3HdQbs76nUiVus
kWShwYrPswsM2Ezztd3DYlHkbhEFnPAcAzZbyia0WRdFDnBoO284xYBpxr0W
UNN7TZ5mHU3tHWbAEPIospsaTY7XsPy5b5ABKx3QeP72dgz5VtraXtWfDNhD
kdKR6/9iyPmXWD0avjFg9lS3myZmcWQb83MaRXUM2JlQ3yFd/wSyQCkaNo8y
YN/LLkjhdd+Sv+GVP4lUMWCHznjv57yUSJaO0z2bXMyAxd9m3ZtBSiaPj00+
7itgwD6Nv+2xfpZMjpawS+LOZ8C4Zhn0+zaSyWuN/qyh6QxYJntGNctOCjmL
i/NqUwoDpn7y2iqr3zuyhl6CCzGRAbuqMVcrzJlKrlwtmHCJZsAmM9snpC6k
kT0Ef2Im/gzYxaVxik15Blnc1mgtxYcB62+JNTpgnEkeqpoXG/BkwOJYH8vv
cGeR5e8T4+85M2AROcnL54KzyUtJoR1h9gxY1f53Xr9u55DTZg4wNtswYGmP
99u4cueS6XxOOyBmDJiOSpSLYmUeubStNNfNmAF7AUJv+1/nk014r4yUUhgw
4u179884vyc3/ffgjpgmA8ajwNC8IFxADhnyEOG9yYCZ1vb47YgXkuVOM+k/
UGLAOmPZemapheR5p8jo8KsMWBKBUiJ+q4isuieLyHCZAXv5IJ/7qmsxGa91
Vlb+IgN20DglX/dgCbkwo8rmmTQDNnHMlc2YWkLmIncMLJ2m+Vceau7aW0au
D9TaJy7CgOGOXyTF1pWR7TvHlc0FGbActZSeP27l5C6LzbKhIwxYVONWLd9O
BflN/PFXX9gZsG3HHxp0KtXkHIm4lDJmBuzCDYFLwYo15MpP7P+l0DNgjM4/
u2KVUPLPPxtfHXboMW2G9hsKhRh52tf6l94mPXY6SOZ5APKRvMkzPn9jlR6b
lqcQy75/JPMqtLMdnafHzN+qGwYz1ZFFe68dYZymx/Lun9yKyKsjy1pRTy+O
02PxJSLOCg/qyZqxGTcbBugxhaeaWz7ln8jxs+6BVl/osR+/z79saG0i5z1f
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
DAk2XI3vKCTMkXhq8oeFOSRZ/VYZ16Hlu9zQ9/iUBbyzoHad1CRhr5ujn62U
WkOa+Utd84ck7GdLRxbjU1vIfGw4kadGwq7lX4A3iB3kmFyw+qNCwq7UfGmw
uusAeUYsq5I3SdhTpd3Xp/5zgg8Gv57ZK5GwC6WmcWHWrlCoX0RXdpWE2Qv8
6dNLfgYluv6hG0DCBi7uUdV97wXl2lr7L18mYeF5wmO2I95QqSn+1uMiCdMb
Wtmj//wFVGsQBT9KkzAJtymNxowAwB525xElSRh/8H+m8U4hUHs/V1pRjITJ
cmt+54gMh09qnlUBIiSs9rP6Kot7JDSp3lNoESRh4+FHIw8Lx4BoLGd6lQBt
vrgeMfB+AoT86qB7f4SE6X5kH7RJTYF5oQiTJB4Sxqg+3/rIOgNUrVQbw/eT
sBuNfdWnbuRDYckeYW8OEjb7n2Xtw+oi2LfdFmDHRsKKfHueD5RQwVEhbMqI
iZbfK1mXLrrUQ0/wbeWHdLR6j/Jz0T3SDrLfWXOV8CTss9Xgcf4jfZDA28oi
s03EqFsxanoCv2GHEmwhukHEckif2uaa/oB+tvKXQytErH1PtZ9h2TTULjCd
YftLxEY9bDSuJA3BiYufw3ZmiVh9Zv6lWvkf4OcZ8OfPJBEbrlNbrb/eDJMN
SqrDY0SMvegk14h0LSizM/z3bYiIWX5K7GxNroS8Bw0c9f1EDC4Kx3neKwb2
ty+elvQQMVLpxx+6bAVgM6bwPeMHEbvKsm/0EnsOfDtFko5tJ2Lb3AlB+knp
IG1XFxXYSsTUYm4q8yi9g+hK7xXXJiK2bntEhN4gCdbx8g8t6olYou/boYxb
8aB5A1+mgxExnQ3v5/6kWKgKxw7cqSJi18z2RfU8fA1HezydkXIixv/tXnw8
XyR48UGvZDER6+4/cR5ViIARkx2Z4wVE7OOdNxN0Ji9B4X31m315NHttlUeD
ZSGQseK+RZdFxLTqOqb/Pg4CRrnL2mupRAxnzn5B+HEAmPtuVU0mETF5bXVH
3iw/aG2pPPIznoh9WZKjFz76As5wuXq0xBCxAGvv1NaPPhCuKfOrKpKWn7vV
UidCvGExZR3evyRikrNFOWFOz+H+VFlyUjARC41pGjf39IJSCSd8hD8RG8HU
NerBEw46nzfw9iFit1Z9Wj1zn4ErulJr50kbH57/knbZHfrpS44buxGxAi13
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
yzTUbfGstY2PR//3nw3+/z/b/wKNUvxy
       "]]},
     Annotation[#, "Charting`Private`Tag$3844#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.1324876266549776`*^-7},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {2.1324876266549776`*^-7, 0.9932774580448911}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8229709336176443`*^9, 3.8229709437274227`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Features of \[Sigma]-\[Lambda] parameter space", "Subsection",
 CellChangeTimes->{{3.82513866932417*^9, 3.8251386812295876`*^9}}],

Cell["\<\


Features of \[Sigma]-\[Lambda] parameter space\
\>", "Text",
 CellChangeTimes->{{3.825138640873025*^9, 3.825138663199598*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "=", "10"}], ";", 
  RowBox[{"l", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.824244729310049*^9, 3.824244733405076*^9}, {
  3.8251385191822586`*^9, 3.8251385683038344`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"l", "^", "2"}], "*", 
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"b", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", 
              RowBox[{"a", "^", "2"}]}], "+", 
             RowBox[{"l", "^", 
              RowBox[{"(", 
               RowBox[{"b", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"l", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "b"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"l", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8242447440762043`*^9, 3.8242447840421*^9}, {
  3.8242448283203144`*^9, 3.8242448387570815`*^9}, {3.82424488467575*^9, 
  3.8242448995653286`*^9}, {3.825138535337336*^9, 3.8251385454459953`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
XVwk8F6oRZluBgn/AwKdbKI=
       "]]},
     Annotation[#, "Charting`Private`Tag$22569#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.2, 3}, {0., 5.230841224850609}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8242447565127773`*^9, 3.8242447942288857`*^9, 3.8242448499124966`*^9, 
   3.824244910252045*^9, {3.825138561429273*^9, 3.825138576053254*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", "10"}], ";", 
  RowBox[{"l", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"l", "^", "2"}], "*", 
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"b", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", 
              RowBox[{"a", "^", "2"}]}], "+", 
             RowBox[{"l", "^", 
              RowBox[{"(", 
               RowBox[{"b", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"l", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "b"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"l", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.2", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8251387014313087`*^9, 3.825138733944668*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
H7e9xBE=
       "]]},
     Annotation[#, "Charting`Private`Tag$30876#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.2, 3}, {0., 4.754576223008936}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8251387461000156`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8251387752386045`*^9, 3.82513877533241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", "5"}], ";", 
  RowBox[{"l", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"l", "^", "2"}], "*", 
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"b", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", 
              RowBox[{"a", "^", "2"}]}], "+", 
             RowBox[{"l", "^", 
              RowBox[{"(", 
               RowBox[{"b", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"l", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "b"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"l", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.2", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8251387014313087`*^9, 3.825138733944668*^9}, {
  3.825138794707589*^9, 3.825138803222682*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
h9m5
       "]]},
     Annotation[#, "Charting`Private`Tag$46397#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.2, 3}, {0., 6.038645325502831}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8251388202370815`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", "5"}], ";", 
  RowBox[{"l", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"l", "^", "2"}], "*", 
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"b", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", 
              RowBox[{"a", "^", "2"}]}], "+", 
             RowBox[{"l", "^", 
              RowBox[{"(", 
               RowBox[{"b", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"l", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "b"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"l", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.2", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8251387014313087`*^9, 3.825138733944668*^9}, {
  3.825138809112894*^9, 3.8251388094253745`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
Iyl/Z0qsdjHwP3U0tvM=
       "]]},
     Annotation[#, "Charting`Private`Tag$57894#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.2, 3}, {0., 4.7434179068139155`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8251388303301277`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8251387801461067`*^9, 3.8251387802555327`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", "2.5"}], ";", 
  RowBox[{"l", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"l", "^", "2"}], "*", 
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"b", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", 
              RowBox[{"a", "^", "2"}]}], "+", 
             RowBox[{"l", "^", 
              RowBox[{"(", 
               RowBox[{"b", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"l", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "b"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"l", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.2", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8251387014313087`*^9, 3.825138733944668*^9}, {
  3.8251388150655456`*^9, 3.825138820080841*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVxXk0FHgAB3BhmFzr3ijn04a3qeyTdfX9ZdUrxpAsasoxpB2mXC9aIrXb
diPMJj05ppCNbKynrCz7toxzjDmUUr2ciZox4z5294/P+1gx4wKOKSspKfn9
5/87nf0NC2/xED5003mtSIrQpyxB8x887GdlvW6ulkLm9VPOuz4e1JSs/e41
S7EhoEHLTqMD9G2luZ9fSxHF3kRpTO3ALN9e5aKlDKsl4woRoxOUxInjDjUy
3NiiXL+Q0omgeJNvn/wlg03NxkSz/E687Jp7mdIvg3cTfTqqqxMDnpd3Xl2Q
4aaofnTGvQtP4sd3bd43g+0a5yR65t2o/VxB5X2awd85hRwn124EJ1HNn1Pk
CPqy/uChoG7QmflLypvkOGMz1luS1Y3oLUeznPfLwdvl275trRsOr+0zqsvl
YCaZPPZ924MyuptZxUkFFAuOKQnLPcjk0XTllxS4lElz4mzoRU8QezKLq0DN
9bO/v/LvBWxdrOpeKLBUMXI/trUX2cLt7gP7Z+E9HdLtdYCP6vP0sFbXOeio
1d29EM7H+d5rea5H5yAw0z7zLI6PSS1FoV3mHA77ttrvy+IjpPx6ccLzOcQ8
sLvk08lH7uCjf8YY87gcs+gZsKcP6dplxll3FkA7H2iaF9iHqbcFIZm8BegW
1kj7I/sgtzilq6dYQAGPWfL9+T68mQhnmdIXUWnbuRLS0oemMlcTO+oS2kdv
N4a5CBDtUJ0SXbyMa6uK7JJ9Agw2anHHRMvwN/Y//i5YgMrq4QAv7RUM7FE1
jkwWgOUynsjNWMH4XXZSdJ0AH0Y85b+wV/Hgz2feFW0CMNw2cROqVhEvtLQe
7xNgKLlqPXNiFfMqIj7rswAdY/LN7Jg1qEd6OJzY2o8Xx7xvfHRXIh2pNyk1
7v049JA2dyBciWTlSl9N+/TjduzUeODPSsS47d7V+Jh+hAb6CDx7lMhXVjoT
SRX9cInySN8Rs47sfTPETbUSgntFuPGHZ8okf5Tf0LhNCP/lNu88mTJ5P9XG
m/UQov0sW/OahQrJXC7/lHhYiA9p9ceX0lTIY5M4t9g8IQzNTNrioEqoVhH0
+6VCuHA5BXcTVUmQ7cGIsYdCYC3JU1yuSmQ7nS9GdgnR5ObR4qNPIV8HrgkY
FBEm1QtC/GYpJJUhHbllIIL57Ul3F0c1wmO+n5dYibDO3sYrNE6NRCc8Nw/c
JULhcnZhxpQaKc7KjqGliFA07NTqsKhOpjnn0q9cEMFQteMjZTeVuBcl5bTn
ieD8BXci9jKVDPwW3OBVK4IBa+mEscV6os+zUPaYEGGr07g4IkyDhPP1jNLm
RLA5kMm1rdcgDyUqto8pYvhwqKpSDU1CGx3zdbIWY11Bk2nXU01yQaX21laG
GAXJbN+W3dpEqFH2IJYlxh31Xl5ppTax1s9vuZ8iBjcjwmiLvg55anl6ZHO+
GKafipjpUzpk3oPsMO8WQ62q65R9lC7Zu8fR68igGNah2smlXF3CodkEF06I
Ublz4cjQsC5xZFDTjdUkmBxyHZGx9UgmczE70FACw6qFk9I6PdLL+liWay3B
qtYGvsqKHmGf5rfrQII6v54XzRx98uRs2yDNVwLnsZUfOSP6ZP3F+ukrDAly
OB803zkbkHJOgaH6aQlSpnITvxs2IG8ehYev1Uogt0yuLg4zIvSGX7tO1kmQ
nhYw802CEfkXIUVrkg==
       "]], LineBox[CompressedData["
1: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
Tk39+vdrcZS/1+B/qY/gPg==
       "]]},
     Annotation[#, "Charting`Private`Tag$72859#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.2, 3}, {0., 5.360549737843823}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.825138839970067*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", "2.5"}], ";", 
  RowBox[{"l", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"l", "^", "2"}], "*", 
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"b", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", 
              RowBox[{"a", "^", "2"}]}], "+", 
             RowBox[{"l", "^", 
              RowBox[{"(", 
               RowBox[{"b", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"l", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "b"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"l", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.2", ",", "3"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8251387014313087`*^9, 3.825138733944668*^9}, {
  3.825138825080473*^9, 3.825138830189497*^9}, {3.825139005559696*^9, 
  3.8251390139496946`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
kWM5KxPrYnvB0TtrGqWznPwfdO6YDA==
       "]], LineBox[CompressedData["
1:eJwVlGs41PkDxRnGj0E1SpQU0pIkrSwpna8SS6sIUWxWuYeEbNlKkYhat0XF
Jl3IlrS66CJlu+wg11wyUipizX2GMS7p7//iPOc5b86b83mO/p792wNpcnJy
hTP6v2sGN65Iojho04ozjWbOJQ/oyc3a+hzsvymhnP/UICH68j/WeXOgtagj
f3Ylk7y/OsfrqR8H5WkVe1blMYmHsV7QvSAOnH/baVAczyRkFU4Wx3Lw2UJt
NNaeSbRtjz47nMmBkWRty4OeOaTOe9zahMXBiWVvdS5pzSEmmaLl6VZcTJ8/
qGn/mzrpfWJ0TxtcqHEa3Ta6qpNMzs+kxIGLQKWq5rvL1MmYQ/2OWk8usno/
egla1ciLr5eTxmK4KLaK1ElbpUZ27/Po3XubC3FBYyv/K4Mwz6eFiKq4WJ+y
qDGsm0FevHomOfaUC8rFgr7xHoOsMFjJuNDEhUvRH4KpCAaRvaVbtXC5sApr
Cz7xWYVkO1Rlrl/Ow7SRXfeTXmWyOZanU2/Ow3HXi32+NcpEVry01Muah9wj
3c32RcrE72vGk2hHHtJ9Hydy/JWJ6d2Q4euBPPBzu6SHhynySn+hveZlHnJU
He07KYqMTx0Z4y3k4++XndCLpJNogwS9CX0+Xg7J7+72opNhxxNOSsv5qFmu
MlBtRyfs7OSCxVZ8VLi1ucvPp5Nq49+xzZ2PIVOnxTHPFMlxj6KU2+l8+Ivc
xi4sUiTKN2u1Yqb48Eln390ioJHjrc9JgoIANQuNFp3upZFx6cvQdIYAJVud
P/U30MiwXf3jK9oCaF5v3iW9TiOvu9r82tcIkPa09OOhABrJUOgvtYwQ4GTJ
+UM1ffJkvo+StaxXgNz7DTmnuXLktcmq3oIBAda3vJzLfidHEie8EsET4FSw
xrh9oxzhnS97fWpKAPmFSsKQW3JkT3jJ7TR1IVTD2Vc+HZAj1jecNi8wFaJo
rmlZy8Q3DBhnRv4QKsQwJ4nxq/M0nmUa2ilHCDHoEDvcaj6NC7IHc9lRQiTF
b5vroTUNV9bHB0cPCWGb9Lrvdf9XVAdbKLxMEWJWoisj5cRXZJd05ruXCIFt
Gx521E4Bhrq1UZ+FcHL/qb7BZxJBrm6V5oNCeCvsf8x2mMSZI8lXhMNCVGno
nFf6fhLsdl5ylFgIc6WM1XeVJ3EwucY5Sl4EtSBh4S9VE7jxxa99/xIRlPmt
UU0LJqBVdnkw0keEQ6XXMi+IZNjQ0fnWzE+EI6e9Bvs+yBAgr1rP3yNC8p3r
HNsmGSp3xtyMDBNhfPUtj3U3ZHBh2B+IPCzCp0yrpQiSIWnfwEREvgjW/6Y2
OfaNQbDSeFbEGxE2uz/Q3flZCpnnxq3cThE6NjTwVnVIQTvm+/s+tghFEcuO
zf9XinlNmbPCPoqQZGkQr3FDCpvI8VnBAhEqrfQNn8dIkXyrfra/qhhb63lM
MSWFzqoIpucmMWyNXw58sRmFoVeKW7uDGP3j3zanmo3CLKE4y91ZjJxLufk/
GIyCNHcwt7uJcSo8/tlDlVEE7d+gsc1PjPnnt6h7d4/g74rZc51+E2PN3p5V
/fEjcDSvnGd7R4zWB1V1Na8kiCz/oKFcJcb71cseCx5JkGeiznzzSIyb97Lc
V1ZI8MUwRD30n5mcZLKiKV+CUwsWK+W2ipHnsmvX1VAJXtHSxrgCMZwaH+3O
ni2BQ4c/u9BUAtHh+gvje8XYHM+8NHVNgtiCN+5JK0RwlRjyTpVJQM8yej5q
IMKucGsbZrkEbz9v6dq/UISo3X7ty+5K0NtQ8ypeRYQLG8uVt/0jQeC+ycrh
GU74DKcDxe8lsO5LjTeZ4epcwfGNDlojSCu1fTpsNMNttaA/I3UE3s9UHjkc
5WNu+nxh4JkRPF6n27E1ko/1O20n12WO4JrzCYMAPz4yRtOYQ/kjqNLJZ963
42ON2XcbSOkIynknYkeV+Dha5JsvfDmC0LIsu/YcHuYk1jm5KYwi0fxqZ8l9
Liwdr9zSODaKY8ofpNm6HPzVHfq288TMbpoXPW8yOdALN6cVJI+i6Gy8TjOd
A0bWE8+lZ0eh6Lm00pw/jPfsrimLwlEk5T0f2PN0GKci1bZ4PprpO98QHr93
GG9zDw7mS2d2/aKzcnXlfzjS76inu1+Kzq3Rqs+Dh9AePXLuUrQU0SQu5I/d
QzCVL2YaxkkRaL1QIdxzCD26E7QVR6Uou6TbvXLTEGy8bg5Yp0uRmlj9y+Ti
Icjq5tzwKJUiQcu0+kHXIGIqui3PfJDCbPWQaq7LIMLi922Z3DaGzQF/rit3
+oJpr4BJ1iYZzuTYzE7y6sdas3cBYUbjaKR/UEqp+4Qorc1xOUoTSLlbwd0e
9xEuPyap3ZRNzPxV6/vVln1oPUB8z7En4ZGQYKXt+x6Tn9rMY5unsMRijLMk
4B30g3eUdz39in0sd/Opcjb4n70/z7o0DePv/YIdSDf8r5tftMz5huoOqf/r
ni7UVG5S0V4nR5wLY+TOVXSi7kKw1s6/5Iig41p755UOlH4nHWQulSd9EYyh
nwra8dbMPvdujjwJ6k4VCh++wTv2lGKzOo2cDNAU2LDbsEbhoNubBBppcM9R
PLSwDYx7AwcKZn48172wsDa8FXcYtR49IQrk6bfk9os1Lah45zOPzlYgvE6z
UD3jFhzb7p9X4qFINllv78nXb0aDmx9XtVGRZI2HbWCrNyG8cdESH1s6eTFI
u/pJtxF9XPt5BlV0cjDvYOdDk9coTTX90masRJpUhAc27WgAt1ztjOM5JeKS
YFkaml0PxV+9RiyYFOF6P4wtra9DVLX/WkYiRWy3RTyx0KlDV8rPc2gnKXIv
6qzIRrsOG9x3Do4nU0Q2kfllo2YdVIddc/87TZH76a80PGfXoUSLiFhZFKl4
cicsUaEOPdGLy1KKKeKX3d4jx2XBYXmPNr2WIhpLlvamPWGhfKRTMPUPRfzd
LpeVPWJh3rO2VyMvKGJddNisroqFjzvqY/tZFAk3MvyFUcnCkZMPW563UGQg
Vds3t4SFyg/5qYl9FCkuCzrSmMHCghs5fvGfKOLz2KJi7AwLx+Myfojup8jq
nyzzDNJYcFFP6fcfooiCeWtC/EkWhmziiJ2QIkORbo++P8zCVqVorbViiizW
Lk3ZE8fCvdYIvvkIRbq7TKicGBYSQwIL9WQUqc1+rCONYOE/C/8Y7QmKZHv9
eNt4Hwuu33yd50xRJOk5TeoTwsL9em995WmKMOk3uBmBLOjmeci+faOIUoj8
Hy/2sPA/Y47MhQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$86668#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.2, 3}, {0., 4.767037100513294}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8251388499863515`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8251387838645945`*^9, 3.825138785708277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", "1"}], ";", 
  RowBox[{"l", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"l", "^", "2"}], "*", 
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"b", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", 
              RowBox[{"a", "^", "2"}]}], "+", 
             RowBox[{"l", "^", 
              RowBox[{"(", 
               RowBox[{"b", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"l", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "b"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"l", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.2", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8251387014313087`*^9, 3.825138733944668*^9}, {
  3.8251388586420364`*^9, 3.8251388627471857`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
r+2hTPwLECEAig==
       "]], LineBox[CompressedData["
1:eJwUV3c81e8Xv1OSzNKUBpKUlpLoHNEQJQoRiiIkUYp8Iyu7CFESQvbKDJnZ
kX2vlZWdrTKK+/v8/rqvz+u5z3POc97jnGeH4T11IwqJRLKikUj//6Vv6kmV
Oj4CGrsGvmzV48Xn1Y0fe4jvo8FGLfk6vLj1L++sf8YIXFV1EBLL4sal331f
kvJG4HwR3YHPhxvbpj++qigZgQ6GxG29m9z4akjt+FL9CFwX2hjHzc+NXE0v
HQ3GR2AVV3JT6SMuZMXxch8QGYUxH83NehfXYndUX6+SxChUMcnMIvG1+Dns
Y/rNw6NgwBlYbblqLdoGqmkGy4+CjTP5Zm4JJ04/ffluRW8UFq7KNtQc58R+
TV6JuqBRaBE6+Vz02BosVutbHno3Coerdi6ubFiDYSof60kfRuFTzLeIDYsc
qHNK7cGRjFFYtcL5ju0zBzbve5n3tn4UyJN7vlQocmAZjVfJjH0MPqhM1Bwx
WI2x6TzGq+zGQGG+U/hBySrcdnT7w2XHMYgtj3roEb8KA3MlXefcx4CnxfVH
1ctV6Fh8MbLn1RikZfCoVRuuwqvffLpzPo4B33sZw89sq5B9jF3LZHQMylYL
B3BrsqHJDvK56qs/YezYLfsGbjp2R/NoFV3/Cfc6N1a6/6PhFbHtxlnGP2Gf
atgz/VEaoiS4vrf+CfxhJkdNv9Bwo5x98WO/n9BgMWnx05aG1VcXpcWrfsIm
vgY141EqivvN7PE+Nk7Ue3nJppuC3wt2Z22EcdjepNGmWEdBv596GHNmHIyK
TFz3fabg/JkazRKNcbjE801BLYSCZcuRLvMPxqHwabdJpxYF9e9c+X4zbRza
irRWlzPJ6H8mx092zwToyb65enuUhKetJ7bUHJiAPAdlEblOEi683xWrJT0B
jfu8R3bXkfD6sm/B/bMTsP/s1vATH0kokWkyFmc0AYYX51Y07UhYsWOz4vrI
Cbhp+iJOmoeEi/+ezE9sngR7hZef9weswP2dT7cv7ZgEMQPx9Tz2KzB21kmJ
bc8kBGiZh6+9vQId/s/ebjs2CVz3rz/WPbECn8VegOrlSeDlDvmoMLgMjlfC
3dO8J2HxhvzhtSeXgT2pZMODf5NA/rvkoEz5B46NX/ApdQpShq5v1pr6C4t/
yk29OabAgU/01OOuvzAmX5MftXEKPJsuhJJy/kIts+l6y5EpOLHn3JUNd/+C
L3UgVuruFMiUeacqfl8CgWts0gvfp2DWN4o9pXYRasUlv78dnILpiLPPhvIW
wXlJyxkmpuD27b1OR+IXYeJNfK3bvymwzdA14HFbBEPzmDSvtdOgkBBW/AUX
QTpR6fQmiWnwLWObWcxdgEExP4ujptOQ6tTokJ83D8V+wvLsd6dBJsjOyCBx
HkIWPvF3WE7DhuibGRtD5+FSVd8ne9tpEPct5c+3n4fPtw9Ty92n4eOSS9dX
+Xnwj2EEX46ZBrOFNUv0uj8AwoIllj+mYWrx0pz41G8wvqSWfmB4GhZj7oat
7v8NPk+eRU2PTcP+X4Gcf1p+Q0fLxDPL2WmIV/fumc/7DQ+fFZ63JM+Apvq7
3e/cf0Pi0PWWe0IzYDfN+qe76zdsiI8ctrg2A6djxKUkb/2CqX1iXHebZ+DO
+dX9D1fNwYLGqYvjjBlY+5H92ejyLFAcdF/c6ZgBoY9y3ka/ZmHdNz8us74Z
ON92JfhR3yzIWCxy3Z6aAUquis/f/Fl4llLDbbBmFsSfVvJ43J+FLZJ3eTUU
ZkEg2ZNsMjgDZw+kr5PLmIWPm6FXs3caLJJ7+NhzZmH2yuL6OeY0BImv5W3O
m4XTR/tDguqnYUjYZK1p6Sz4xO20mCucBrdN29heNc6CS38hUsOmoYLiNT8+
NQuf7LvmH+hNw5lWg45QiTkQ4Fv+V1g6BafteCP+fZiDlVGjt3fmJ+DSnPCE
W/wc8BVUZmSNTYCOubQMb/IcXCGLn17dPQGW+tdbRDLnYPfd1Ym1ZRMQciqZ
XbV0Dupj+i2++E/AJIeS1fvuOZjr1bphQuju9VvHU2c2/IIO02nGxfuE7j9P
Dfh6/AKuiqvXkrgI3/AWmDby+QUKfmShvdSfIKst9/eE3y/Y3yzqnD4/Br6/
vXhHgn9BbII7pbN3DI7sFz2Jsb+getp66mXGGNiH6wZPl/+COvP0Yl8dwvec
q5XUqL/hwErZd9+UUZA6G5XC5/AbFF4/MRszH4EnA2e3C977Az9FR0+l4BCY
2d1R/qs6D8stJc8sXAdgRevW3yqFBfj1wGjt44F+OL6/65bZ7kVYp1z06pN/
H1huOP0ogG0J2jsvBc9Z9MKFcy6cSQtLcL/SciwrpRsarVD3dcdfsPF6nO7Q
0wV/+5sOWNcTOo5d5IwW6oQdtzWTmUXL8MnlOc/ewHaY/HH1B1fECjBFvwZa
XGgDkoKiQ2fUCjwZFXgBym3AFym5KS52BZrLjrJfPtQGwuQtmdaJK/BP4uqm
dbptIHWDTVU+dQUuBws1jHC2wZmimdG1GSvA2Dx0PlenDa5u++7akb0CLa49
MtfWtYGZfZVQbN4KnG8JkDq8pw2edGXkPShcgYReHy3fg23w4kS4BpauQMjb
kbfVq9ogIsRrmrNiBbhOzUW3ibVB+uJD7/bqFbAaTTDYsroNyq4aiMbUrcAr
1yThezxtwMhRKbnfuAJV6v+O2BP7RwSkdaF1BT5l0GqUKG2w9HDX/Jr2FZDU
TDrdR2qDNa1c/m1dRD58P/yUJpmw9ciSxIfeFbhgG94rytYG+wMGK60GVqCo
/U4smckEnG0wPDmyAkZ3FKltf5igrvZ5mWN8BYzVRGxSJ5hwKy32NXNqBaSO
ZUtxZzHhEXfA4ei5FQhw3rAlcmMbeFg4fLOcX4F1fcPMiVdMCKkzNZX7uwJC
FTGiZxeZkCShQeNgrYBN/PGmm3lMKPTGcAaFBYkeDRzvS5jQMLZXJoqNBQ37
H/PsrGJCn9KG1nscLDgT5kA1JuLNxlEsZblY8DR10+OCbCbQ2Cc5VvOxwIbf
/9ijFCYI3G7/0LqeBfJOdQ92JDBBrKIMIzexwJpf7iwmM0FGJK3TQpAFiymm
PVteMEHF9e2jEztYIHl0gJRaxAT9H2687CIsMPg1rWRuwoR7p+4ntYixQOzy
zLFpIl/H93pn30uwoH704REhFyb4k5T67x5gwc1u1avHDZgQff2IvcwRFphy
ZlilNzEhu1Bo4yppFpjwdzya3MWEKsE1Gc0niP/nelvmEvE6nvy5EAEsoDw+
sVdSjQnjnX0j5gpEvnxdmX3WTFiWqXM5fpYFXqSFnyH3mMAV8mkbmzILjM74
P2Un4m1fjMptusiCSNOoklXE96GrvlfC1VnQ+aqi0/IaExRz7KbuaBL7Mw8k
h19hgqaAsZe0DgtqEx6OhRDrJg/VROj6LBikX7utfpAJdi2yxY0GLFhzjJru
acME78Ni18KMWBDvZr3TeDUTQv35/5iZsoDji1HcDiMmpMys+B27y4L7g0Pu
DQpMKL40tpdmxQKtpueZvwcZ0JTaWtFgzQJtTdB+lsiEAa4Sg3e2LMgZpjBU
Mxjw527SP9MnLNDId4xZS9yPvS44+KgjCzKDjXViuJmwWcLlENWVBfwbHtu/
ITFBwtuirt6dBVuv1LYmijHh5Ji2Sag3wQ+q8YztCgMuKZ2mmvqyoOlQ+rO6
9UwwiDsQJhXAgqQTf+se0on7UykeJUEsED3T7Mwizjuv32x1IYQFSifiP69l
MeBkbvS19ncs+LZg9b2bOO/Qukenjd6z4Abt6Ga5RgaI3jsrORPNgpJryRuN
9zBhS83GTfZxLGBz2sGScmAAj8gYZXUSC1ZukrnCbxH8dMwfD0xlgVvW1iO6
SQxY6PBhbM9ggW27pZvTGwZMSOkXJ2UT950IL5JzYkK/n2SCdB4LFG7XPpKX
YwDjJymwrIAF4e32/SfXMKHmTJP9pRIWhO7zPHGHzISi91G3u8pYELvQPDFg
wIDMf9ZqJlUsyBNZmg0UZkKc1pkTv76ywPPceH2DBwNC0zeIONazgOonoJLF
YMDLtaNcnM0sMEtexK9pDHAzyVsIZhB4sX67B2YxwO6Ld/+uDhZYFqc90Sfy
t9imV5v6neDPXSdngc8MMHy8P/tEHwvQ2+mNkzMDNFtY4ZUDLKjgayqtrmKA
smSj5+UR4n7CC73sMQxAr8gHPT9Z4DpZxt++nwFHBh/o3ZliQRBd4u8LbUKv
ePrs/CwL9opMnObqb4WtbwUOuvxhwUCv862fiUR9/wxv5l5igSr7sfttAkyg
q+XS3i6z4IH8g6YnH1phWeO0TQCJhFKqfPL7djPBhrrfXJtCQg3Vr0dNdBkw
myZgIEQjoVdc6W/mbgaY67M0BunEep7zu7XdDBhaM3I+cRUJN95d6yC+gwE3
chvAajUx5172cQp9yYAO49wjx9aQsDh+7EXmNQZcWRe5Z5mThLb+aZFemgz4
VuK17QsXCS/7mkucJr7P3XvA70nMtaSTqi1qjxlQulWXXZWPhB2MbfZL/AyQ
rVFcXreOhFsUX6qmv2VAts2+2Y71JDxL7VdUlGXAQRGB4YgNJCx78OH55tpW
SGpa6TTeRMIS/Qi736eZIOo43CCxhYRNQRMGW1VbIWJfQ/nsVmLOtvLY3WXJ
gM2dn/I+bSP+30QjD/9kQKDH+1SH7SRkzhXK2PG0AtdRr2jFnST8yR/sI8DO
BI8f999wCJNQ/JZg9qc1DKC+vPaiQYSE14JOhfxKbgWHk4ouQbtJuM81TvRD
EcHnnxK2untI6MNwe6hMrN9/s/7uzr0kPLXCY+1G3H/8zIrBiARRb5aEiwyN
Aca/hjRT9pOwtH7uEP96BvS+r1e2PkDC1U8oZ0I5GKCj+gllDpHwgoz1rkii
/q3/IqRIR0jYwBO40b61FS4leIpXSJHw0vQaDYPNDKjRui/kc4yEmzMC3LhU
GKBIv7ZO/TgJuzljJ7pXtUJhusLqjSdImMvD7frrDOHvp56sbZUl4bliv1Vw
pBVWGjN5/U+SkFNCZE+KTiuEGUysV0XiHfJp1iHZggkwI7KZ8xQJU06SWl3j
W6DXUX9btQIJV+1ZDh2dagVHnuCdbqeJ8/f/JZc2MWB7RL2owlnifsqGBXaJ
LVAsyb6XpETCiAcRpD3vCT4VoWTBeRK+vfaOvtW7FUiqjw/bqZDw1+fx0PkG
Ar/uj8eOXSRhXJ2Fx9G6VkCLsRO/VEnYa+X1KbqyFXqXd+JHNRKGXjGY/h1N
xH9+TdHiMrHfwWbHw4hW2C4YeG6vBglbo/vAYwMDSpJqVUY0SfhaJfjkE95W
MJSlq324SsI/qysnttkygFIrp2GoQ8L+E/f4CtRaIfLaI20hXYLfuuujr4+3
wKmfKXpdeiRsk6xhF9In/Mlu2ODNdRLuiuYUst3XAs4c2401DUi4ZlzVyvVF
K+wMuWrGf5OE7A2vr+04wITSPS8tGm6RUH+VE6fD12YwzK2+/9yYhAWGJ3eI
HiXiK1FszpuQsJaiKaugxoDINpn/VpkReogoeSa8tQUUTB48LbtDwiM/re29
CL4NzCe6ON0l1t05BfQnWsDVfcD95D2i3i6Ud5jaCsIbBH3+WpKQrebOgSGj
ViiL0fD7dJ+ELcc+cG5zbIVbR18EPrQm4fdmqz0Jtq1Aq6h4fegRCS3jTIRj
FVshWoMVOmVDwkQSp8bZyVZQHDz2PukxgZezG8f88xYYsLb8YPofCTUfnxea
1GaAKy0+XtSe0PdCvNMkjYgf2Jf8w4GE9SuamW8VW6B81+b0CEcS/t5f573u
NROMM9Sz9ZxJ+Bwk+AXSmoFNwTtvsytRz8H8JQNGC8Q0fSlkPiPexQ2uHZ7E
/HTG8F9poDuhL4MVd+mjzTA0c6RSzZOEcmcvPsp1aAU3p7tfubxJyLEQ9jef
qI8ob0z9Vx8Sbooqfu19pRkqIrqbPV6Q0PlSIda4EPo7sKHttB8J07nk5IyI
eGzFql0UfxIeJaloCvG3QoyqR29RAAndhefl04l6nO0pHnjyioQvR4JFUg60
wojF4sjxYBLO6288pS/WCh4rByf+vCZhUZTuxXMEv8RemM1khBB+cvlCWQOR
X5Vg1G/LUIIPYrplt91bwCS5c3FfGOEvnaMSB061ArvcupWxcBKqxLFqRmZb
Ia5WhRL3noQbSslA+9UE53SfsRlFEfjuVGwVMmbCyM8Cjp0fSHhCPdz5lnML
ePz3h6snhoR9dZ/1Db83gdgaSf7QOELPex/4DBPzdHXI7Q3aCST05NZ7rVzf
DAst8Usnkgg/e7cctupdM4hxj3/flkLCGf+af1/SmKCltL+EnEbomUEqlw9v
AjcXy+iBjyTkrXdxGzIi/Lkg3b0yg4hv1Gh85mwLDM7/MkvIIqHfQ7FL04Kt
sO7QsYvPc0iYdGb0TmVkCyiaPz5omUv0o999cnWLLWAdk7/ucj7Bf1vHmN7B
FojqXZ6XKiBh8sce+vk7LdC0GTs3FpHQfpV5r8XXVqBoOBf+LSbhdO3fItWz
zXDIt+x9dykJA1VqQj7JEvNNNduzkjKinpnnjoobN4EfVckkuoLwQxHO2uKF
ViiW81Z2ryLh9pBiza2PW2Hapm6/WQ2Bn/GsnVF+Iwilc/NdqCX8xmzMVOy/
Nrg4rvZb8hsJo9dc3JDK1gwOooFtfA0kFFHOzd+0uRlSbjDyfzeSkHVbfHMT
8f74HrIxvK2ZhJ/VMzl+NTcCZ6uOc34rCZV5E+lc14n+xv3OKIxJQqsruru0
xpvBXKnnnFM7CR+17V4rnNMCb112SNzqJPzceMj2+OUWqCm4yX32OwmbHzqP
0r+0wNL8h9k9PSSkZtqqhgW2gPihkVbOPhKKcp3tvs3fAtrm4rlT/YS+xs1T
FroJPsaYhzYNEP3zbGXqqGsTfOpNeZo1RMJtAxsmvIj5YmTzjOHrEcKPqCJZ
LLkm2KBx+Mx/YyT85L2jsE63Bc74PtyjP07wo8xp/ewfBjyqzuGUnyT6ZW6T
mJ5/A8RQl6Z2TZNwoUK2ZLsnE1rlZJvZZklY3trOzXG4BWi2Dtmjc4TfeM/1
cW1uhCPpxW9qf5Mw/BWPxonV7XBrnGKfOk9C/rlAHYumRggQPX3Df5GEehvm
WSvHW6D0hrvCw78kjH97kH3WphVmQ6pFry4TenyoE/mtswl2tq7hOMEi4e72
BxwlG1pBjfvihCCZjPvebm7fdqEFHJX8GkhUMvZIpW3xkmuBNJemjB80Mhpd
5KkfukH0r4J1wRVsZHRvsdhWXNEC3AuadvHsZGzKXbXzDr0ZTh56o+fDQcaD
e6aCpOpawMK8E+9xkpH17dP1scoWCIsRFFbnItaHOO9+HGuAut7rq6R4yCi/
Vufd4Mt2+Lc5cmwDHxnFr2oLu/9uAAmNgbolfjIqW2euTn3bBLq+oh+/rydj
TsAa2TDBdvCuNgks3kBGpazvOmfN6yGPmmgTtYmMX10TpauIeWZMbkLHbQsZ
vTf6Jj8qbYVNtpInTQXJWOTNpOw/2wDn0q12qAiR8UzllgOPtdvAdjyDJrmD
jMtlshuYzxohVvTPMO8uMrJHrNtxKJPwI/3E+y3CZNQ1SvpXsrYZRoJuLAeJ
knFNRc6LFb0WWF2/3kNbjIxyN47JS802g/iqr3xbxckoUhIFwyXNoAyO77r3
EvfRqaU8EGgFcxspsff7yGiTHaAWbdUEz1PH0m9KkvHGtoVA7U+EXobD5UQP
kvHuC13nsHsMqBfSqBo5RMZd4gUVNj++wbQWx+XEI2RUCd715J4fE3j8ir7f
PUrG15H3RTo0W+BglbXJAWkyJnuytn9IqAN1kvjc7HEyJj3okftq2wb3pXvs
s06Q8UukNXWO6McBloHstnIEnnvrajmt6iAzTilABsho7cZj3WXRBq29K4LL
SEbKN6szOkHN8GdjZlzRKTJ2uVzaduVUPQiomR52ViTjtfzFK6cp7XDMc1uh
4hky+tiIWl3c3QhXS5rPrTpHxs6aNFNXwq9sFz2aq5XI+HLjncCgQ83w5uBJ
fR9lMr6puBujdrIF8kznRi5eIKPOeqWnlKhm6Hwf94BXlYyOvvPF+461wL92
vZXmS2R0yrZ/xtjfDFv5+D2D1MkY5ss3U034q9z5Kn7tK2S0bC40tOtrAH1n
+7AtmmTcIm0tsmjYDg55h/Z0a5FxYSKleELpG4TPDmdEaJNxxwgrbmZdMxSL
vzt58xoZI5KOhw1vaIc+Q/VqET0yeg6fK3i//BUob1ddGdEn44Vpzn5V4WbY
2fy5O+EGwc9JEQisaAeFNfdN7xqSMW7e2exo/1e4pbD7l+QtMho0vrS9ENsE
rv91OcwakYl+dOvlFZt2+JDxcnXWbYKPG6/wkZxroeLnmUAbUzIyhHkHnNNa
YHjXv20yd8jYK/dZ6/uvFmDX/Rj/z5yM76sHPZrFG0As0PhIkQUZY3I/St8K
YIBS7ZYiJ0syJl6ZS+YXaQIzWqOS4n1CX5sj2G86NIOXrFsLmzUZzy4ori1y
b4ZE6xPXqx+SUbjArfbLSCPUJk2PetuQcVxU2kuon3hvDnywvviY4P8ZkfD3
D+uBS/Aai+c/MtplX+hkEv1+vwaPV/MTor71B9jeyLeA6vPydUEOZPzLG8vz
79ZXsCy3C7/qSMasb9eCzFbawW9ZUnyLMxml9cNkVKEJPkoNZn53IeMH29go
D74aaLobAhHPyPhvH/C7DrfD3AfVGkN3Mh44RDmesbcZ1nXTNEQ8yUjtHBcw
s62GIwJ5PcNeZAxSCzzFfNIGGhfvmSX4kLEwRtNzPK4ZHrkJ/zZ/QfjXFfqv
d19qIKiw/amkHxkTPj+zX8pph5w/LzhmX5KxfLKvXiauAdr2K77KDCCj4Qc7
yq6pRvDgpbJCX5FRP2WlKpGvGaR/lZg8Cyb8U0rqP0XRFhhhODbdfUPG9fMj
rzfyN8PrXJDVfEtGxVVjGwoFWuBc6MqHk+/IaOEpxOm6j5gnHAq4d4eTsaVU
MvPW60aIM3jymPs9GTsGy2c47hF6UTzxYz6S4POpHcJv6Exg372k0htN6K33
3N2HQtXwaXVudlUMGSs+/7Vp0egAk3Gb7R/jyOjbHrBPKbsBNtYf9XqTQMaL
8z9uGElWQ9XH33NOSWTcExdesepuN9gGZuqZpZBRNVBGTkGhDsRsHlSqpxH4
Zck/vfizBtq1Dx08kU7G8LtdY2z53QRfZkJ2ZRL+EviiJFe3BmSE0mic2YT/
fj8sLuveCGPkexa/cgh/P7Vafp0YA0IG9rV15ZKxUmBegt2lFs5XjsuX5xP+
p3zo1M+DTFiKT0xMLiAjku5knkxohAQfs/VBRYRfpj4wJL9pAp17e546lBD6
6Mt67hraDBzqIyPGX8g4svLgol894fdHYtVVywm9tkSKn7NlgtkG48/HKsnY
ELFV2iGhBjYvCYturybjaduLFVK071DT9cOX/SsZ28J78jZEVoNdUeTidC0Z
l1xu2PH91wDikQY327+RcSB0nKMnvgM6XLfXlTSQ0Zz9zDfKVDl43e45mtBE
Jua9iiQzAj+Z82ER/i3EeunPS7bEfD4mocfxH4OMfbquc/zXyyGEe6v1zTYy
emV9d1usaIXzsx3flTvI+Pi97OvHLc2w1PLm7JEuMn7fx53/Z7ACEnKuftza
TfjHA7rdvYwu0AnZsIXeS0bT0AcFaeFfgcOe4TrRR8a3dioLVwabIe/6q8nW
H4Q+FPVTOpQbwOzUlauFg0R/eJUp9TqjBTaL8JfGDBN+feKt+9XnTVCzqmmv
7ygZxe6Ju5+mt4DdmN8rm59Ef3tIub81oQnE61RZ1yfIqOGxJnH4dAN0pnKZ
npsiI4fJ33+Sq+vBx7+u6cAMwefAt1Gs/DaQfegju2mOjCkrl/KOHSuHcS3l
GPJvMo7qvvo+LtoGoTIcPGN/yBiduuWx8MtGUBGsfty0QMZSQVNLC8ky+Mdy
/5G3RPA3zNucutQJSf1nLkT9I+Nez6ELzX31oFtOz/FeIfBREf7mplUGnHFl
261JFJQ8k7In/lw3fPZy8dKlUNBpT/zO8w61YH731C9FGgXv7g4VNPaphK2X
yPr72Cj4p9w9ZkCuB2oPFVeuZ6fguRvw0dq0Ep6sf3pwZTUF3946VDi7tQ0k
FuTeDq2hYOvBH3e9z32Fro5/tPq1FDyYdSHDNbsRHPL3CwRzUzAFVJ+yUapB
KPTG7uu8FFz8+SdobqwJip/4S+/mp+AJrZSZT/sawFCvTGlqHQUP8Plov61p
AurJPzo5AhSUzhB+3U2qguhtYuZPNxL5J1c4H9XuhTMsbfuzmykEnsmro2Mr
YLjH+wX3VgrOuv0ULCVXg0dxQThTkIIq1Gd6h3/1gfj7qbRwIQr6DKUmuaaU
w1enHaW3d1CwUDmr+11wOZgbXm6W3EXBPUcSP7Y/7QcuhWcD88IUzBi9VRN/
sBpSd+X8LhKloKzjEof6pi9wiTbK5iFGQTXH6CW9gm6YHdi88ZI4Bdc+bmYX
n6+DwHKVPRslKJhc+PCCWMAXkIpxkOndR9TjzDjXmHY3MNzSlOMkKdh3mpb/
Lq8GbG/361oepCC9RPkat1MtbDq3zkL6MAVTEzuVc2aJ/i525ilJioKDjWEu
R982gO5qW7+qoxTk0a14Hr6rEZZH49/7SVPw4hjnj1vnGiGspjP9qgwFt8uf
xzCbOsDEtWXbZSkY5FIB7d5t0OcNrSNyFOw91JxdlF0FzuZWQ2lAQTGNjJNy
QXUgfCFq3laegjWaXH07PDqgfF8ru7wCgRfLbox/sgSMuVZtXn2agiyB11nJ
dxqAfUp6b+MZCr5O2B1leakTEurNZN+co6B9tuIbb4ESUE4LvWBwnsCz8+LS
luPVMO73TX+PCgVP7z9orT3QDy+sSJYzFyjoB4cbjDm+gKT6IadcVSJ+zch9
8tAXaDh0y99JjYI3hbgdbFJ+wH3+oCilyxRUstpa/iq0Avh/VWbyalCwQ2pR
mi/qC2S2LJa3a1LwWFHFgvjGftDM2st8f5Xgb3wi5WRjOcy/0hsx1aFgcA3L
pn+iHl4/8l08qEtB22qDrlPWjSCjVcKxpEfBVymS5GPHmqDz2NyW0usEn+pL
/ZJHG+DJRpF9XgYUjDGP57Yg6r9tUfOk+k0K3vj43C34Vg0Ut3uobjaiIOXS
2H/93R1gkJd3o9+Ygtc+j2Zc4K4g5qFxqwQTCrqE12T+ja2F6P+2udw3o2B5
otdfHuyA07qXAmXMKRhayP/pgFwxDMk6f6BYEPi+dZ+aO/MNPAQzs2vuEfU6
Efmuq6kL9qwMVvpbUfB2lcv373eKoKZ7Q7vOAwoetr+jFNxM8LtIaWznQwoS
aCxVmgzC2oj//o49IvSaEvqrxaoUUhyTOTNsKZjnCef1u4vhkkGP4H92FNTZ
LMSdsdgPM/K8kgpPCH6ud118VlsJ/jsVcI0DBTd7MUcv3CuGI9SHas1PCT5a
zHJs/dEL/8r/WPk7UfDkOF69lFoJXzxs/dVcCL7nt8b0J1eAl/JSOs8zgj+r
8yqLoR3UuZ4017tRsKRx6MJl82rY1Lg898KDgp6xwVtJLxqgN+DpuoteFPSw
PvCkPrcB4jTJUmt9KCiisIc7Y7IZ7m1y0ah9TsEP9bMqN6/UwtEu2iNvXwoa
XNjyS+xaM6yEuQWdf0nBNXyeuxd0SqDcgD1ndQCBl+j7XwdV+8BH2ItZFUjB
kJzO+zHHK+DK8JoF9yAKTgYFlLa0FsKWhOcbz76mYKBT7q7TYr3Qb859nC2E
gtYbTOau7PwKCZIvtcvfUjD8g5bghFMeWM3y2bm+o+DX2yezhwQaQDorMEQh
nIIPChLabZI7gWQrkE95T8HHpJHld7s/Q6XM686SSAoaFkVy33IphRfLm/45
RlPwefKHuGTzYdAsfrsVYyh4SCCvcvRMKQi6CMqxYim4ujBzA3W6CAZOh+sV
xlNwm93yhAxpAJLYdzjYJxL4577b10cvgwdfI8NkkynYGWz7PfpuBci8EC76
m0JBwdoHVh/NmEBRi+nJSyP0XZTNb2tRBdX8YiS7dAqeL7Z4bZn4DfwY8duP
ZxLxr6vFbOGoh6tv9sovZFFQzu+P9rHLLSCkm2yQk0PBTbpSKWmx1TC0TdL5
US4FfSVk3fiI93pKX1qkVD4Fb1XTKri6C+Fh9KEvvz5T8LrloTqJxR6QvZ35
I6OQguq2UfY3QiqAJn6U9qCYiC+bw3iWnQdfx3OED5US+ieNuUSUtYN/6vHT
M18omHv2B2Wq8Rvo3M83SiunYOzn/mtudTmwQ0rO7V4lBTVXPW94ZFEJI/OF
MfurKRhXGrW6MOIHpOVh5UQNBadHt/ue/ZcPNvalw0m1hB4ySctsSp/hJCqy
m38j8GFcSCuoGAA2aoXY3gYKFthteiRkVg515WeVxhqJejhEHAhzyIVAj2rT
+GYK1nuRdnPydICusrKXSSsFN1TmkDfFVcMurrqE3UwKhv3xM6owLIKxhotf
h9oouP7xK+8Kx35ID2j4+aGDgl4yJabGGaXwWFOd06iLgt8XHfVFzjAAN7VI
CHcT/tP6tUPqTyOwd2lc+NFD8HOrlZv2xjaoD2PejeyjIGeBo3WbYSkEGWi/
MPhBwYQ/D6dHfveDvnBnyvZBCjrn8B5utikAkWHd+p4hCgqs11WzjauB8fju
qbARCq5wW3ZtiWRCpvkNHv0xot/N086b5+TAf5L9BwTHKUh9Gf57e3IZnJq9
qdY1QcEfXZcEJaYGgCNr0OrtFAXf+RYcq5zOhRs7rawcZ4h+KM5mcaQ1D3J8
/1kazVGQbUJvmn3XT+Badrc8/5uCpRLJI1ZXiuCWGb+l5DwF63y2He1vyoZ8
Zti9dYsUNJ99M2ct2wd8p8XvLS4R+phbJ/B2+guYpGdZdP8j/FKm50+tcg4U
CclbfFmhYGYFm9aV9f0g8Lz2bhyJilwNKV6Tt0rAfEnr7nMKFfcrLl7ymy2F
L7d/mN+nUdFHoa6481IzbG61MNdiI9ZJ6g0ybtVgeWrpjiw7FbdYmF30662B
ytRnd3ZwUHFHvpDGEaEa2CbIe4eNk4raFNW3f1dVgLVXqNnPtVR0q6C1Bt9m
Qs38brMGbio6tcRcvvyhGHYYZZhm8VJR/vbGPXUnSsG26aRpCD8VBW7++rIv
rhu+QY3J0/VUnNf7KOaunwUiyRomtzZQcdLmiX8kexk82dx3W2kTFXHXD10p
9h5ocje/vX8LFZuMF7T4PDJhz+95Y35BKoqIcHIcDf0MjoYuxgvbqPgsjKVd
HjABjHou4+/bqRgRmnlEWOoT7JMLMSrdScXMb+9snanZ4JogYhQrTMXhJ1fT
D40OQ8eGj7d8RKlI//vaQfloERx8JnvLSoyKYaH5CjNJWeAxW3lTU5yKa5cV
M++pDUH39cs3T0hQkXzOI7BKpwCO1HUbbt9Pxb+7ZdnWypeCt4yZIf0AFatN
8h6kKzZCf+xvg7GDVFTd8dL4B1SB9Hong/rDVPxWTN59nlYNvs6cBplSVNw1
HMTLr1YFQ1PBN94co2LswbjqINdykNXbdcPhOBW/umZPe35qhoCalOs3T1DR
15QjpdqkGMaOyVw/J0fsb5kMuOJSAPihXH8fUPGV+emn4o8GIJhPTZ9Pnorl
dbfXdC9lwOTTLr35UwRfdsdGO9UVgOLEbb0uRSrePZ7/uJE5DG915nRLzlBx
z4tdzq1cmTBb6aAbc47gy6iF1pv7WXBOikPX+zwVp28U5qdoTEJ45KtrlipU
dNm3I0CqKQ/+cO+4pnGRit9dbtwQ0vsIKvZJOjKXCPye9N+7K8+EqLFjOkLq
VNzeq8mX96cMlrS+aNOuUDHXN/nmuUcf4VL5Re1RDSpeNjEcPUBuhthDHVe/
aVGxeWyN6qRxGayEG13N0Cb4dc3w8rrKbLiydkbr9TUqsoy1aYcDByHR7omW
vR4VuS/OZL/9mw+UkVVahtep+OAxg9q3WAdXNQI0zxpQsfG8HIfg4DdILd2m
KXGTiv1swz/l33QC24EEDV4jKo4doFWcJheD7jspjT/GVAxUX96npNQMGRwl
VzpNqHh220xGgn0GLD0s+htuRsUCm5rYm8EdcKqvIPKWOZEvpXdah6cUvFQ+
K+2xoGLaTfGFHYfSoCknb3riHhXFEwbpljbVsHlXbnC6FRXT97hJf/7eDIYv
ck7aPCD4J2RoG8iTBgmLWYMnHlJR6xz/mzuPCDxuZfqQbKi4ebbLVM90CmQa
0g+X21Jx3GV3jo9zPjif+NjhaUfF1TmaX9WOJ0NNTKrTxScEHgITMYs3yoCP
L0WM34GKNeOCU7VrOkDHPqme+ZSKjLWvU1Ib0yByJOFRqBMVTWnuYVbx2TB2
OV7QwIWKliaD4wqsKThUFFsm8oyKRv0ZF89PZ4KdeMydMTcqqkVZ2y2lFUDp
q2i+VA8qdr30lM3tbwEOclTuAy8qGsdF2GTrfQZ18/c3pH2oeHgwOcOuvxpC
mOGrlp8T/N2pODD7rQn6T4WllPgS+UvIql10J94zKaEabi+pWMLpceZrfw7c
3/T23/kAwi8umvccezgGea5vorhfUVH6QOzlgOJ0oEwHn28JIvhjV+yYtLoY
zl8Lmnn9mooZVYaJT8S7wL8i8LVeCOEP6Sa/Y6+lQsfBANgZSsWEb4cmsn0y
Yee7l0ND7wh9eSxZbmyZAzN2v+eJ4VQMHc2/VR6TBR8fvDhi+Z7AS5LxIz05
ARa6fTqPRFFRmNm4RqmoHPC8t/NiNBXXPFdeuzq3FTyyPPcUxlBx69HZxX7u
ZGjY7tHgHEfFn5Z/PBOU02Cjj5vN2QQqqvCfXzh/eAhuzLtu40wi8NrX+ThZ
6jPEGbqUNyRTUYxPK390byJM1zmZv0qlovnpMhLlZwVIH3fk1/lIxZUdxVf1
8mrBMdohb1sGFa0NAkRsb6RCFbe9wY9MKt4T3SJx6Uoz8Pz3H3tcNhXnnpZv
c6v7DFeHHqeaf6KiX+DOwsnkbxChZqt5MI+KnUWiz1QvlMHI50fLv/MJ/5qJ
WctX+AUOiD2Mzisg8BmeyzZurgXbgAfKT4sI/508tfFGxmcoXrGaVSihovIf
fmFb5SZgN7N8w/6FitkTL+qFSSlwqdUC68qIb92X6pb2X+E13h1+WUHFI/tb
JnolK6A38c4LzSqCD3xmqZYq8SC2wUxqSw0Vr17JGaWPfwJLZ5Ounq/Ed/gD
/+6IUfg0YewSXUf4s+yV/YspKUDSNhI3rSf8JCGOu29DPJwru9m4r5HI3235
+xqjevCTNLSdbaKi14eJPB3ZKmgLuSGU00JF9t1p4n9/xMJ2tusV/zGo6Jrq
MF0qngYmVnp3sY2KJpE3zNyOzkJq17V19A4qUtesTxpWyQK32ZshU52E3r/l
xFOp8aDPbr694zsVP5fnPsAiJkhts44p66Hi0VX6T+V9PgHnkScSqX1E/X96
Rbo4psEPJdf0Nz8IPzNSD3niOwx5132kXQepyMPa+6yP8JeXDwMLLYaJfjPg
OxJ5shZMvEMVtUcJfLx9OPs+NgO8j65R+EnFp9E2bRuPDYJATtKl/RNUvMkv
kFxiQfh9bSZj4xQVJ357HJSx7YPy/s+61BkqthxNcjeJSoDQhbL+iVkqClLX
OM0zKsGaq86k7RfBP996Lc/BYlAWbp0s/UP4dd16W4k/H2CnzHfr5AWi/2b7
X9iRWQyLqoNLwUtUpGTZvJBOq4MGowlH539UfLzVgPO05QeI++83290VKs7K
OL7v+pMCT18u+2iRaJid1zN0TGQJNGPp/KcoNLw6FMb7dToZ9hesfSNBo+Hl
p/+iVLZ9AHrzeqENbDSsuPS8uKz+G3SNCH4gs9OwuIKtqmZHEWSsiOwdX01D
o+f9ByjfosFr3f6PjDU0JI9J9p5vLwJD8aPHStbSMOrZD9aqoQo4jicLErlp
WLVq4vqsZhzwaJ5RCOKl4YrWJ66J1O8wcuditSM/DSvzktpOsqdDkZOm6p31
NPwYWf4nmjkAQcH6rRobaPj54Niv+W0tcDfZ+BpuouFm8xgONacvoPjFok98
Cw359sWLa55Nh63tj26vF6Thl8y/5w9jO8xNOkywttFQpzo/7rBqGtTQ3B+M
baehycmjE4NbCf/d7LvYspOGloVObzN5x+HxgeCnRcI0dH59iZ4/FwOXzoTT
E0Rp+Muo6fmPsnjYrRvrHShGQ1Hm+Zh2xwVYsUrlfSpOw/rVdq/Pb0wGhntO
sKkEcf6XAc1q5UhIflckeGU/Ddcry/CM1X8B14zKqJMHaFio8vsE+WQZ6FbX
79lziKiHl8+EhUAkHO5hpvIfoaHmUGiQYWUicPzukVqRouGfEZnwRp8l6OMY
yR85RsMe1VvnWMLx8Gn7tHzzcRpaZByOKhD+AH5HFyoLTtBQuqH2ZU3GENxW
IV2Mk6OhrtXxgfc+qXDSkL3FH2h4mmYq8+BLIgjY8ujYy9Nwz86H00FWfTDx
fGPvbQUavqf9GwiwS4GyqO3G6qdpKNn0x0Vapgre5oqNy56l4ZUPyO6d2gT3
6w/c361EQ85/UdwrxUNwflB6gVeZhp1Dso8CjZNgx190+KdC8Cfr3ZUwsVlY
4FGiDV8k8HolvmVb9gdoEFXzarxEw5tGOm9sHmVDrKw2z2d1gi/ZigevSX0F
B3WDoJgrNKQWPTN95fUe/jufu9dDk4ZKzf1+5RNJYHuKt8T0Kg1NJ0gdHqNz
8EjGVFNZh4bcu6KxJ/MDPDhU8lNCl6ifqwo5NzgCLMU3OXHp0/C/3UK8ReHl
YLHTSmD6OpG/nXCR1bliuLO5OrHRgIZ1NxPXrUSFgwnfDvmMmzQMVRc89Fgg
Fow4HjMCjWgY/kTnQdA6FhhSGu88uk3DNz/3/LduKg6uL4mRr5rSkI2D4zX3
3wjQnXUMOn6Hhvcl+OUWf30D7bG2vVvu0rBFZEjx5c5M0Ow/UPLPgoayjJXn
6uFRcKXDQ7PbkoYb2XysBibGQa2p92fRfRpu1fR9xHs+AS7WSDu9tybqmxKi
6BI4CiqlfgIuj2g4sNFOoSOtFZTyRhJv2RJ4fi8/kCmRC2fSUf6MHQ19DaKU
8tQ/gkLCa8buJzQ85xbp4xxcAhg5fWe1Aw13bT2uFXk1A+RCzpF/PqWh39xt
i+8jkSDjHxFU60RDDoWX8YyGfjjmtbA3xYWGsfMahSNvEuGI86US32c0PMRn
sLN85R0csovTtHKnodQl1683OwpB8j5pXN2ThoZKgmoFmSUgYXbV6Yg3DfU9
OW9PNoSCuGGagMBzGk6tCFx6/yUSduuwJ82/oOGpztgTan7TIKx+Q77dj4b2
t1bN/mEmwI7znxh5/oQfDOU5O2qFwLZTPOahgTQUOWdsXXk8DbbKmJAdgmjo
Olhq5UfrgE2HioOuv6bhu3pMP2wdAQLiGyXkQ2hYVqFOX4l6D+t2WpbsDKXh
AeWtkzJ5M8C7uUqTFkbDb4It97fpxwIX3/bxwXAiftIFnpmL0bCGw9ap8j0N
0Xlxv7r5JLBTGgTio2g4EX6haLj1A7At7U7y+kDw+Z6YBcuwB6izT+XNYwn+
z3P1Z/U0AGmMybgQT8Npnu7vF7yLYaVP0lwykfC/jolna+Lj4G+7O5k3mYa3
ZK18rt2qhoXGnqDZFBquTtMpvaOQCL+rj0m0pNHwq7O7J4/2e5gt8S3JSify
f4VWIymTMJ07rBmcScO7DaGbd5BjYOIjjNtm0zDA8vMHbYMQGIsPdtL5RPij
01BX96YCGHk/JSCbR8N1gusE2GcKYPDN2STBzzTsu3L6oK/gG+h/GS7PKqBh
kYi3Nu9sOPR4zjN6i2iYnzNsfCJmGLqcVM1LS2gYMTPVfvdaPLQ/jiVHfyH0
Z7fjZVV/EDCsWEHPymkYVP9QsFQxDppNtSRuV9Iw1euor9y+YWgwSC05V01D
D83rAgdPhsM37VVa4l9puEFEQV6n9C18Vbs+vqaO0J+f6FWxRAbknRXfU/eN
huedwtQXcpMhTu630YsGGnY9P3ey1CoUgg8XR6o20XCmW9Qg/V8NuO3x7uFp
oWFz7tuje2WTwFpIc2tTKw0TP10KXyeYATfX79AOYNLQcWVK82FuGqivGX91
pZ3gR6mhsYNsFyA5p2l9J5EfL0Xd06Af9s87cTO7iP7pqTWo5RAJghMqKq+7
aai3a7n4zGADcP7Y4KndS/QPwRWf9SfiYKmtv3xzPw25LFMrd54KhZFvyZSu
HzQsOSW6d/hDHTDLbOHdIMHXlIvdlrxpUJGn8ER/mNBXwgEXa50gyEzjyhUa
peGO+bi+es4oiIxp/907RvSTuWL7D6/Z8GVo9KHIcRrOJsgxysojwdH/3r2b
k8R9Fyd7WAqBYOEhkyQ8TcOOqtrl005RoOtAHx2cIfqL+7nv16mrUNm6QSR2
jth/c9hM4Sahd7O3hia/aSgezBek9j0AxG4Yh++Zp2FD78usDkoUCGge7Bpb
oKHL19urzOzoSFf5tzFpiYZrJY5nafi/h1/ylRp3/9FQi8uGI2TLK+g/5u+/
f4Wot+e6yD+FKdCwT69+ikXwlfnksfrXGijaJcb5kUxHR0N30ZkfbyBl09y5
+1Q6Bu9NG2nR/ACh3IXPDtPpeN/1yn5HViN40T1Lf7HR8XS8fPYvmwh4/Pcy
K4udjpmHvvlPn58Ak5ltsjYcdHzstC7CULoNNIdHbaU56djdc0PhXWQyKH7P
zFpcS0eV4r+kqqM5cLj56WweNx331An8N7Q6GnZWn5d8wktHDYPYezvCO4Gn
aL25HD8dw/q+Gt+WeAMrmb1xK+vouOHUk3fTQpEwkZA4WCRAnF/LY1vitAhd
EY92Om2ko+iXhLIt70KhJkj++qnNdPx4cP2Pjx0B8MmHM5S6lY4eE+OJax+m
Qawzs61MkI7nXtXKjSdXQ5Bt5Ho3ITrqvdVqaQoJAleLu+pnd9Bxuzq73ukw
f7h/S9qXfRcduUlxb9UEUsBAh1pbLUxHwceXygJPNsClS9/YvUXpOAfqQ3Kq
wXDyzJvTKmJ0DH+fNgDdL0FC9pbzWnE67tzy2nB/RjxsOSRZ9G0vHa//NDj1
oYF4P4ot/fXdR8c7uTNzyt3BsCBYLq0mSUdZdu2tny0CYIjf7yHfQTrqZrLr
l63JgdbV19KbD9HxSFmnp/ymbChjiUwFHiHO+36oqZbAP/339F7No3TM8FBu
GyfHQ8TPfJMN0nQcX0xvLhEuBN8+tw9tx+n4NSbUK4E7DByYav1vThD52bzK
m0puBvO6rULX5OjIbj37ctmhF8buzsicAjq+b+wd7VdPAROuCs098nR0HWmY
nbwSDUMpIfd5FOjYYBI9Gfs3FW6q3nsxr0jHa2pH+R2bk6F3SiGh+wwdDz6W
2SVBCgR9v40V5efo+E3krijPeD50HZjoSzpPxwvC+raTsQmg01iyHKBCx8on
fu6RuX7QZhW06b+LdOz/kCktJRgOmnx3pAwvEfwU1X8RUTMNLemgpqROx8NK
6hmrvINA/fK6uweuEPUR67oso+0LDXMjHhs0CT7E6mbdj42Di4EF0StaxDrF
8vOiZTnUHvEvHtQm8rdNkS5V9QelVuOu2mt0vFUdetbvnR9UPDyxkKFHRwv/
PzNuBH8VBXjWvb1Ox9VzyoZ//NOgNHtA0tmAjkEG/u3OZ/0AtXKVTW/SsS1Y
YGTS7DUUzj+/fcmIjg+fdUs1OhC4vjZ0OXabjlEl++3TeYIhT/pY+DZTOsYe
qeLeyPYapNvX5NPvEHoLUkzk3TwK2Y97GePmdOK9UPIoQPI1HNmcNdtsQceu
3wdfF9B+Q3qeJ1e+JR3zLCRnQjn6QfKavnjkfTpSrlQtT4vFQtLfQ2c8rekY
Ey4zlG/1AcRDVxlaPiLyu7qa8XsiGuJku+y1bOl4+0GnW+DFDBD9nvbmJOEz
Nb+Unb+seQnR9s+yRJ7QkcNx/Lrl5STYuU2nkZO4h3stj0H/eDpEFO6fmHtK
8J+1OUD3zAsQvE5d3elExxI17fRvFYEQwmIKl7rQEXodI55UzcPGiCSMf0bH
esbagtbiNxCETrp+7nR0mBeYiDzrBev6NGxtPOkodSZa6tX4G/B3Eg/U96Yj
9UBtfBrXIvDsZKWefk7HF2EMr4JHgfCitPmrhC8dtwbvV7Li9ALOm3HD/C+J
/SbML6lREeBFtaf+9aej+TdN55X7DcAerSbUH0hHftPmqjCWH7gpip6oDqLj
pmy5x98sXgB1cEkz7TWhX49rVr+qi8HxWf394BA6pmY/siOLRMKKSPQLh1A6
7pXU0nlv5QtPKmwTjMLo2HvL5J6FfyEsGV+oUImgo3KAhTRt8B3YrtrZfziS
0OeN/bKM/fHwJ/bP8uZoQh9mtySlXCLB+tzXTZQYOhp5S/8jc9fB7Ei41Ggs
sT+6bujF8RWw9LRWa4in4xso+DcNgTC5R+luTiLh3xmv0h6s+gnmNYKeYcl0
NHzxmqO/LwBGzWajn6XS8cAbnt29gv5gvKay2PwjHZ+q6hQbW/+CgcS3XZcz
CP52npahGrwCQxXLBZksOkaq6mxapnlC77jiup05hF7bfxs6X4oEVW8f5sgn
Ogo0k2atkmqgcE9LSGoeHXP+OyUnUu4L+6q26D/6TMclvv9AdZM7hBrf3CFX
SMddfHz/samEwBp64gC1mI4XC8zyVz2fAbuo2diaEiK/bqPiWFIAjMnL3Hn5
hY4nfzQnr0i7gXav0/6r5XQUe9StiRoBUOVQPbOtko6dAxFHPO+RUFqQN2uw
ivDzdcdo+1yCITb/qm1SDR0fjTB9x+TcQUAn4sSDWsL/KOaGHHKv4NnC8Mrx
b3TUlD8hPiFIwl9BkqWkBjpKnv5KV3noDzelbJ5VNtKxYtl0MmDNC2hqLjz3
opmOkw5ab3a+bwH5+2ycGq10zKqUxjixYEjjuVi/hUnHIsbJ6zdbokAo9ZV/
fxsdWQmrbl7NfA8vLnzXiO+g438nVlgxP6th+afwJssuot8M32h/LZgD5l7m
XUe76fjc+uHxctVX0CWWGb7cQ9T3xGcq29MoUK78a1jWR+jLW/k7e1ES5Bkp
iHr/oGOLglnMAQ9PEKd5j6oN0rG8UmdTmNQbeBPZlLRxmNCTdo3s9ZYWYJff
bNkzQsda+42G5tLPwabH4HDMGB2r+3XNrgi4wZB9/B/zcTrOsh9UPqoTARpb
Z3IPTxJ66lQJih0oh7I8afulKTru+5Hj7vbQGw5rO2LJDB192haO/Gt1gcj5
SqrHHOGPxef19q1+BbxB3JUXf9PRTiNgbQMfMdcd0fJaP0/HsZDK5m/ZL2Gq
KexC1wIdP6ufOtsm7QL6VkM8UUsEfnDWfdLpOXzj3t9i+o+OyZUbjtN520Eu
5WHwgRU6/lzpjHzG8QaSVAp05llEvXb/99+Anits/UnbVkhmw7QI1vJkynPw
9lTpc6WyITPsVVO15hgs7Q6MVqazobHe8WLDE4FgWtF5m28VG/57V/tjyz13
aLu1a287OxuyJV9KVt+eBmepdybDOdgwjue5/qhnGGS/T/9ozMmGbkr73F0N
AkAEl6z3cbHh+bKTtA+MjxDYLS/9i5sNy4323XCZLwOqveffPF42fHuBW+iW
/Du4v6XxfzVcezTUCRQudHuNRyTWI4/1KjOqbZWx2XuRSZEdKpKUiEpCZLYm
jwazGKOh8opIDaIRtVROjz1StrIU1h7VJiRJkqi00ba/f/bPe853z/3u/b4/
7v3n3hRpAc0OyLpfbHYGe+t1E121gewK4mTK6seQvznARV0HyDn8eZTvpT78
7WP5rL90gZ4lPdivoyVBm+y3zYV6QJcvGM35/bYETy1fKQsyAGr0FXnrn+tA
Vnu81+KFDL9++55wxj+HI5u03xkBhT5UqmUJE3FITe3RFROgaRXSLt9X6ehb
takw/luGz0RTncy9B++6ndruYs7gJTPNMykb7Yb6TVmWQFpiqfWzeBGWp7IH
2q2A7qt75G2yF+Oq2bevZi4GCo/0MdPIr8b2NL90DzbTr1jFYpZKBe6aM+7P
sgHSxRDvKptknJJIlt5fwuzJVyN+tbUTYdZcU+XUZUCPA4Wx7irZaCGt73RZ
DpTvKZcUTfbgNZbnOWVboGDL0OZ0YTryMwaFDSuADpRIfQQOInyhemR9gh1Q
WP/8ce5EJgqP6hg72AOtWWesx2//gOrq1WOffwCScTU74mZIUS7j3bnqwMz7
xaW651+TkavRnStAoD0dk7ZvlOqwNTMm9HtHIMc18fsb9HMxaJ6qw5gTUH+Q
OmeyLRM/ZcnVa1YDfdLyWLKSdREzNFf17eMBJS7wG1YUPELT4x211q4M3/xD
1RNM/hWtvSmv1jL1ylyVDdMr0f2E0pZyNyBzP93pjXck2Dv/JDt4PdBA0I/p
l/8dQUH2sq+mPwF9VyH5MiWQImvBvbYePuPPlYZbticlYUlOgLzIC2iuZ/Kg
SlQZrtD5JNi6ESg6oJmrE1WKf+TK1up5A6WGbWAJX4twh66lQZcPkPDxxPuN
uSL8mHdzJNsXqGskQq1zSwmmf+PdsMEPSDS6rXXJ1EU0Pvnm+Dx/IJcZiRrF
7klYpycOebANSDMtbFFYVByuKzDgZgQAKVS5+yrXSfGZfu1ct0BGz5fwKnCI
RQcK3bpn7QQqsavnabfKcLbh85qmYKBepena7cFxWHRKmJS8C8j3zgctQaYI
ly/U9HbaA9Q5fnQ3p7Qc7xZVWE3bC6Rv6KzwCilDfyPHyRthQPu6jSoVDH6s
uKvlcDjQ2siUEcsnCZhiHHmaG8nEHhETnvkFaFAyM3piP9Du/neclvc1eNGk
2KUuGshz6/WHVX8nIu/MCt3oGCDVqPLX+WfE+MS0dWjpz0BHJ3tTR0VjGHk2
+MbIQaBV/sGBwpcSBLMvMoUQ6I1Ti6l/bQ4WyE8EhsYC/RhTEtyXl4dLzdm2
VvFA8g03FgdxTmNTaePMgQSgg+IMwcPbuehn4ff4rAjIw/5tjdJUDo6WjSl2
JAGt3lnKCqxMQ7GlJMFIDNTH061yu/4Z9c6ZeD39BejpZuOuaxpirLaqNytI
Bfoqd2mziBXh6gr+xGYJUEPvab6zynl8tGjw3gIpkIr1aEx3YCGGVyYU/pkB
1HO+1qmzJw6VrXUijsmA6idtnNlt8Zh3/oIjPwvoBedQy2B3MXLYvPlqx4FO
Km8PqfJS4C3F04HmE0D2wwmNoclH0IcTU5+WA8Rz2OZqxT+Ew1Us6Rrmzv3H
JMA9VjUFbw2Pq7Hzgf7/f/Mf5oWn2g==
       "]], LineBox[CompressedData["
1:eJw9VHs01HkctRq/r5oeTJHSEOklYrxj7edDLUmDZldqm7byOCU0jPEIM1nv
mpRpNiG7Rkq2nLYiLXkMsg3Hroq0R97RNllLUyRb2tl/9o/P+fxxz72fcz73
nmsSyOOEaGpoaLDV89/+2WCwTdFJof+akeZV+3UxnmEjr+uikCeqCbfPTYVC
186o4m4K3yUlnPDdHgONRwRr0v+gsNt4JGWfsQheSPWeHOmhcFVi870LOk2w
oKEqY2cvhY7zxfKsUDFsfhXgZN1P4XOVn7ZOeCxw9N4rlw5SmCD9i9MYJoJY
LLj4bohCrmTTOedrj+FimAv72XMKLTj5D0h7Oshze+fqRyl01xm/mqJzHEYa
hTcv/Ulh01PbMOXqH0B73CgwQ0khe6vG37t9c8DCQL706BiFV3JkLOfsVPDb
eqiFPU7hjld5/9i1lkDMMc041gSFJy64tDuW1EFBfskGvddq3IgxkLU2G+rv
b+uZUVHIN2sKNmdIYXhiVNz7lsJJx+X17OQUIIaZrvJpCuULErVE8BQsPDZM
lMyo+aK33AhFIvhFtcoyZym81DuacGNzEggKj3LCPlBY/rTyzG+2zZD3gE7z
naNwuXnZZ8V96VCrKr9jo0EwY0nDnQhXAQwxfQ7raxLkDlV57QgSAuU1YTA7
jyCpC/zyZtojMBfktPVpEVS1Y4Dsu3TwKWIlNRKCxwbNVSu2RAO/7bHllfkE
aRsXt0nexELuVPRAFp1gTzPLKbioGO6t1pOELyKYb+ZwuHvmexj0rnL3W6LW
u9fLbpoVAC0u4K2tLsFTumWnO8KjYaUsjP2OQVD7VNLF+sBMsG49UVqzjODJ
NyH3Lww/BA+V9JNQn2CdjunxRywR7DMs2+NmQLA/pzx43TAfIrfV3qKtJLgx
TVU46yCEjIiHCxSGBCerB6POdfRAYe5IkJhJsIPp9H7RcCrcbpip9TEmeC1T
w/S5UQwoXi7UZ5gQFJ+u/TWuJgv6dE14T0wJgmVXu1vfFVA52yvyzAhq9qSO
X1uTCNrBXibcdQS7zM77pvXcBqPs/QnGGwh+1O/PbVmaBXZVUZ3DGwny6qQv
+fZzsGMg3aJ0k1qPMM6uKJLBAe2C9FBLgrvGOzz2mKWAgHWj38JK/Y/kNsWN
gRQ49U2T46Q1wbmvrMS21Q0gS+3OqbAhuKQnpoKuHQ9V5a+UsXYEz4/ZR9rF
xEL7kzl3ZweC249F7eWeLIahOUbhR0e1v43GA0q6BKbXr5+SbyH4i5Zzs4Vj
NCzc5eKT5kJwcXyqjUMXH0wTfK96uhLceVnOXD4tBqeSIA06EPSmffusJfQW
+LTH7f0d1ffZVhHM/DgImhLflrgTnAiZGrxsFAnxRjK6/zaCFasOHup0jYUz
npXBBh5qvNDKX1lRCpcjFXXPPAkyKxZ9mKFJoCa/V7/Ii2DWHeX1nyr58LBp
khforc5XzYuDu80i4cUYrXUtm2BlPC0vuVUIH5atMFX6EDzgbbh2nkALdb+w
TCz3I+j/6exrm5vJsO6wWxePQ1AaweuPuR4Jn+f4W9p+TXDM0/pumZsAONWh
GdP+6nwUFBWN4iU4MiwcqA5Q+8MKobe4ZoOIfs5JuJdgiowbZdTMB6ldqQT3
ETybbJV/t/w4TMz/sZHJJf/3179moBUk
       "]], LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAfz9MXUGoB0BVI+TDHF0RQHagDQVn
qQdAge3iDdANcz/cawncXqsHQNCkWL7UMHA/QzcFs1atB0AsQ6jkryOfP6oC
AYpOrwdACvStRQwJgT8QzvxgRrEHQM5fRKvhsGo/d5n4Nz6zB0DwE9L5YBVw
P95k9A42tQdAukPNHhdxoz9EMPDlLbcHQO0mjKT0WIE/q/vrvCW5B0Dy4foF
5OppPxLH55MduwdApoJJtUzHaj94kuNqFb0HQC2Q8ouT/oU/313fQQ2/B0AF
NwIxDZyXP0Yp2xgFwQdAEmzi83F8bT+t9Nbv/MIHQJIfRSxmG2g/FMDSxvTE
B0CrH2VIo2J2P3qLzp3sxgdAdsssHE6Y4D/hVsp05MgHQIFWP6gulXI/SCLG
S9zKB0BxIGgpx2hoP67twSLUzAdAcUXopyN8dD8Vub35y84HQIWfm+bZ8t8/
fIS50MPQB0COnpZLD61xP+NPtae70gdAfz7BzJmbbD9KG7F+s9QHQM7OhfPd
cJ4/sOasVavWB0Cx5y9ujLB4PxeyqCyj2AdAjfS66Ooidz9+faQDm9oHQGUF
hoTsYIg/5Eig2pLcB0AuS7695mSXP0sUnLGK3gdAd5iV0GdUfj+y35eIguAH
QNUJ1gXjCIE/GauTX3riB0DGLpeuxvxyP4B2jzZy5AdAV/ZC6ASXzz/mQYsN
auYHQBbEyTlvT24/TQ2H5GHoB0CgaYQLpcNsP7TYgrtZ6gdAWduOIarToT8a
pH6SUewHQPYIBKxJVHo/gW96aUnuB0Do3waP9wdnP+g6dkBB8AdApexu05Ov
az9OBnIXOfIHQOB0u8sI+50/tdFt7jD0B0C7unwQApp+PxydacUo9gdACa64
3JjDZj+CaGWcIPgHQMnT/kJyvWY/6TNhcxj6B0CtEa/aKot+P1D/XEoQ/AdA
UzehQS3nnj+2ylghCP4HQH1hNBp5GGs/HZZU+P//B0BI5OD8TsVkP1fCWM4=

       "]], LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAASqaYbCqbBkBVI+TDHF0RQDUET+8O
nAZAtvxIbYcbhz9aL/Cg8p0GQNbk/pSEpng/flqRUtafBkCGYNTSgzGCP6KF
MgS6oQZAL2iuIsoJ0T/GsNO1naMGQPM8bq6W+Yw/6tt0Z4GlBkDHnm5KObl5
Pw8HFhllpwZApnMpNeuxgz80MrfKSKkGQEEAIyjeBQ5AWF1YfCyrBkCivFBu
PKaFP3yI+S0QrQZAJ7YK+Butfj+gs5rf864GQIuZ6bPWT7Q/xN47kdewBkAJ
NzjGxE6LP+kJ3UK7sgZAyE/tK3UgkD8ONX70nrQGQG07rVJTKZU/MmAfpoK2
BkAgEvE+aFWrP1aLwFdmuAZA8YMZ3GTSnz97tmEJSroGQOPn6E9PqYg/oOEC
uy28BkCjkpeX/aiQP8QMpGwRvgZA8k1mmoiCoz/oN0Ue9b8GQGCPyJ16+3s/
DGPmz9jBBkADMbJioGyHPzCOh4G8wwZABZB9fq1e1j9VuSgzoMUGQPyE/2uo
cYA/euTJ5IPHBkCp5BPQq8x3P54Pa5ZnyQZAt77qFXCljT/COgxIS8sGQGv9
7naBRcA/5mWt+S7NBkD/wT2woqd+PwqRTqsSzwZAYG66mJ+7dT8vvO9c9tAG
QPi8louOYoQ/kqt4T+vRBkBVI+TDHF0RQIqQ5d0=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQvV7GsL6ymd0hVPnJYZlYQYfr7bECTC3sDkzrNkx8
W1Nhbxcc+fxnK7uDpefqcPsp2fZL5EL3fWxnd4ju3qwualhkz/0qYOrLTnaH
4kcf0hddW2tftNUn52E3u8Oau5oPZ2xotL/R4OF8s5fdQYklfp4Mc669vY+L
1MV+dgcxpssfrZmK7JeJO3w8MRFo3+41t9Tct9rzPLY+cWAyu8P7CY8qdn+v
sS9eZz5/x1R2h46Hr2+/dM+3v1VpXLZhOruDVeivngS/TnsHV33fFTPZHXT3
zQ/iOdluv1xAW2XBbHYHv/SVNRM3l9rz3VH7PX0uu0Nl8XKND6uW2ZcsV7rU
P5/dwZ7ZbVGDC5vD7SK5le0L2R1EqtZsMHNvsHeyk2qoX8zu0MW04G9n/UT7
FZxi4eVL2R3ubVOdZF9bYv9irt+fOcsQ4QUASiqKyA==
       "]], LineBox[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAAosTCFepdB0BVI+TDHF0RQL6GzkPH
XgdAT7XhK0fbej/Ur+KcimAHQGmzxrJHjYU/6tj29U1iB0AHfziVCnyNPwAC
C08RZAdAgolvZKHDpT8VKx+o1GUHQAbt+j40S4M/KlQzAZhnB0By3H/2spGb
P0B9R1pbaQdAXKplv4G2dj9WpluzHmsHQDgzU9d87Ko/bM9vDOJsB0B/afa3
Qt6BP4L4g2WlbgdAhHz6eeArcT+XIZi+aHAHQAjnKoM1b38/rEqsFyxyB0BD
adsSujzaP8JzwHDvcwdAy/VycSvDdz/YnNTJsnUHQPQlYflZ6W0/7sXoInZ3
B0BAOJqZtCF1PwTv/Hs5eQdAoa74wZAmsT8ZGBHV/HoHQOYSKtSts4Y/LkEl
LsB8B0BXhHPaF3NvP0RqOYeDfgdADctVtyX2bD9ak03gRoAHQPkP4dz0Enw/
z4Z8MsGAB0BVI+TDHF0RQExhnK0=
       "]]},
     Annotation[#, "Charting`Private`Tag$101910#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.2, 3}, {0., 4.340930043029251}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8251389247626405`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", "=", "1"}], ";", 
  RowBox[{"l", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"l", "^", "2"}], "*", 
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"b", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", 
              RowBox[{"a", "^", "2"}]}], "+", 
             RowBox[{"l", "^", 
              RowBox[{"(", 
               RowBox[{"b", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"l", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "b"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"l", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.2", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8251387014313087`*^9, 3.825138733944668*^9}, 
   3.8251388667937827`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
nm+NDOXj3H8N2IWXV5P/AWCHgDg=
       "]], LineBox[CompressedData["
1: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
0n2B5tUFP/gfaVI9EA==
       "]]},
     Annotation[#, "Charting`Private`Tag$156553#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.2, 3}, {0., 4.884379851027344}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8251389711684484`*^9}]
}, Open  ]],

Cell["\<\



Getting the Numerical Values\
\>", "Text",
 CellChangeTimes->{{3.825138623534362*^9, 3.825138634465681*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", "=", "1.0"}], ";", " ", 
  RowBox[{"a", "=", " ", "0.520979"}], ";", 
  RowBox[{"b", "=", " ", "10"}], ";"}]], "Input",
 CellChangeTimes->{{3.825137928161045*^9, 3.8251379999115534`*^9}, {
  3.825138120076956*^9, 3.825138302163643*^9}, {3.8251383463949585`*^9, 
  3.8251384757623005`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"l", "^", "2"}], "*", 
     RowBox[{"Coth", "[", 
      RowBox[{"w", "/", "2.4"}], "]"}], "*", "w", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"w", "^", "2"}]}], "/", 
        RowBox[{"b", "^", "2"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"w", "^", "2"}]}], "-", 
           RowBox[{"2", "*", 
            RowBox[{"a", "^", "2"}]}], "+", 
           RowBox[{"l", "^", 
            RowBox[{"(", 
             RowBox[{"b", "/", 
              RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"l", "^", "2"}], "*", 
            RowBox[{"(", 
             RowBox[{"2", "/", 
              RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
            RowBox[{"DawsonF", "[", 
             RowBox[{"w", "/", "b"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"l", "^", "2"}], "*", "w", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"w", "^", "2"}]}], "/", 
             RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
       ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"w", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], "/",
   "Pi"}]], "Input",
 CellChangeTimes->{{3.8251379646897817`*^9, 3.82513796520533*^9}}],

Cell[BoxData["2.513273448482531`"], "Output",
 CellChangeTimes->{{3.8251379877390757`*^9, 3.8251380017238655`*^9}, {
  3.8251381241391153`*^9, 3.825138303819786*^9}, {3.825138350597791*^9, 
  3.825138477340317*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["The Bath Functions: Non-Ohmic", "Subsection",
 CellChangeTimes->{{3.8217517678010235`*^9, 3.821751768646145*^9}, {
  3.821751953180216*^9, 3.8217519603164215`*^9}, {3.825060882962515*^9, 
  3.825060894245858*^9}, {3.8250609807732153`*^9, 3.825060981585663*^9}}],

Cell["The bath spectral function for a non-ohmic bath", "Text",
 CellChangeTimes->{{3.8217519734679155`*^9, 3.8217519816613307`*^9}, {
  3.825061005943364*^9, 3.825061015364523*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "[", "w_", "]"}], ":=", 
  RowBox[{
   RowBox[{"w", "^", "b"}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"w", "/", "s"}], ")"}], "^", "2"}]}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{{3.8217519655963297`*^9, 3.8217520197930503`*^9}, {
  3.8250609962096567`*^9, 3.8250609988656564`*^9}, {3.8250612082981415`*^9, 
  3.825061208626244*^9}}],

Cell["\<\


The Imaginary part of \\Sigma^R is given by,\
\>", "Text",
 CellChangeTimes->{{3.8250610199267726`*^9, 3.82506105983374*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ImSigma", "[", "w_", "]"}], "=", 
  RowBox[{"-", 
   RowBox[{"J", "[", "w", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8217522299389095`*^9, 3.8217522587548575`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["w", "2"], 
      SuperscriptBox["s", "2"]]}]]}], " ", 
  SuperscriptBox["w", "b"]}]], "Output",
 CellChangeTimes->{3.821752259671894*^9, 3.82183968374121*^9, 
  3.821929505207243*^9, 3.821964861035446*^9, 3.822452485082708*^9, 
  3.8230374805364113`*^9, 3.8231556075229917`*^9, 3.825061062083519*^9, 
  3.8250612116591363`*^9}]
}, Open  ]],

Cell["The Real Part is obtained using Kramers-Cronigg Relations", "Text",
 CellChangeTimes->{{3.8250610903669662`*^9, 3.8250611147716103`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "Pi"}], ")"}], "*", "a", " ", "*", 
    RowBox[{
     RowBox[{"ImSigma", "[", "a", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "^", "2"}], "-", 
       RowBox[{"w", "^", "2"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821753749189503*^9, 3.821753753198762*^9}, {
  3.821755306375981*^9, 3.821755312546644*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["w", "2"], 
         SuperscriptBox["s", "2"]]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", 
         SuperscriptBox["s", "2"]], ")"}], 
       RowBox[{
        RowBox[{"-", "b"}], "/", "2"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", 
         SuperscriptBox["w", "2"]], ")"}], 
       RowBox[{
        RowBox[{"-", "b"}], "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Pi]"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", 
            SuperscriptBox["s", "2"]], ")"}], 
          RowBox[{"b", "/", "2"}]], " ", 
         RowBox[{"Cot", "[", 
          FractionBox[
           RowBox[{"b", " ", "\[Pi]"}], "2"], "]"}]}], "+", 
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", 
            SuperscriptBox["w", "2"]], ")"}], 
          RowBox[{"b", "/", "2"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["w", "2"], 
             SuperscriptBox["s", "2"]]}], ")"}], 
          RowBox[{"b", "/", "2"}]], " ", 
         RowBox[{"Csc", "[", 
          FractionBox[
           RowBox[{"b", " ", "\[Pi]"}], "2"], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", 
            SuperscriptBox["w", "2"]], ")"}], 
          RowBox[{"b", "/", "2"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["w", "2"], 
             SuperscriptBox["s", "2"]]}], ")"}], 
          RowBox[{"b", "/", "2"}]], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{"1", "+", 
           FractionBox["b", "2"]}], "]"}], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["b", "2"]}], ",", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["w", "2"], 
             SuperscriptBox["s", "2"]]}]}], "]"}]}]}], ")"}]}], "\[Pi]"]}], 
   ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"w", "\[Element]", "Reals"}], "||", 
      RowBox[{
       RowBox[{"Re", "[", "w", "]"}], "\[Equal]", "0"}]}], ")"}], "&&", 
    RowBox[{
     SuperscriptBox["w", "2"], "\[Element]", "Reals"}], "&&", 
    RowBox[{"w", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", "w", "]"}], "\[NotEqual]", "0"}], "||", 
      RowBox[{"w", "\[NotElement]", "Reals"}]}], ")"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", 
      SuperscriptBox["s", "2"], "]"}], "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "b", "]"}], ">", 
     RowBox[{"-", "2"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.821753759731719*^9, 3.8217553184824705`*^9, 
  3.821839695270445*^9, 3.82245249641241*^9, 3.825061139535475*^9, 
  3.8250612240176435`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReSigma", "[", "w_", "]"}], ":=", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["w", "2"], 
        SuperscriptBox["s", "2"]]}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", 
        SuperscriptBox["s", "2"]], ")"}], 
      RowBox[{
       RowBox[{"-", "b"}], "/", "2"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", 
        SuperscriptBox["w", "2"]], ")"}], 
      RowBox[{
       RowBox[{"-", "b"}], "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Pi]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           SuperscriptBox["s", "2"]], ")"}], 
         RowBox[{"b", "/", "2"}]], " ", 
        RowBox[{"Cot", "[", 
         FractionBox[
          RowBox[{"b", " ", "\[Pi]"}], "2"], "]"}]}], "+", 
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           SuperscriptBox["w", "2"]], ")"}], 
         RowBox[{"b", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["w", "2"], 
            SuperscriptBox["s", "2"]]}], ")"}], 
         RowBox[{"b", "/", "2"}]], " ", 
        RowBox[{"Csc", "[", 
         FractionBox[
          RowBox[{"b", " ", "\[Pi]"}], "2"], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           SuperscriptBox["w", "2"]], ")"}], 
         RowBox[{"b", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["w", "2"], 
            SuperscriptBox["s", "2"]]}], ")"}], 
         RowBox[{"b", "/", "2"}]], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{"1", "+", 
          FractionBox["b", "2"]}], "]"}], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["b", "2"]}], ",", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["w", "2"], 
            SuperscriptBox["s", "2"]]}]}], "]"}]}]}], ")"}]}], 
    "\[Pi]"]}]}]], "Input",
 CellChangeTimes->{{3.821839741047043*^9, 3.8218397592830734`*^9}, {
   3.8218452121259537`*^9, 3.8218452127185745`*^9}, 3.825061322359606*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SigmaR", "[", "w_", "]"}], ":=", " ", 
  RowBox[{"L", "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ReSigma", "[", "w", "]"}], "+", 
     RowBox[{"I", " ", "*", 
      RowBox[{"ImSigma", "[", "w", "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.821839778202778*^9, 3.8218398036582165`*^9}, {
  3.823038173203387*^9, 3.8230381802528486`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SigmaR", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.8218398069955335`*^9, 3.8218398119370995`*^9}}],

Cell[BoxData[
 RowBox[{"L", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["a", "2"], 
        SuperscriptBox["s", "2"]]}]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "s"}], "+", 
      RowBox[{"2", " ", "a", " ", 
       RowBox[{"DawsonF", "[", 
        FractionBox["a", "s"], "]"}]}]}], 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", "s"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8218398127570295`*^9, 3.8230381828596225`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierTransform", "[", 
  RowBox[{
   RowBox[{"SigmaR", "[", "w", "]"}], ",", "w", ",", "t", ",", 
   RowBox[{"FourierParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218401317029853`*^9, 3.8218401516552687`*^9}, {
  3.8218401926371565`*^9, 3.8218402058454757`*^9}, {3.82184354174257*^9, 
  3.821843542105509*^9}, {3.8218436033623877`*^9, 3.82184360511215*^9}, {
  3.8218436425072947`*^9, 3.82184367876254*^9}, {3.8218438223023806`*^9, 
  3.821843823073576*^9}, {3.823038224640732*^9, 3.8230382250730515`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Pi]", 
      RowBox[{"5", "/", "2"}]]}]], 
   RowBox[{"\[ImaginaryI]", " ", "L", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       SuperscriptBox["s", "2"]], ")"}], 
     RowBox[{
      RowBox[{"-", "b"}], "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]]}]], 
       RowBox[{
        SuperscriptBox["\[Pi]", 
         RowBox[{"3", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           SuperscriptBox["s", "2"]], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox["b", "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]]}], ")"}], 
            "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", 
              SuperscriptBox["s", "2"]], ")"}], 
            RowBox[{"b", "/", "2"}]], " ", "t", " ", 
           RowBox[{"Gamma", "[", 
            FractionBox["b", "2"], "]"}], " ", 
           RowBox[{"Hypergeometric1F1", "[", 
            RowBox[{
             RowBox[{"1", "+", 
              FractionBox["b", "2"]}], ",", 
             FractionBox["3", "2"], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "4"]}], " ", 
              SuperscriptBox["s", "2"], " ", 
              SuperscriptBox["t", "2"]}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}], "2"]], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", 
                 FractionBox["1", 
                  SuperscriptBox["s", "2"]]}], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]], 
              " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}]}], ")"}], " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["s", "2"]]], " ", 
           RowBox[{"Gamma", "[", 
            FractionBox[
             RowBox[{"1", "+", "b"}], "2"], "]"}], " ", 
           RowBox[{"Hypergeometric1F1", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"1", "+", "b"}], "2"], ",", 
             FractionBox["1", "2"], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "4"]}], " ", 
              SuperscriptBox["s", "2"], " ", 
              SuperscriptBox["t", "2"]}]}], "]"}]}]}], ")"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"2", "+", "b"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", 
          FractionBox["1", 
           SuperscriptBox["s", "2"]]}], ")"}], 
        RowBox[{"b", "/", "2"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "t"}], ")"}], 
        RowBox[{"-", "b"}]], " ", 
       SuperscriptBox["t", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "b"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}], "2"]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[ImaginaryI]", " ", "t"}], ")"}], "b"]}], "-", 
         SuperscriptBox["t", "b"]}], ")"}], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"1", "+", "b"}], "2"], ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"], ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         FractionBox[
          RowBox[{
           SuperscriptBox["s", "2"], " ", 
           SuperscriptBox["t", "2"]}], "4"]}], "]"}]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.821840221328022*^9, 3.8218436833403797`*^9, 
  3.8224525125971365`*^9, 3.823038200710368*^9, 3.8230382309728703`*^9, 
  3.8250615568887987`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%9", "/.", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.823038315217091*^9, 3.8230383313054914`*^9}, {
  3.825061698057119*^9, 3.825061699166418*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Pi]", 
      RowBox[{"5", "/", "2"}]]}]], 
   RowBox[{"\[ImaginaryI]", " ", "L", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       SuperscriptBox["s", "2"]], ")"}], 
     RowBox[{
      RowBox[{"-", "b"}], "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]]}]], 
       RowBox[{
        SuperscriptBox["\[Pi]", 
         RowBox[{"3", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           SuperscriptBox["s", "2"]], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox["b", "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "\[ImaginaryI]", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]]}], ")"}], 
            "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", 
              SuperscriptBox["s", "2"]], ")"}], 
            RowBox[{"b", "/", "2"}]], " ", 
           RowBox[{"Gamma", "[", 
            FractionBox["b", "2"], "]"}], " ", 
           RowBox[{"Hypergeometric1F1", "[", 
            RowBox[{
             RowBox[{"1", "+", 
              FractionBox["b", "2"]}], ",", 
             FractionBox["3", "2"], ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"9", " ", 
                SuperscriptBox["s", "2"]}], "4"]}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}], "2"]], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", 
                 FractionBox["1", 
                  SuperscriptBox["s", "2"]]}], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]], 
              " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}]}], ")"}], " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["s", "2"]]], " ", 
           RowBox[{"Gamma", "[", 
            FractionBox[
             RowBox[{"1", "+", "b"}], "2"], "]"}], " ", 
           RowBox[{"Hypergeometric1F1", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"1", "+", "b"}], "2"], ",", 
             FractionBox["1", "2"], ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"9", " ", 
                SuperscriptBox["s", "2"]}], "4"]}]}], "]"}]}]}], ")"}]}]}], 
      "+", 
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", 
        RowBox[{"-", "b"}]], " ", 
       SuperscriptBox["2", 
        RowBox[{"2", "+", "b"}]], " ", 
       SuperscriptBox["3", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["3", "b"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"3", " ", "\[ImaginaryI]"}], ")"}], "b"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}], "2"]]}]}], 
        ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", 
          FractionBox["1", 
           SuperscriptBox["s", "2"]]}], ")"}], 
        RowBox[{"b", "/", "2"}]], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"1", "+", "b"}], "2"], ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"], ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         FractionBox[
          RowBox[{"9", " ", 
           SuperscriptBox["s", "2"]}], "4"]}], "]"}]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.8230383318380437`*^9, 3.8250616998538017`*^9}]
}, Open  ]]
}, Closed]]
},
WindowSize->{683, 695},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 209, 3, 49, "Subsection"],
Cell[792, 27, 163, 2, 30, "Text"],
Cell[958, 31, 309, 9, 30, "Input"],
Cell[1270, 42, 193, 6, 68, "Text"],
Cell[CellGroupData[{
Cell[1488, 52, 201, 5, 30, "Input"],
Cell[1692, 59, 390, 10, 44, "Output"]
}, Open  ]],
Cell[2097, 72, 145, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[2267, 77, 592, 16, 30, "Input"],
Cell[2862, 95, 1087, 33, 82, "Output"]
}, Open  ]],
Cell[3964, 131, 486, 15, 88, "Input"],
Cell[4453, 148, 386, 10, 30, "Input"],
Cell[CellGroupData[{
Cell[4864, 162, 129, 2, 30, "Input"],
Cell[4996, 166, 684, 22, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5717, 193, 622, 11, 30, "Input"],
Cell[6342, 206, 1563, 51, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7942, 262, 173, 4, 30, "Input"],
Cell[8118, 268, 1111, 38, 78, "Output"]
}, Open  ]],
Cell[9244, 309, 197, 3, 107, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[9478, 317, 281, 3, 41, "Subsection"],
Cell[CellGroupData[{
Cell[9784, 324, 1427, 49, 174, "Input"],
Cell[11214, 375, 991, 34, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12242, 414, 1512, 51, 216, "Input"],
Cell[13757, 467, 2602, 91, 160, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16396, 563, 628, 17, 30, "Input"],
Cell[17027, 582, 3563, 105, 326, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20627, 692, 83, 2, 30, "Input"],
Cell[20713, 696, 1659, 55, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22409, 756, 475, 10, 50, "Input"],
Cell[22887, 768, 1486, 50, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24410, 823, 1471, 50, 174, "Input"],
Cell[25884, 875, 999, 34, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26920, 914, 154, 4, 30, "Input"],
Cell[27077, 920, 721, 24, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27835, 949, 198, 5, 30, "Input"],
Cell[28036, 956, 747, 25, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28820, 986, 1115, 37, 110, "Input"],
Cell[29938, 1025, 1998, 66, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31973, 1096, 84, 2, 30, "Input"],
Cell[32060, 1100, 1646, 54, 130, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33743, 1159, 260, 7, 50, "Input"],
Cell[34006, 1168, 1226, 41, 79, "Output"]
}, Open  ]],
Cell[35247, 1212, 89, 1, 50, "Input"],
Cell[CellGroupData[{
Cell[35361, 1217, 422, 9, 30, "Input"],
Cell[35786, 1228, 1337, 44, 122, "Output"]
}, Open  ]],
Cell[37138, 1275, 412, 12, 30, "Input"],
Cell[CellGroupData[{
Cell[37575, 1291, 125, 2, 30, "Input"],
Cell[37703, 1295, 798, 26, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38538, 1326, 150, 3, 30, "Input"],
Cell[38691, 1331, 829, 27, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39557, 1363, 421, 13, 30, "Input"],
Cell[39981, 1378, 1163, 36, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41181, 1419, 475, 13, 30, "Input"],
Cell[41659, 1434, 1229, 37, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42925, 1476, 1091, 34, 92, "Input"],
Cell[44019, 1512, 1063, 33, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45119, 1550, 1147, 34, 127, "Input"],
Cell[46269, 1586, 1127, 34, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47433, 1625, 819, 24, 50, "Input"],
Cell[48255, 1651, 7038, 129, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55330, 1785, 702, 21, 50, "Input"],
Cell[56035, 1808, 17709, 304, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73781, 2117, 696, 21, 50, "Input"],
Cell[74480, 2140, 18699, 320, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93216, 2465, 761, 24, 50, "Input"],
Cell[93980, 2491, 12937, 226, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106954, 2722, 742, 23, 50, "Input"],
Cell[107699, 2747, 26645, 450, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134381, 3202, 738, 23, 50, "Input"],
Cell[135122, 3227, 27739, 468, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162898, 3700, 202, 3, 30, "Input"],
Cell[163103, 3705, 137, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163277, 3712, 1299, 38, 88, "Input"],
Cell[164579, 3752, 240, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164856, 3760, 907, 29, 50, "Input"],
Cell[165766, 3791, 26517, 448, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192320, 4244, 946, 29, 69, "Input"],
Cell[193269, 4275, 24268, 411, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217574, 4691, 984, 30, 50, "Input"],
Cell[218561, 4723, 27625, 466, 243, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[246235, 5195, 135, 1, 41, "Subsection"],
Cell[246373, 5198, 138, 5, 68, "Text"],
Cell[246514, 5205, 222, 5, 30, "Input"],
Cell[CellGroupData[{
Cell[246761, 5214, 1967, 54, 107, "Input"],
Cell[248731, 5270, 4799, 93, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253567, 5368, 1924, 55, 126, "Input"],
Cell[255494, 5425, 7371, 136, 247, "Output"]
}, Open  ]],
Cell[262880, 5564, 173, 3, 88, "Input"],
Cell[CellGroupData[{
Cell[263078, 5571, 1972, 56, 126, "Input"],
Cell[265053, 5629, 4900, 95, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269990, 5729, 1974, 56, 126, "Input"],
Cell[271967, 5787, 7385, 136, 248, "Output"]
}, Open  ]],
Cell[279367, 5926, 150, 2, 69, "Input"],
Cell[CellGroupData[{
Cell[279542, 5932, 1976, 56, 126, "Input"],
Cell[281521, 5990, 6686, 125, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288244, 6120, 2081, 58, 145, "Input"],
Cell[290328, 6180, 7363, 136, 280, "Output"]
}, Open  ]],
Cell[297706, 6319, 174, 3, 88, "Input"],
Cell[CellGroupData[{
Cell[297905, 6326, 1976, 56, 126, "Input"],
Cell[299884, 6384, 32413, 551, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332334, 6940, 1951, 56, 126, "Input"],
Cell[334288, 6998, 25054, 426, 242, "Output"]
}, Open  ]],
Cell[359357, 7427, 121, 6, 87, "Text"],
Cell[359481, 7435, 328, 7, 30, "Input"],
Cell[CellGroupData[{
Cell[359834, 7446, 1611, 48, 88, "Input"],
Cell[361448, 7496, 215, 3, 30, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[361712, 7505, 267, 3, 41, "Subsection"],
Cell[361982, 7510, 182, 2, 30, "Text"],
Cell[362167, 7514, 437, 12, 30, "Input"],
Cell[362607, 7528, 137, 5, 68, "Text"],
Cell[CellGroupData[{
Cell[362769, 7537, 201, 5, 30, "Input"],
Cell[362973, 7544, 463, 12, 44, "Output"]
}, Open  ]],
Cell[363451, 7559, 143, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[363619, 7564, 592, 16, 30, "Input"],
Cell[364214, 7582, 3221, 98, 101, "Output"]
}, Open  ]],
Cell[367450, 7683, 2448, 77, 73, "Input"],
Cell[369901, 7762, 386, 10, 30, "Input"],
Cell[CellGroupData[{
Cell[370312, 7776, 129, 2, 30, "Input"],
Cell[370444, 7780, 684, 22, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371165, 7807, 622, 11, 30, "Input"],
Cell[371790, 7820, 5818, 164, 149, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377645, 7989, 221, 5, 30, "Input"],
Cell[377869, 7996, 5612, 161, 149, "Output"]
}, Open  ]]
}, Closed]]
}
]
*)

