(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    439199,       9403]
NotebookOptionsPosition[    430295,       9109]
NotebookOutlinePosition[    430643,       9124]
CellTagsIndexPosition[    430600,       9121]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The Bath: Ohmic", "Subsection",
 CellChangeTimes->{{3.8217517678010235`*^9, 3.821751768646145*^9}, {
  3.821751953180216*^9, 3.8217519603164215`*^9}, {3.8250608978394284`*^9, 
  3.8250609055420218`*^9}}],

Cell["The Bath Spectral function", "Text",
 CellChangeTimes->{{3.8217519734679155`*^9, 3.8217519816613307`*^9}, {
  3.825061510528457*^9, 3.8250615136545753`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "[", "w_", "]"}], ":=", 
  RowBox[{"w", "*", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"w", "/", "s"}], ")"}], "^", "2"}]}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{{3.8217519655963297`*^9, 3.8217520197930503`*^9}}],

Cell["\<\


The Imaginary part of \\Sigma^R is then given by, \
\>", "Text",
 CellChangeTimes->{{3.825061532324966*^9, 3.8250615528578196`*^9}, {
  3.825061633572931*^9, 3.825061650791919*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ImSigma", "[", "w_", "]"}], "=", 
  RowBox[{"-", 
   RowBox[{"J", "[", "w", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8217522299389095`*^9, 3.8217522587548575`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["w", "2"], 
      SuperscriptBox["s", "2"]]}]]}], " ", "w"}]], "Output",
 CellChangeTimes->{3.821752259671894*^9, 3.82183968374121*^9, 
  3.821929505207243*^9, 3.821964861035446*^9, 3.822452485082708*^9, 
  3.8230374805364113`*^9, 3.8231556075229917`*^9}]
}, Open  ]],

Cell["The Real Part is then obtained by Kramers-Kronig Relations,", "Text",
 CellChangeTimes->{{3.8250616560259285`*^9, 3.8250616839629216`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "Pi"}], ")"}], "*", "a", " ", "*", 
    RowBox[{
     RowBox[{"ImSigma", "[", "a", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "^", "2"}], "-", 
       RowBox[{"w", "^", "2"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821753749189503*^9, 3.821753753198762*^9}, {
  3.821755306375981*^9, 3.821755312546644*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "s"}], "+", 
     RowBox[{"2", " ", "w", " ", 
      RowBox[{"DawsonF", "[", 
       FractionBox["w", "s"], "]"}]}]}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]], " ", "s"}]], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"w", "\[Element]", "Reals"}], "||", 
      RowBox[{
       RowBox[{"Re", "[", "w", "]"}], "\[Equal]", "0"}]}], ")"}], "&&", 
    RowBox[{
     SuperscriptBox["w", "2"], "\[Element]", "Reals"}], "&&", 
    RowBox[{"w", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", "w", "]"}], "\[NotEqual]", "0"}], "||", 
      RowBox[{"w", "\[NotElement]", "Reals"}]}], ")"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", 
      SuperscriptBox["s", "2"], "]"}], "\[GreaterEqual]", "0"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.821753759731719*^9, 3.8217553184824705`*^9, 
  3.821839695270445*^9, 3.82245249641241*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReSigma", "[", "w_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "s"}], "+", 
    RowBox[{"2", " ", "w", " ", 
     RowBox[{"DawsonF", "[", 
      FractionBox["w", "s"], "]"}]}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "Input",
 CellChangeTimes->{{3.821839741047043*^9, 3.8218397592830734`*^9}, {
  3.8218452121259537`*^9, 3.8218452127185745`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SigmaR", "[", "w_", "]"}], ":=", " ", 
  RowBox[{"L", "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ReSigma", "[", "w", "]"}], "+", 
     RowBox[{"I", " ", "*", 
      RowBox[{"ImSigma", "[", "w", "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.821839778202778*^9, 3.8218398036582165`*^9}, {
  3.823038173203387*^9, 3.8230381802528486`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SigmaR", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.8218398069955335`*^9, 3.8218398119370995`*^9}}],

Cell[BoxData[
 RowBox[{"L", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["a", "2"], 
        SuperscriptBox["s", "2"]]}]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "s"}], "+", 
      RowBox[{"2", " ", "a", " ", 
       RowBox[{"DawsonF", "[", 
        FractionBox["a", "s"], "]"}]}]}], 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", "s"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8218398127570295`*^9, 3.8230381828596225`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierTransform", "[", 
  RowBox[{
   RowBox[{"SigmaR", "[", "w", "]"}], ",", "w", ",", "t", ",", 
   RowBox[{"FourierParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218401317029853`*^9, 3.8218401516552687`*^9}, {
  3.8218401926371565`*^9, 3.8218402058454757`*^9}, {3.82184354174257*^9, 
  3.821843542105509*^9}, {3.8218436033623877`*^9, 3.82184360511215*^9}, {
  3.8218436425072947`*^9, 3.82184367876254*^9}, {3.8218438223023806`*^9, 
  3.821843823073576*^9}, {3.823038224640732*^9, 3.8230382250730515`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", "L", " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]], " ", 
     SuperscriptBox["s", "4"], " ", "t"}], 
    RowBox[{"4", " ", 
     SqrtBox["\[Pi]"]}]]}], "-", 
  FractionBox[
   RowBox[{"L", " ", 
    RowBox[{"DiracDelta", "[", "t", "]"}]}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "L", " ", 
    SuperscriptBox["s", "3"], " ", "t", " ", 
    RowBox[{"Sign", "[", "t", "]"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "L", " ", "s", " ", 
    RowBox[{
     SuperscriptBox["Sign", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.821840221328022*^9, 3.8218436833403797`*^9, 
  3.8224525125971365`*^9, 3.823038200710368*^9, 3.8230382309728703`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%13", "/.", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.823038315217091*^9, 3.8230383313054914`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"9", " ", 
         SuperscriptBox["s", "2"]}], "4"]}]], " ", "L", " ", 
     SuperscriptBox["s", "3"]}], 
    RowBox[{"4", " ", 
     SqrtBox["\[Pi]"]}]]}], "-", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"9", " ", 
        SuperscriptBox["s", "2"]}], "4"]}]], " ", "L", " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]], " ", 
    SuperscriptBox["s", "4"]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"9", " ", 
        SuperscriptBox["s", "2"]}], "4"]}]], " ", "L", " ", "s", " ", 
    RowBox[{
     SuperscriptBox["Sign", "\[Prime]",
      MultilineFunction->None], "[", "3", "]"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.8230383318380437`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8230383120401344`*^9, 3.823038312340904*^9}}],

Cell[BoxData["\\"], "Input",
 CellChangeTimes->{3.8250614789979515`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots: \[Sigma]-\[Lambda] parameter space", "Subsection",
 CellChangeTimes->{{3.8250608773691483`*^9, 3.8250608784628897`*^9}, {
  3.8250609096042466`*^9, 3.8250609211190805`*^9}, {3.8250609612100115`*^9, 
  3.8250609730706205`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["t", "2"]}]], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", 
      SuperscriptBox["s", "4"], " ", "t"}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]]}], "-", 
   FractionBox[
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"DiracDelta", "[", "t", "]"}]}], 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", 
     SuperscriptBox["s", "3"], " ", "t", " ", 
     RowBox[{"Sign", "[", "t", "]"}]}], 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", "s", " ", 
     RowBox[{
      SuperscriptBox["Sign", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], 
    SqrtBox["2"]]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"DiracDelta", "[", "t", "]"}]}], 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]]]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"], " ", "t"}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", "t", " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]]}]], "Output",
 CellChangeTimes->{3.8224526479188848`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", "t"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", 
         SuperscriptBox["s", "2"], " ", 
         SuperscriptBox["t", "2"]}]], " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "4"], " ", "t"}], 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]]}], "-", 
    FractionBox[
     RowBox[{
      SqrtBox["2"], " ", 
      RowBox[{"DiracDelta", "[", "t", "]"}]}], 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["t", "2"]}]], " ", 
      SuperscriptBox["s", "3"], " ", "t", " ", 
      RowBox[{"Sign", "[", "t", "]"}]}], 
     RowBox[{"2", " ", 
      SqrtBox["2"]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["t", "2"]}]], " ", "s", " ", 
      RowBox[{
       SuperscriptBox["Sign", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], 
     SqrtBox["2"]]}], ")"}]}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]], " ", 
     SuperscriptBox["s", "4"]}], 
    RowBox[{"2", " ", 
     SqrtBox["2"]}]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]], " ", 
    SuperscriptBox["s", "6"], " ", 
    SuperscriptBox["t", "2"]}], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SuperscriptBox["s", "3"], " ", 
    RowBox[{"Sign", "[", "t", "]"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SuperscriptBox["s", "5"], " ", 
    SuperscriptBox["t", "2"], " ", 
    RowBox[{"Sign", "[", "t", "]"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   RowBox[{
    SqrtBox["2"], " ", 
    RowBox[{
     SuperscriptBox["DiracDelta", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], 
   SqrtBox[
    FractionBox["1", 
     SuperscriptBox["s", "2"]]]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SuperscriptBox["s", "3"], " ", "t", " ", 
    RowBox[{
     SuperscriptBox["Sign", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], 
   SqrtBox["2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "s", " ", 
    RowBox[{
     SuperscriptBox["Sign", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], 
   SqrtBox["2"]]}]], "Output",
 CellChangeTimes->{3.822452621967168*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", "Pi", ")"}]}], ")"}], "*", 
    RowBox[{
     RowBox[{"J", "[", "a", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"a", "-", "w"}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218396972054005`*^9, 3.8218396990860257`*^9}, {
  3.8230377730551443`*^9, 3.823037826665965*^9}, {3.823038016870184*^9, 
  3.823038047850198*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", 
          SqrtBox[
           FractionBox["1", 
            SuperscriptBox["s", "2"]]]}]], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["w", "2"], 
            SuperscriptBox["s", "2"]]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              SuperscriptBox["w", "2"], 
              SuperscriptBox["s", "2"]]], " ", 
            SqrtBox["\[Pi]"]}], "+", 
           RowBox[{"2", " ", "\[Pi]", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["s", "2"]]], " ", "w", " ", 
            RowBox[{"Erfi", "[", 
             RowBox[{
              SqrtBox[
               FractionBox["1", 
                SuperscriptBox["s", "2"]]], " ", "w"}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["s", "2"]]], " ", "w", " ", 
            RowBox[{"ExpIntegralEi", "[", 
             FractionBox[
              SuperscriptBox["w", "2"], 
              SuperscriptBox["s", "2"]], "]"}]}], "+", 
           RowBox[{
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["s", "2"]]], " ", "w", " ", 
            RowBox[{"Log", "[", 
             FractionBox["1", 
              SuperscriptBox["w", "2"]], "]"}]}], "+", 
           RowBox[{"4", " ", 
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["s", "2"]]], " ", "w", " ", 
            RowBox[{"Log", "[", 
             RowBox[{"-", "w"}], "]"}]}], "-", 
           RowBox[{
            SqrtBox[
             FractionBox["1", 
              SuperscriptBox["s", "2"]]], " ", "w", " ", 
            RowBox[{"Log", "[", 
             SuperscriptBox["w", "2"], "]"}]}]}], ")"}]}]}]}], "+", 
      RowBox[{"\[Pi]", " ", "w", " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "4"]}], ",", 
             RowBox[{"-", 
              FractionBox["1", "4"]}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["3", "4"]}], ",", 
             RowBox[{"-", 
              FractionBox["1", "4"]}]}], "}"}]}], "}"}], ",", 
         FractionBox[
          SuperscriptBox["w", "2"], 
          SuperscriptBox["s", "2"]]}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      SuperscriptBox["s", "2"], "]"}], "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "w", "]"}], "<", "0"}], "&&", 
    RowBox[{
     RowBox[{"Im", "[", "w", "]"}], "\[Equal]", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.8218397021853905`*^9, 3.8230378538525066`*^9, {3.823038031392242*^9, 
   3.8230380556548786`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%9", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{
      SuperscriptBox["DiracDelta", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]]]}], "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", 
     SqrtBox["2"]}]], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "4"]}], "+", 
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "6"], " ", 
       SuperscriptBox["t", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["s", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{
          SuperscriptBox["s", "2"], " ", 
          SuperscriptBox["t", "2"]}]}], ")"}], " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["s", "3"], " ", "t", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"4", " ", "s", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.8224526305049725`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"InverseFourierTransform", "[", 
   RowBox[{
    RowBox[{"SigmaR", "[", "w", "]"}], ",", "w", ",", "t", ",", " ", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8218438334632096`*^9, 3.8218438640941935`*^9}, {
   3.821843981629959*^9, 3.8218439836720314`*^9}, 3.8224527936587515`*^9, 
   3.8224528267971945`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]], " ", 
     SuperscriptBox["s", "4"], " ", "t"}], 
    RowBox[{"4", " ", 
     SqrtBox["\[Pi]"]}]]}], "-", 
  FractionBox[
   RowBox[{"DiracDelta", "[", "t", "]"}], 
   RowBox[{
    SqrtBox["\[Pi]"], " ", 
    SqrtBox[
     FractionBox["1", 
      SuperscriptBox["s", "2"]]]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SuperscriptBox["s", "3"], " ", "t", " ", 
    RowBox[{"Sign", "[", "t", "]"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "s", " ", 
    RowBox[{
     SuperscriptBox["Sign", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.8218438507143693`*^9, 3.8218438975570235`*^9, 
  3.821843986060584*^9, 3.8224528281627345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["t", "2"]}]], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", 
      SuperscriptBox["s", "4"], " ", "t"}], 
     RowBox[{"4", " ", 
      SqrtBox["\[Pi]"]}]]}], "-", 
   FractionBox[
    RowBox[{"DiracDelta", "[", "t", "]"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]]}]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", 
     SuperscriptBox["s", "3"], " ", "t", " ", 
     RowBox[{"Sign", "[", "t", "]"}]}], 
    RowBox[{"4", " ", 
     SqrtBox["\[Pi]"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["s", "2"], " ", 
       SuperscriptBox["t", "2"]}]], " ", "s", " ", 
     RowBox[{
      SuperscriptBox["Sign", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"]}]]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"DiracDelta", "[", "t", "]"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]]}]]}], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"], " ", "t"}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", "t", " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.822452832040481*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%15", "/.", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", " ", "7"}], "}"}]}]], "Input",
 CellChangeTimes->{3.8224535388744926`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"49", " ", 
        SuperscriptBox["s", "2"]}], "4"]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"7", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"7", " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "7", "]"}]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.822453539544669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%15", "/.", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", " ", 
    RowBox[{"-", "7"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.822453506786804*^9, 3.8224535224790397`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"49", " ", 
        SuperscriptBox["s", "2"]}], "4"]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"7", " ", 
       SuperscriptBox["s", "2"]}], "-", 
      RowBox[{"7", " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "7"}], "]"}]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.8224535235811167`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", "t"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"DiracDelta", "[", "t", "]"}], 
      RowBox[{
       SqrtBox["\[Pi]"], " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]]}]]}], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", 
        SuperscriptBox["s", "2"], " ", 
        SuperscriptBox["t", "2"]}]], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", 
         SuperscriptBox["s", "3"], " ", "t"}], "+", 
        RowBox[{
         SuperscriptBox["s", "2"], " ", "t", " ", 
         RowBox[{"Sign", "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["Sign", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
     RowBox[{"4", " ", 
      SqrtBox["\[Pi]"]}]]}], ")"}]}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["DiracDelta", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]]}]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    SuperscriptBox["s", "3"], " ", "t", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"], " ", "t"}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", "t", " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
   RowBox[{"8", " ", 
    SqrtBox["\[Pi]"]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "3"]}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["s", "2"], " ", "t", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.8224528573603697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%16", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["DiracDelta", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]]}]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], " ", 
      SuperscriptBox["s", "2"], " ", 
      SuperscriptBox["t", "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "4"]}], "+", 
      RowBox[{
       SqrtBox[
        FractionBox["1", 
         SuperscriptBox["s", "2"]]], " ", 
       SuperscriptBox["s", "6"], " ", 
       SuperscriptBox["t", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["s", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{
          SuperscriptBox["s", "2"], " ", 
          SuperscriptBox["t", "2"]}]}], ")"}], " ", 
       RowBox[{"Sign", "[", "t", "]"}]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["s", "3"], " ", "t", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"4", " ", "s", " ", 
       RowBox[{
        SuperscriptBox["Sign", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
   RowBox[{"8", " ", 
    SqrtBox["\[Pi]"]}]]}]], "Output",
 CellChangeTimes->{3.8224528615242934`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%17", "/.", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", " ", 
     RowBox[{"-", "7"}]}], "}"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.822452577090623*^9, {3.822453774074772*^9, 3.822453782965702*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"49", " ", 
       SuperscriptBox["s", "2"]}], "4"]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", 
      SuperscriptBox["s", "4"]}], "+", 
     RowBox[{"49", " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", 
      SuperscriptBox["s", "6"]}], "-", 
     RowBox[{
      SuperscriptBox["s", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"49", " ", 
         SuperscriptBox["s", "2"]}]}], ")"}]}], "+", 
     RowBox[{"28", " ", 
      SuperscriptBox["s", "3"], " ", 
      RowBox[{
       SuperscriptBox["Sign", "\[Prime]",
        MultilineFunction->None], "[", 
       RowBox[{"-", "7"}], "]"}]}], "+", 
     RowBox[{"4", " ", "s", " ", 
      RowBox[{
       SuperscriptBox["Sign", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", 
       RowBox[{"-", "7"}], "]"}]}]}], ")"}]}], 
  RowBox[{"8", " ", 
   SqrtBox["\[Pi]"]}]]], "Output",
 CellChangeTimes->{3.8224537833820543`*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.8224525790963387`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierTransform", "[", 
  RowBox[{
   RowBox[{"SigmaR", "[", "w", "]"}], ",", "w", ",", "t", ",", 
   RowBox[{"FourierParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218403170369873`*^9, 3.8218403179859514`*^9}, {
  3.8218435357875896`*^9, 3.821843536209077*^9}, {3.8218439953966894`*^9, 
  3.8218439956974616`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], " ", 
     SuperscriptBox["s", "2"], " ", 
     SuperscriptBox["t", "2"]}]], " ", 
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    FractionBox["1", 
     SuperscriptBox["s", "2"]]], " ", 
   SuperscriptBox["s", "4"], " ", "t"}], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"], " ", 
    RowBox[{"DiracDelta", "[", "t", "]"}]}], 
   SqrtBox[
    FractionBox["1", 
     SuperscriptBox["s", "2"]]]], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], " ", 
     SuperscriptBox["s", "2"], " ", 
     SuperscriptBox["t", "2"]}]], " ", 
   SqrtBox["\[Pi]"], " ", 
   SuperscriptBox["s", "3"], " ", "t", " ", 
   RowBox[{"Sign", "[", "t", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], " ", 
     SuperscriptBox["s", "2"], " ", 
     SuperscriptBox["t", "2"]}]], " ", 
   SqrtBox["\[Pi]"], " ", "s", " ", 
   RowBox[{
    SuperscriptBox["Sign", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.821840322398514*^9, 3.8218439966149244`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DR", "[", "w_", "]"}], ":=", " ", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"w", "+", 
        RowBox[{"I", "*", "n"}]}], ")"}], " ", "^", "2"}], "-", 
     RowBox[{"k", "^", "2"}], "-", 
     RowBox[{"SigmaR", "[", "w", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8219295244825687`*^9, 3.821929572255233*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DR", "[", "w", "]"}]], "Input",
 CellChangeTimes->{{3.8219295766767344`*^9, 3.8219295803684845`*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["k", "2"]}], "+", 
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["w", "2"], 
       SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "n"}], "+", "w"}], ")"}], "2"], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "s"}], "+", 
     RowBox[{"2", " ", "w", " ", 
      RowBox[{"DawsonF", "[", 
       FractionBox["w", "s"], "]"}]}]}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["s", "2"]]], " ", "s"}]]}]]], "Output",
 CellChangeTimes->{{3.821929580958147*^9, 3.821929607146673*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Im", "[", 
  RowBox[{"DR", "[", "w", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.821929613996758*^9, 3.821929641703515*^9}}],

Cell[BoxData[
 RowBox[{"Im", "[", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["k", "2"]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["w", "2"], 
        SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "n"}], "+", "w"}], ")"}], "2"], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "s"}], "+", 
      RowBox[{"2", " ", "w", " ", 
       RowBox[{"DawsonF", "[", 
        FractionBox["w", "s"], "]"}]}]}], 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}]], "Output",
 CellChangeTimes->{3.8219296422155485`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Im", "[", 
     RowBox[{"DR", "[", "w", "]"}], "]"}], 
    RowBox[{"Coth", "[", 
     RowBox[{
      RowBox[{"w", "/", "2"}], "T"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8219296691828623`*^9, 3.8219297245052776`*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{
    RowBox[{"Coth", "[", 
     FractionBox[
      RowBox[{"T", " ", "w"}], "2"], "]"}], " ", 
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "n"}], "+", "w"}], ")"}], "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}]}], 
   RowBox[{"\[DifferentialD]", "w"}]}]}]], "Output",
 CellChangeTimes->{3.821929933164854*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Im", "[", 
     RowBox[{"DR", "[", "w", "]"}], "]"}], 
    RowBox[{"Coth", "[", 
     RowBox[{
      RowBox[{"w", "/", "2"}], "T"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821929757258026*^9, 3.821929761029167*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Coth", "[", 
     FractionBox[
      RowBox[{"T", " ", "w"}], "2"], "]"}], " ", 
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "n"}], "+", "w"}], ")"}], "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8219300403324547`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "*", "w"}], "+", 
       SuperscriptBox["w", "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}], 
    RowBox[{"Coth", "[", 
     RowBox[{
      RowBox[{"w", "/", "2"}], "T"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.82192978676337*^9, 3.821929818674303*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{
    RowBox[{"Coth", "[", 
     FractionBox[
      RowBox[{"T", " ", "w"}], "2"], "]"}], " ", 
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
       SuperscriptBox["w", "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}]}], 
   RowBox[{"\[DifferentialD]", "w"}]}]}]], "Output",
 CellChangeTimes->{3.8219302445225525`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "*", "w"}], "+", 
       SuperscriptBox["w", "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}], 
    RowBox[{"Coth", "[", 
     RowBox[{
      RowBox[{"w", "/", "2"}], "T"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219298416800904`*^9, 3.821929845629278*^9}}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Coth", "[", 
     FractionBox[
      RowBox[{"T", " ", "w"}], "2"], "]"}], " ", 
    RowBox[{"Im", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["k", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["w", "2"], 
           SuperscriptBox["s", "2"]]}]], " ", "w"}], "+", 
       SuperscriptBox["w", "2"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"DawsonF", "[", 
           FractionBox["w", "s"], "]"}]}]}], 
        RowBox[{
         SqrtBox["\[Pi]"], " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["s", "2"]]], " ", "s"}]]}]], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Output",
 CellChangeTimes->{3.8219303327547245`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"w", "^", "2"}], "-", "4", "-", 
        RowBox[{"w", " ", 
         RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"w", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219405184338765`*^9, 3.8219405475986123`*^9}, {
  3.821940674846694*^9, 3.821941003387356*^9}, {3.821941060289645*^9, 
  3.821941061673741*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
S534qCNiwoYVmSxEEXtON1jw7mXD/wCc654h
       "]]},
     Annotation[#, "Charting`Private`Tag$79265#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.5, 0.00047503241917094845`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, -2}, {0.00047503241917094845`, 2.863870911607771}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.82194092890119*^9, 3.821941003946752*^9}, 
   3.821941063050807*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"w", "^", "2"}], "-", "4", "-", 
        RowBox[{"w", " ", 
         RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"w", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219410757973175`*^9, 3.8219410772611723`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJw123k0VV+8APB7ryHzWBlKkTJzCRWp7y4lSpKEaEQUpYwZigaZksqQSBIl
UxKVMfuUKcPPPM+Z56GIjO94672/7vqsc+4+e3/33t/z3XetK2Z+w+AyjUKh
8DNQKGufdwaP/15dZSAYRbJOqQwzowGPjbNtSwzEPjtW0bsZzEiPp2su8x8D
4e5hs47fkxmJqt1cvvGHgahinvzKuZ4Z/QgIZukeYCDOdW7zPaXJhFgUmrYQ
/zEQXWX4OstHBhTqdPHY3ZcMxFCIiLVhDgUts0jrnX3BQHDO+Hsdf0xBVq+m
9feEMRAr9+TUAi5S0O7i+0ZTQQzEnood2yrXUVCrwLtLF+8zEHezJkP/pa+A
aO7wLXSVgdDo1aLl8i1BMtXxLWU3A9Ed11zfpjIHe04lMUcoMxA0hw/XtvX/
heK3v64oKZLj0TRdWA37C91H9OXNpRmIwhDtfs9/s7AxSP5rwSYGotw7xdO7
ZAbuCw+V+FAYiM9b+vkdvX4Dz7WtMluXaQRPRTIrq9pvePXNKDDzH43wtL6Y
ofRnGrIuFukP/aYRdTlt/OpXp2E8PrZFp59GjIx3vN16dgpMlM+NcpTRCNcT
50WYc8ZgwDv0+LtiGiGhukFbB8bAsbH8474CGrHu0/mbiUWjEOSm7mSXRyPy
4+7H5jeMQAEWWK5KpRH8upZT8gzDoKBbyxUSQiPOM0S9Sg7uh7xXrPayT2lE
Fl+eyF3pftCZRHUFgTQiL2FI5+r3PrAM/hg+85BGmF87FXZrphcimwNFjVxp
RAN1o4+zdQ8wXT6yU+gcjdhklMq/jtoFteeVjEfPkO21cclbn+2EaJNNt78Z
0Qg1HtfrL7M7YJfuZNElfRoRJm3NfcetHayUw88kadKIZ25mIZzcrfCTOnh3
rwyNcAuiDyc+bYDQxep3nJI0IiPOt2eIpQEuzuaUdYnTiF1PHH9M3K+Hf0NB
671FaASjhffIsdt1IFO9K6GCh0aIlynUqnjXQGC0T9W5OSrBuSUH+KrLweTF
zRn6DJVQ8spveT9fBtuDTYVo01SiotWY9ml7GXx7qGARP0IlpmLNXQV8f8LE
tca/Ex1UolFC4fQ65yLIsSI2fW+lEsm2Lpg9uxB8LiahkCYqIc3YkOZCKYSt
hp4Bu2uoRBZPfKJbxA/Q3yux5W4hldi/m4+TcwjDZlUeTYPvVOL9yDNn8fh8
GFJYsN6eTyXcffIWx2y+wb1tlZ9+ZlKJ+8cS7ANZciGd1eUwbzKVOOr36Fls
yFfwZLho0/ueSvSrN9rP+XyBo8s6T768pRLUgLKo/rufoWdKpOVMNJWQUcue
vuuXDvzNRddin1GJD9IH+TMqPgAh+8bPO4hK1CQtrIvYngLXvG6/tXpExudy
KsOyXxIUSyi3yzwk+48z+yRuvQdHd655jvtU4mTu2a/dlHgQrRzmn/SkEr9S
Iqwp4W/B3TnmWIYrlbBgYT96ZugNSJZ6WIc5k/H0K7zuExcD9ZuNH9xyoBKf
9TVSaI3RoFDImbv3GpWo1j5Q+HRfJLQJDDeKXKUSjCo/l3g2vgA/28Lfq5ep
xI2k2Zgl5ufQw+chU3iBSpzatGXrgFIwPLEy0oo/SyUi8nf/Lbd9Cho5SuZ+
Z6jEGSlzq1aPxzDMyelpY0SOx/dBmod+ADy/NBShe4qcL2upWovTvqD5peCL
gj6VYO3yaXAP8IYpltc1PMepxD/m9JKEyXtwNO00a4MWlVjO6HOuC3GHOQal
HZmaVELov7SfEXdc4K0xx4EIRPYvTDuystgBTiYPnvXYRyV2DAwe8O60g5WV
H67n1Mn4nqMp+Y9fgWSD6FDYTSVSnF29dXMswCTeLU1MhUoIfgsP6fA7D0wL
hhUMSlTiyt+UnWICxpB+XHGoX55K3HOzl3u35SRceMPO+FOGSmgHb80+vU8H
OGYHtiZJkvEemrIelNOEbO0fewO3U4ljJbft77MhsIp6ZWwnRvZvulzAMBGA
f8rVUX8L2T89xvBf/geB0DR8snMTlbhtuTkqRUobrofTk9cLUomAsHKrEmN9
EB5lK/m7nkoMPDvL4MNlBCX7B3qaeamE+eeUHfW7z4FT8PeVHC4yHoID027D
5iA2ECX8ip1KPHjanxEyaQ2Vaq67vFioxOjJslvNH66Dx+NTBpeYqES3y86M
GV4HkPqlYKdJI9cHXbIlI8EZGlTYAnasUojW7JFjC5FucN+v/926JQrBuc4l
9cXQHaC3E9+H5ylEr/Dh+o/a96CdHtVRPkshFENP/XlS9gB2NRlseDpJIb4s
77ttbeQPvTIKSg5jFOKKpG40/WIgPPVkPW44TCEevM6u3RD+BEZ2EN6CvRTi
22aJlYnDIRDu9jJmoYtCbNw/de7n9jA49J9LXns7hTA5bfiMKhwO0U7yMzGN
FKLjbICO5ZGXYFAQaSFdRiEiTMwe6xvFwvb6vs6SYgphdK9z41hOHPztUzC1
KqAQMqc8gt3k3kEEc4F+XB45nuXAs7q7EqBbZ3SfyEcK0Z9YfHS1NxXSTVWz
c5MpROk5y90pxmnwwNZLxTSBQgybD5dkaH4Cicf8suFvKMRQzZPxQoUMuF69
V5A3lELgH4FRPvqZsP/Xw5CPTynEBr9o+9grWcDzu4pL7zGFiNbyuLDokw2f
+S2ZHvlQCEGt2y9ON+bCglHgb0Y3CjHwjhrw5gIBfh3tFfPnKAS18VvHhbYi
MJ2Q0A43pRC0lZo/Li+KQW71ZoGqMYXgCxsuDzIpgSpRphwHfQrxSeDPqexf
P2Gjpfz7sYMUgo3tenGRQAXEjdy51y1JIeyzOE4F+dWA02LJkud2CvEreyws
baUGtDj4XEXEKIS0krfFIZdaGJGPtzMVphAnRsdG8q7WgaJ9pVk9B9m/9Ovf
my41gMfkvmtPe1exRrqjeX9YC0Rd2j2EOlbxQrtNKxJqhbw6RcvpxlVs+TjJ
tOZVK6xkip81KFvFJmdUHYOS2uD+XVbd9Z9WsYtd66pFbQcE8DbIvvBcxeMp
3btt5H9BpPK10ddCq7iG7/LBou0DkPvusrU+/ypuLw2yZ3UbgHaBC70UzlW8
0frm9vb/BmDL0sm2S5RV7Fl7LUzWbRBiC3eXiw+u4D950duvNA5B4mmG5Pef
V3D7xZNzDMmjkHUr0ubjiRXMrfqFnb9jCrZZ2r9r1l7Bg8I6TtT10/BYX7ub
enAFz/5bdtc4Ng3m0n9PG6qs4PuP/7senjMN7G0nD/wTXMFHtB+ptkb9hvP7
WQU1e5ax5LEfCeduzAADk2tRo9MyFhdVPZV6dB70gk+LrkQs4ZmTifl3rCjI
fSe3zpGQJfylJCJ53J+C4mt/2j8NXMK5xMWNHh8oaIVPo2CbF2nFG5PjMxT0
IWSb1RHLJbyfs8FJ8SEVcYRNJj9VWMKfWuTGuZJpqCzcf7d4wSJ2PFLw5xI7
Ezry6pue9tgC5v341KpZgA3Fl7g1Opr9w8F1PD4TSnzovHfohqqEOXw+vWwj
515B5HmRIZWd/y8OkpPjPs23BVHkt2LNhzNYama20bNPDLU+ivBNbviNR46G
L97r2o42s11JnDk4jfctvRyYsZdE5/MrArdpTONH6UG6/rcl0RsHpZv6qtP4
6Q1TQ0FfSSTRtrArRXIaz84E7ZSIkkT0lMeFFhzTOOm0VQClWBId1Mvoqm2Y
wnPd2sVJglLoavDKhk9XpjBzflLzx2wpZKsqw9S2eRL3/KfjdmVYGjkwZb93
4Z7EJzsGTxn8lkbuDUeO8tEmcS7vSLPqojQKcL78RGdwAn9Qr64b5pBBSV9i
hLI+TeD04n4ZJkUZNKwqoBCmNYG72YOsmZ1lkPUuRuMTN8fxRb1WMZEFGWTH
HPJvxHwcZ5YcW1SlySKXRrEon9PjOACGN2uzySIfF/j1TX0cp7S8VzARlkXx
X91t5ZjGcd24hLakuizq3zXtxRo5hmkPTPW9XGWRxe7OhIKCUZx7kNuTZUoW
WSXsNtLKHMX/Rno8Sv/KIhuhZwylSaP4dpqHrfeyLLq5qHm+8tkodvgXvmmI
TQ7dxon8LRdG8WzJsVirHXIo9Iiz58TiCKZOpt6CM3Ko2JjDUEhlBLv/6ZU3
y5NDpT8vU6MkR7Cjb2S5yQ85VKGGU7dsGsGS19MP6/+UQ7WbHFi300awusSB
Srl6OdTV1ZSvUD2M69R55aNG5dC8dZz0oWvDeLMx2mQoJI9kXNVX7d4O4Xx5
flaZm/KI6NCT6X0+hM/66eytd5ZHRpoWp439h7BKx999tzzk0X2uwGSwG8K0
w9ez3vvIo5a3HcY8e4awT/Pyq/QoeeRXczftU/kg5r19TsG+RB4NyJRcmvk9
gJV4RH1fCiig20/bAq/0D+D4/UYG5psVEN/fycz2pgGstvW/LdvEFND+74Jc
RXkDeHGrXGGgjAIKM7bJCfMZwBLwwotrnwI65M3Jv1t4AIt+5K4uuqiA3nSc
KnQ70I8P0DLvbYxTQDv7di7Uq/Rjq4TqTzheARWO8CoqSvXj9Yx/NlgkKaCB
uaqXA1z9uO61/MMXnxSQDJ+u46n2Pvz+4LxuPlZA6VqHtsnf6sNhpXUM863k
9z+q3O1O6cUx4fkuapx0dPor/9e9Mb045WXsoAIPHQ3k/R59HtKLRcWmJ7fw
0xFLWZrxcfdeLLDUVT8hSEfH++ToOUd6ceSNulN62+moUXBHZ0hPDxbSqTTm
VqejwXsbNI4I9uC3408VP1+iI7Y7HydD2Hpw9OspRlVLOlJw1YnrXvqFY7fO
8KRZ0ZGL3R0291+/8PdYg/5QWzpiNutvTkn6hbfrdm4Udqaj7SpfnPn2/cJv
iiztBHzpSJt+QvoC/RfOp9sf3+9PR9dkhtuTxX5hSYOKvAuP6OizqMihw8y/
cCG3s0XwEzrS5HzI51rVje+PMTlmhtOR+YDhx45L3Vj02u3vTO/pyOfXhLmM
YTdWR7yWzQl0lNTut/GWVjdO9Xs1+y6Jjn7X5t3hke3GkozUFaVUOqJ56bzw
GerCxzqLTnB9oSNQGq45ydmFX3+Byx3fyfYkRdRGpzvxTcpA+6UCOqoUORnj
3diJO18rvf9VSEfn2bLtMl93YtVp9eN1JXR0u9ePXWRnJ7626BHs9R8d5YRJ
HR4y6sDX/9UmUJvJ+JsNWlA1OvBgr1/YnhY6MhKNvy8s1oFt6votbFvJ/iWJ
E7qj7XijycP8wnY6kia27P3k1Y53DN0RPvKLjO/DjjNllu341mePgnM9dFR4
NMq1V6cdn+Q5ePdmLx1dbBD6umF9O3b4bakX0E9HL0bWK7kntOHBs5snngyT
6+Fj3YmQx214kf3KgO8IHak4B9ulOLRhHSapHbdH6ahqlTulU6MNR9vcfnJm
nJy/DeySmjWtWHCUu2xoio6cgSrCsdCC7/7ovHF+jo5+MBJ7d3S1YIMg1UqR
eTriKfM03V/Yglvq7FpaSKcYLoXfDGrBjCKaPNoLdNR3dY6vYVsL1haIzVhe
oqOd9K9KE+ta8K7S3fJxy3R0d8ZJf914M+7Xl/c9vEJHm7x+P1bLbMZRN/7N
3l2lI4PQcZboY804LTYle5iiiGLOpEhmKjZjWxA0UKQqookttlrVG5rxfKCD
kzPpgMShB7TuJqxaW2mxSPp7fu+KlVMTPjHNf+QvTRFxeceK3D3ThPlS+/yU
GBTRWZ1LGhH7m7C94Uk7W9LzdZ1u5SxNWHeiXLGNtOJwywz9VSN2fPJjPIlR
ETlNyUsLeDfikSywbSadNXfv3IpNIw6WC65iZFJEB5hliiv2NOL8clZjU9IG
4u7hV+sb8BYR88R50s9lKsv1cxvwAUrKOxFmRdSmtI2yJ7YB73x9/tUB0pao
7ArzzQacp6zm70Pa+Zywehx7A5ZepxTJuE4R5Vja2QX8rseVScrZYqRXbH/E
2rfU45TV5cF9pH3cbdjR+3qcN8Xs5Ui67F4+SAbVY5rfybFA0tz+fE5czvX4
RI6H4zvSL8Jz2tsP1mPnFveWOtLt0Vy8hdL1OLrT4NswadF488PJPPV4RxxP
0QrpxM9sqW6ddfie166jEixk/HPP91wsqsOyLC8q9pDeWZC+UTulDkftqL19
lHROjanXRvc6XNj0+aYt6ZXm1Izli3VY1EE32530wW7aUN+ROnw5JlLNn7TP
oNHmCoU6rObIP/OcdPlEkn7Ghjp894n0aBxpnr8r3pFLtfiolJ5YGmnDZYPs
e721uGJ+6kUu6Xb2RTH9T7XYI/2KUTVpUf4TRrtf1OJU7w1vWkhfFo4L2OJV
i9MMp3b1kE4Sm8tnsqrF5+UuCY+sjUfq2J8x3Vpc5FZ5fHptPIqvJeuVazGd
9VXdHGmX3X/McoVrseoqPXV5bXz7jzyNpdbi2tqhLhqrIlo9/LLQf6gGOx2R
tF1H+tDxyfmbVTVY1FrHgJ20n6GmvMnXGux7Ozmci3SFWfgleFWDJTgT9vGS
5rEYDZPwrsEedeFa/KQNbaCM07YGb8iu+byedIR9yMrMyRrcUJ0UsIF0p+vg
zvY9NZj3pEvZmrfd3WtdsLUG1z1+6LJmK98nL5OYazDrH8lna99PCuqtejZe
jYtXkjavtT8RtpvRrb4ae+w13bT2fOVXj/ZczK3Gh9S9nqz1z/Vt17UjsdVY
8fElj7X+5yUrv1Hwr8b+37V+rY2PkuHbsOFmNZY0dShgWBtvThvrslE1Li3d
sX2VjE9q0ju1kr3V+HuO37N/pAVf3rj6TLQaR+uqXftD+v4jtQgzpmrczcGd
OUa6cY45+Fh9FR4N6nTqX5uf5sjprldV+KOFW0IHac9shZNO1lXYlDfVsIH0
Dg8jnlcLlfhFAve2AtLzZiM3lAor8YktZdrZpCs0PKuKHlfiIie1P6mknVbe
BU2IVuLhVoXOF6R/3JvlQEf+w8k6PibWpJ+b+1+r5/kPv//KPXyG9FVNkYor
rRVYxWSIT3dt/TEdfvTsegX+xrV+H530Bb9Q1t6QclxyzkZlmtwfS0HKzD7d
pTi5vmf0MunqGyWXhZNK8eV4R61TpOP0zYpSHUvxD+kec0T6KN8D7ybmUixq
OzciRDoirJYmLf8Tv1u4415G7v9dUfar5W7FuHbF/ZU46ZuJH+d5+QtwU8Q/
7SIy/yhy2T042P0D36s7npZGetpBjsvxww/88bi9SBRpB41E8fojP3Dmb1Vu
R9LOVbF6z29/x58cTd3FSP8ZkdVRrcB474YdaffIfOf0OeH8cyuMd45/2WZH
+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
//0/Av3//yP+B8603HQ=
       "]]},
     Annotation[#, "Charting`Private`Tag$79878#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.00047714915449173734`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {0.00047714915449173734`, 16.035488752256303`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.821941077760187*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"w", "^", "2"}], "-", "4", "-", 
        RowBox[{"w", " ", 
         RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{"w", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821941166601681*^9, 3.8219411754292183`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
//+/53+UfvO0
       "]]},
     Annotation[#, "Charting`Private`Tag$80818#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.00048708636926779426`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0.00048708636926779426`, 19.937887667387752`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.821941169280187*^9, 3.8219411759921722`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219411919008884`*^9, 3.821941192228113*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
L/Hq6jwd/A9n6Ogi
       "]]},
     Annotation[#, "Charting`Private`Tag$81431#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-2.5, 0.3491777495790137},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, -2}, {0.3491777495790137, 2105.119481624544}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.821941192862199*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219412156494637`*^9, 3.821941216069435*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwc13c8ld8fAPB7L1IZZSSUMorMshrI54kKIUJIREhCKiQjVCTJqIQoQn1V
KNeeOU/2yp7ZM9l7j9/T76/7er+e8zz3nM8553M+h8/8js4NColEKqAlkf79
evzRnN3aosGLrTruTBq2wLA7x0LHOg1+94rN9erAFri4u2cpa4UG5/x9q/Fa
UQvwnrq7cWeOBr9zUpb2+7FWKPR/vb13mAbPedp3VJe9DbZLtB7Af9HgvAYM
Un8ov+Fe4Qe+95U0uOxeTTzj7G/4rW99yKWMBhft1lO6/+w3JHqtCB/7SYMH
0V5za9/VARfr98nGpNPgHkMHTX6IdcIbJzP1R+9o8PIT4zJB77phY7vwReO3
NPjeZyKh9ZPdYBU1o30ylAbvFxvLNlHugROlT/Sng2hwBX23y7bTPfB773/X
zZ7Q4NeeD/m/+tYLykm3LRW8aPCye5M6OZ29kIQdv8n5kBif9cLfOMY+8LhV
Zld3nwaPJ6fxVtv3AW/e3wfYLRp89qCFxoxCPzzXSnXbb0WDY2Of7sY69MPs
gJvHsjkx3lL6xBNf+6GIkdGbakyDD+l5LIpwDYDVNYkgXm0avGua72gJ7SAk
kh0/kU7Q4MthIiNsu4fhpG7CtghpGjzM9bXNH+NhKP3UZy15jAbHyVl1ZxKH
oVdFW9xcmIif2pPxdI0/wBEknlm0jwavqhipqvo4Ap96LDmNOWlw231inxk2
R0BS8r3bPDsNLvl7y+yo0V/QaNoJh5lp8JtZbxsNOUfhCfdImS+JBl9Twcar
vo3BbruDIgc3KPj1v3aLiHMcon7oB2StUPDnDUysrL7jkG1Woj0yS8Hb1C+F
c1pPwER8XLvaEAXnudJ9skZ9CtyW2+X7+yi47IgfTU3VFGy/wBLt1k3BlxRf
P7opNA38E17mia0UfPa9VT938jQYSpuMMVZS8PjLu/fnNczAsM8bzf9KKXiH
kvEPMd5ZcGypSj5dRMEFfN+VB96ZhSBXOSf7fApuft3stxn7HBShvRu13ym4
+w6m5vMu86DNomVqnUjBl51prURb56Hb3Pcn6QsFd01Umn17cgGW6RaeSsZS
cCMGqQ92NIsgodHAHBJCwQse5PEW5S1BftSOe6IvKbgyDpRMyWVQm8IaiwIo
uJ3ARgBD4jJYvk4On39Kwc/sjzp148sKMd/DKwFPKPiuQv9iqtgqeMkeMD7s
RcFH99mtT6SvQmRbAK++CwUv7/R70lu/BkdEip9MOhHjY7nwdNxqHTLc1wZ9
71FwnxmBnnDSBtQdsPmaZUPBNbwnPoQobQLdDRUpLhMK/s3YZ+CNNwlruCZp
MHaFgiue3zZwsIuERRvue/hDn4L3BQVEup8iY8c1pkqua1PwtIPeErxrZIxy
vn1UWpOCHxVY/ppgRsFqoGjXtgsUPOKzjc7zCgpmJR1+JUGZgnPG3l/9/R8N
JiX+2PMhRsH3VxjLfOCixTYFbT9ePE3Ba5L7rhi9osXCuWFi9jgFr9/L+swh
kA4rJ/95JC9CwVcPyT1c/kGPvVmr+49JiIKHnu4zlTLYjpkt5Fb2CFBw8VMh
N48ubsdWRoLYfXgouMv7lZjY8zux0n6XU/rcxHrI17ybu7wTe91pfu3IXgr+
812pRXcKAyZSd/xL9W4KXmGW5fdLjglbrOD9Fc1Ewf3YQ8/YMTBjhUU7Z+/u
JNabvYxKwSAzdjWrW34PLQVXWOB3yr+yGzuSUm72h0TMX9Y9y7Wm3dh8QurT
nA0y/mBhlinhMgsWEO1ba7JExu0PJFp/tmbFDN/enT86T8ZZLt+I+77Gih16
bcRFmSHjy4fW28JD2bAfTyUs4kfJ+PHTr9qae9gxfy9OP5c/ZNyCr9Pn0Ks9
mL4r5duFQTKutGOm/II6BzZp17I42UXG843HbAM692K5Vvi+n7/JeHpWew0p
gxPzNUvAQlrJuI7+cyo5ggs7qOfpf6KejC90fF3f/WwfNq5pnbyjhox7yC6a
bgvZj2Wr6DR1VJLxFzIjbUbfeTBtecEDj4rJeEXVLWcKIy+2X3a3ss5PMu7W
6p8TmM6LjUis3jxUQMbdo8wNAm/yYelHBgMWc8l43gmRC/2H+bHH/DUp5Vlk
/MdVxpin0/zYxf3ZLZHpZDxt9Wjci3IBjJsjbs0uhYxPXPJ2FUo+hKXucD7H
kki8n7eYGvtNEPOkMbMZ+EzE5wqPSUK5EHZhQy044xMZf7V7sOvr8hGMY0k6
/VksGX+eb0vzA0Sw/mme9ivRxHNuazgfI4p9H6XfFH1Hxs/0rHxd3i+OuQ3O
8G+Gk3EVsVXOoWwJjK2txC7uFRm/tuudu4OEJIaLxvr5BJHxbamzXCaSUpid
18NPVi/IuIhP3ctX6tIYV6MBrupHxncolZSOe8lgpYLSnSJPifn91qGC6mUx
RzfmZcYnZDzxinfZwNkTGG/NX7YpTzLue1V48HfXSewXX8nRencyzq4qGD0R
K4e53Y9RT3Mh4ysX1G4ZhitgQhXuN0Pvk3F9Y2T2uEQRa9pv4P3AgYi36Y7H
0ZEY9viu1Icrd8g4OTGVJmT5DCZRzJQnb0fGnXrD9ei9lbGOvX9beG6RcYU8
rrWKM+cwP9vi2a0bZFwwjif1jqIKJos+MPebk/FcBqb+Rh81rJ/VXaTYlIyX
SthxlghoYMFW+ufjjcl4Vn2h4ZS4FqaQK2nud4WMZ/TqqwebXML+MjF52uiT
8XUPwauk+7pY2PWRCA1dMt5RLOJ8aeYyppxRlCGhTcYDZz740EwYYtPbP9Tv
1iTjNsdFjqS8MMaijN0mZtXI+K1q99I1TzPsAvXyjubzZPxeuoZOmrIFtkQj
eThLmVjPHUr+7UVW2CcDxjMRGBnf7h7q+O6sLXYp8Y+x+2kyvvN7xEmGsLvY
5mahi4kcGR/PsUtm9HfCEnWi38AJMh7Tt+rKOO+KGca7UvlkyLhBS1zIq+JH
GN2qXjWNJBn3lq7tcBfzxVI1j40MiZNxVnHtMJmRQMw0loG2XISMh83jz/ar
vcEYF4YPJgiR8cK+TQG7tEgsR7VQPuAQGVd9cKN/+9gHzOp9lIE9Hxn35Dwe
Wi0ag7FNuzhqHyDjZvv+5J+MfofhynrBUvuI/XORPdBGMhS7HX40kZ2TjPcd
T+Xj1QvGuMd2li2yk/FjmnoPPI8/w8oUh/vbWMi4NS+9ysbTx5jT65+bucxk
PPzp/W/RrO4Y3/B77igGMr7Wmfpo2eI+VnPK5bjXdjJuFMXAoIXdw9wDdXWu
05HxIIcv5t6X7bAjfRL2yhRifEZvk6M/3sSaZXb6H94i4SZMPt7jmxbYE7+h
/+jXSTjlnGCf7YHr2NFO/OffZRLOkbE/8P4HE6zz6PuuqgUSrnU6GmV3X8Ge
ez9Y+TZLwr86kZITyvSx4606e15OkfBXaWOmO2X1sAERCUmHcRK+Lh9TfIRB
B3vpuUNT7y8JF25VvCggq42dbhi0Pj5MwsejT70nndfERg/jPpwDJPxZtgI/
enkBC3d9F7PaQ8KFpt3J+0+oYmd/Oed3dpLwHFPYnSN8Hpvh1WkraCfhyIuj
4oLxWSzaSXw+poWEV79+MzNQrISpl2/f7d1Iwm3vCdvfuXoGW943KHqjjoSb
6929qM6FYf/dQSoqv0h417zYnuWZ05hOUaSFcCUJ31S4e2hgTB471DTYXVZK
wk+kNb+WmzuFLQ5KGFkVkfCDl4UmtSROYuULLs20OAnXk0gna4cdxyK2FWl/
zCfhAzGQ6nFYFrPZy1R9JoeE73thk7DZIo0pHDFQ6c0g4Ran6rJS46Uw5lOx
hZ6pJPy7ILs52ytJrFdt7DRPMgn/sBo7wBVyDEs1ks3JSyTh5R1/FfX0jmLe
tl4yRl9IeLpz2HaaL+KY3sOK5OVPJNzm+ScuHR4xTDCQTTQ8loS/W1B60EgV
wZajTOJlo0l4ZgCbqK+pMFb5/TNfUyQJj4eiO6WCR7DbdfKcLG9I+Nmbe62G
Fg5jin1PQ5JfkvAnP4a7+lYOYbtna5kvBpJwdfFjp8KYD2H9FG7/8eck/PnI
n7JgKQEsnc2S7oUvCU/bxcnjbcmP+R76/kjYm4Tbs+0UV/nIhxnILq+VeZHw
I+N9++sneLFV/YBZWldivqqCSdznDmLVN1tuf7xPwoextjNnOQ5g0S68f884
kHDVp+IDD5f3Y2ci03s8bUl4uF92n9gYN8aauGnEY03Cl4pKVx1XuLDBPNWW
PEsS7sPSv8uCnQvz6+qsXjYh/s+gfbLObi9mNCmoGm5EwnmNXCvLv3BgYlt3
i2QNSLiK3D15g8k9WC0vXa6DNgmvkL5YWx3CjsVIasmyaBLjtT//6P0sG+ag
FEFNViPhfhTDpHpDNozDUvzzuBIJH0KndBNPsWIjTg/4XwAJPzBAW+GdxoLl
PP0ZJaxAwifDVZWPSLNgxp8vv7GSJeHBDAs7nyvtxj6OejzuFSLhBQ1lcoHS
TJjTWtm65yES7rv3o0a7IyN2npHVhYePhBtzjgm/zGPARsXj7Y24SbiUr5Qk
broTy1ec/rvMQayfC4wSz/N2YIFacjfC2Uh43ZJ43lWeHdixezVXmxhJuNcD
/icLM/QY5Qlnq8MOEt63uTtV2pIea3ptrsOyjYTffmeCW3dswyatJ16939xC
Fc8clWtb6TD3qdN2Lwe2kFaX7vEhCi32/vqJEaxrCx1hi+QVj6bB8huPWc60
bCFemeDlBwo02GaWgLFO5RZSTriaGPWYgj15tEODPWULOSclcoqKkrGPs5Ty
4oQtdIO9pelRBwkrtlxXvv9pC1X77fXcGUTCtqlNybeEb6GG85X3ame3wJ+l
WfStJ/E9J2dfj5oNSPSu+azqsoX+S/gIyhc3oHqhTGDl3hY6MGjDcbl+HZh/
5+4zurGFTmy6TI/2rsHruBiG/Rpb6NiYlAFZYBXS2COfVZ/bQs2GjPFY7go0
+YbQeMAWyiGfM6DVWwEOW9+1LqktZPf8vGZZ0DJEStuNfeDaQvZLdSfEDi5B
3n83bmqzbaGUnjZW1/JF6NxrOkBi2kI0QW9v5TouwoH1Sx3XSVvIWPv+Vnft
AsQVn6gS+LOJwqI0dotHzUPRcUmVpt5NNDzmWROmNw+DX0SKfH5vok6vp6de
MM2DYCBP3tCvTeRVefvXH+85+HqZJvFz+ibak0Ri0Xo8C5Vl64KG3zfRV6qD
xajyLIyeWozb/mUT7ZfqEvtJPwtiB/5G3nq3iboaND9vvZ4B6nCNv+iTTeSr
kTo7mDkN2Q8ibZK1NtEC8lL3NJ4Efst7/7WpbiJ/F8nLLasTEKit2ktW2kRv
PpyK3vtuAsyFFy/ryWyia2eMQaBvHBg6Lp1Z4dxEx75HXmF9MgbOZUce8rNu
ooODlE5LiTHoTdvKVGfYRAbvb0qf6xyF9IBvYtEbG+jH6LKcn8IoXFPcwanc
v4HeZA9wcDD/hXKRXh27jg10ytrVorFkBKT2ZgWGNm2gDqe5gFbPEaCftqQZ
Kd1AjBY3mkPn/wA1Fp8MSNxAWe339vFODgMNnUtJi9MGqrpceAWxDYH9zEUS
yX4DrR1+lFbQOQhtXYflhW9uoDk8oDomfhCSMhup7leI712ebl1RGAR966Pv
eRU3kG7AX6qn4wB8qRp2sKHfQL7v8kslaPuBNfvHtxDSBtL7pFWh007cxz+9
GclfWUf56y84uJL7QMdD6dqu8XXku8Pvl5dxH6xJRKul162j9sUT8WYFvXDx
9WXezYh19JtZ3JvuZA+4Se1SUwlZR4W2/if5FrohvqH83suAdZTyx26UP60b
NlkVivi91pGnrn1jmWQ3fAvht1KxXEdu8kXZwqe6gDF0KvGlxDoyUXoQIHC7
A07Kfm1qF1pHUU/lBrqPd4Bls/kGP986qlNQXVIhd0D+npaLGWzrqKuntmTv
299gG5Y/0768hh4H0emb/WqHyvDnJwSK1lBTS5agvl4bLJ5QNrPLX0NJtckL
yUJtwN+27peRsYYK7tI9DV5rBTfOu79VvqyhuH7b4NZPrSAcoe9hF7iGriom
KehutIBfpEBRhsEaAkP7QIPiZkiX6xrb1F5DnB/svIQ+NEPv7zB21QtryEli
mNfMrRlO7ttp9VthDS0kxV6ik2qGkXfT27f41hDTRz+2xf+aQCXqx0XV8VVk
KKXBp/ChEaYDO9dph1eRhdh1BbonjRDpuZbws2cVyX8OxjluNMK46Sl6+cZV
lHidorZLrBFe82cg8dxV5NgYz3L6RwN0f046xua3ilZmwuh+jdWD39uq7trH
q4iN96BWekM9SD4fDQhwX0Wj3wVSWnLqwcfmyF+6O6uIobTsd4VfPYiIf4pd
vryKFMM2BPWF68E59R1rt8AqaliPsXFwqgPej7l4JM8qKjxUy517rQ4qQtrt
DfauImpElI+UWh3sv7+3qm4n0d89pVjagTooPBHiXTSzgjQ8sKGK8Fpg/uE/
/wWtoG+gvnLEpAbiy1xbHK+uoDL131zZAtUQIeWs/FVvBd3q7/3yc6sKAqIc
qN2aK6j9waz4vs4qcHC09VfDVpAja5p9bmgVnD5oonjw8ApSkb/X8pKxCpqc
sfjKyWX0JvYncy99JZT1KbCRRpaR2jdqyOORCsjVOPVItm8Z2QldqblRUQEx
/FJGMY3LqLbL0XXuRQXY1ggwO2cvoyIn1dJd7BVAEaR35nuyjFZDRUQzjpbD
wkuaAX33ZaS1ERJwlL0cRta2tAKcltHt7jHG/uUyqKlfFl6yWkZnxgpZJgrL
IMJjtKtafRlh9uniL66UwbHmX+dc9iyjmMvO3bdflsI1nzd7ar8soZbnyq0G
fCVQA4v0LnFLKOhi5+MzTCUAawarvO+XkNGy49uLK8XA67CvxyF4CVkzNhbX
1xdDv2ncFw7nJRR4jmLn6FMMVvJU+WvKS+jua1vzvqkisJ+tuj7RtYjqNDhL
PboKofubuF5Y6yIybsJ9VH4Vgtat4PNQv4iG53L3iP0ohGO9OqKvihcRuTy9
8mxUIcz+ap+XSVxELiX5Vt+vFYLz1z/PHrososT83W7Swz/B04zmOwPbIqJ2
Gb39uu0nUGtVgpoYF1ESt69M0goO/YoB9lHbFtE1D+a8wnEczvPsOXp0dQE1
xjeMizTixHkmSNXpW0DOU2fRQAwO0boXUiOSF1B+xbp4K+CAzr/KFNJYQI6P
yNe+70Ewm9EcNn1uAU0J30g5TEJw6DD3gxxYQLJRAu75owXgR/PxhLr0Agrs
KQxUwQtAG0/PtudeQFt+Gy9/2RVA76m23IyReTR0wqzgVtUPIIkfRMpP59GW
j0jqo6h8eMhx5tpTz3k0M8XGsvY8H5a2zDdKH8yj4YsRvCHO+TDZEC9/wWYe
OfJSHuzTzocOF4lsba159EX5waFntPmQWXw6xYRrHr2ZFDge5ZAHt42NPz74
NofYv7E33DPPhZFznko58XNoKd7r+hmdXLA8StzUPswh33uj344o5YIRZfCg
5+s5dGfry+/T/Lmg+sX2vc+DOfTwkiC/50AOHJp3C311Zg6pD33zkLHJgd8v
Ip4lNs8i9VM6tG7PsqGxhDfJrHYWoQPK53rcsqF663PdnopZJKxF0rxsnw0F
jplcj/JnUa2njIbj5WyIu9qYqPdxFhWKZus6HcoGG1Gmuo27s+imqvSD+yVZ
sFb5iFObcRbVsDr9bWLNgnna7afpts0inVD2rMPbs2BSMfh67tYM+rFxw8Nn
IxN6U6MSDs3NoNfDUv/ZjmRCcWSuwkr7DBreIXWmuyATAmzmzeI+z6Cu5KwD
Z+0zYf9O66/zSjOI6aoGQ2hLBlwrqA7gV5hBmZ82swqqMyDWQfKutuwMkql+
JLNYmAGCHavHk4RmkAWXimZQcgYcTQostmCcQfeP+LSZPc8ApYtpPQ3N06jD
x/w/T8iAW68396RYT6NR05GaAxnpkHTeYqX7+jTSBYp/d1I6TK6WdTJenUZ2
mUO/v35KBweLVx+tNaeRbajolvmbdHgoc0iSV2oa8TkPfDBxSocD30LeHlia
QjyS35lvHk8HW1kRuo79Uyj50qqNVWEaONDlfHbeNYVEOjRS3uelgVuzygVW
yhTKVRi73ZmeBv73bwSr/ZlEFf53uV0+p0FCRgxXdsokev3gx9KBwDT4K7tX
IvT8JIr5zpjPa5QGN4/TGmjdnUDf2BoXP6+mgv22kJVR8wkUZH3deGk+FZxb
+N77Xp5AvU1vui9OpYKvM/T9kJtAr00OsHIMpkJ8pputGN0EUrV1FKatSYWh
4zNeOyLH0c8rEn/0P6aCxYnuL0VFY8is3nY8XDcVrL6c0D+fNYa6THhqRbRS
wYbrFU1Fwhiyr8upKLqQCnfXlK/VvBpDkQ/jxumVUuEh+srWbjqGlA99kmk7
lgpvVO57Tq6NomLvqrMhu1Kh1IBRj0tmFNnrV5Sr1qdARfkN8nuhUXRXaPPT
618pUH0KfT+wbxTlJtC39VWkQMM+hx2HKKNobPim2MvCFOjpaS2QqPuLjkp5
zYump8DyzY/CZ+3+ojiLV6pX36aAiIvclv2nEUT/mM3dyTIF8K6LIgNhIygx
qkZv//UU0Fe2uGzwfAQ9urAvrcIkBZ4wBySC/Qg6kTM6KGOQAu2fugx2nxxB
lCeujhoXUsCv/hE1peoPAiyTxl0yBYZFyq7Pzw6j+vc/Hn+jSYGHLzsCrIeG
UbDVbNAqKQVYF6eyOluHkWOM3C2NTSoo/uRkLskfRm/mY+9sLlMh1MAmN9R3
GJUfkzv6bpIKZ32Y2E5wDyM94ayh1N9UiO3SLXY9M4QMghsDTmRSQWpQarVJ
Zgg5SMqEnEynQvEoy7FjR4aQoegL+dOpVBheqn03zDyEdmy9NL/0nQoirBqO
up2D6HlWXdSneCqknj/LL/5gEOWG0NybC6eCsqaAoZ/NINJ0vVopFkaFJl1K
0IDJIDLdVeh36w0VFs3wlYizg+jT8+7DEy+pIO+uUL+NdRC5V7W47vcn/j9Z
5lFv0gCSKsT1OD2ocDmTLVM+ZgCZ9Yqf93Un+pM/OxYWMoBY6DXNl1ypsL2S
aqDpNoC0KEaMA85U0BwUO5qrMoBiaKSKe+5SoYXzcHdIfz9qYcz7ZnuDCn8e
71FQ4exH0q90D2doU2GnR/JUyM5+NCVnusdaiwoSLmofe9f7UL24tPyBi1Rw
tvfY6dbXhxSVTu59o06FbVeH2pIS+hAr28XI/85T4ZBMxn3W032o+tUpXuPT
VFA9qiVserQP8VXHO2IKVLAT+duZyNeHHF27c4TkqZDOy3P23LY+tLNEinnr
JBEvpqesLrW9SG/Kw6JOhgrmw3rJXdd7UcKdDYlVMSr49k2ai+j1InZft2IG
wgmdfhwPzveiszpfGHhFqTDbkO+xW7QXkT4zfNAWpgLFS+2t70gPEvtEY1N/
mAog+bf+ElMPmj7ky3HxIPE9IZ5TYzPdaPCz0F+/A1So4bkU49PSjfrct0uU
8lDh2s4c+6wP3ehkcN+myn4qPBzwY+CR6kathZla1lxUyA09cm5EvwtFdQ2r
crIT8b/6x4Ks0IXsfdkuubNRQZ83/gk3XxeiC1F27WUl+pcggGuMdaKXTbL7
UlioIIwfkE/x6kTVqZaY7S4ivk+7rlRadiKuuU8D3czE/F947zKg1onofnH7
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
T6RYOAgzarg0nPPJBWVaxSfTRD79tuSyy944D8q9PJU/EZ686Pa8gPEHwIh6
MD3hbM+CguTjONSZzxJFQTLIif9M1Q4vguCPo0eZiPwv29QSVlBRBMyW0gaD
RD16zH3cTWy9CCTXXjzOIyxYsVd5+/ViSNw/MnaLMNsN+0YkUgINtgfvlhH1
6vj7ffMSBaUgsubP6kecP3+UJdveT5fCXvuWSTPC/aPn83cKlIFFIAuNHOH2
kw4+w8/KgGvNtm+cOL9Km8rZoy+Vg7J3ZPtlwh8YnWWZhipgMh+NniDOu8i0
F1zueytBe9/E8h7CYUaxGyNqleAkzuI2T5ynAV+qS4q/V8Lu4fLBVMIuZwX0
H7pUgbrIeoUsYcexk3KjCVUgovyjay9h+9cXDxh2VYG4F7fPKnE+3+h1HZZW
qobpm/1vfxLWeVjnPMbwC5CT8WUDwpoCw0ZXFH9BZlbgXUXCqpVrimV3f4H6
OT0QJKzIKUT/sfkXqBZ4bl8m6oVTSGFs9/YayG0zYegnLGOlU+spVwPVz8sb
qgmLpnuEG32oAVa62/gnwoJXQ9zL62tgZZfa1CvC/JSvpsdpa2En38Kc1796
SLtJiPVWLew4e/zlNcJsS38ZHr2rhW3+Ice0CDNHb01N/KqFYLFL2RhhivOe
TkuuOnjXTA0WJGxkltCQLVMHue8cV7gIp16ACkbtOrgWfMvvX326U7YJmdnW
AbeyttK/+tT84K3MdN86qL0xJvavPs3dsZm0Pa4OUjJoL/6r71jnX380/lEH
l+dsE8cJ23QLRVLb6qCzafHCv/q0sDz/Je18HRxZeST1rz7lTrv0zHBXPTB1
jN38V586RA17JInUQ1LxgZl/9WjlM3cn0vl6qCnc1vT/+tRht63e9Xo48zaM
4197N+P/rn95WA8WKaUF/YQbzssZrofXQ8ze0IZhwiKStRe10+qB6wad4b/+
eO+zPPepph7OZ/Ne/tffTroV+eW/9ZD2eaH233hkpgOlNOgaoEH2bQ0dMd6A
3/zCMbwN0F/MZ8BCeLA46+C8fAM07Uy5c4CwQrIGh6pBA+jQ2RwQJ/wmoo/x
vUMDDE/cv3Wa8Li3M810YANwStAY/JuPs/YMq8pfGyBH99yEOeH3hjHT4cUN
wEd3X8qF8LyS7J+xHuL5Qq1YMGEN8couWGsAs99v+z8T/rTXtCmEoxFor+01
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
       "]]},
     Annotation[#, "Charting`Private`Tag$82044#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.06236167886428115},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {0.06236167886428115, 2095.7807230428966`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8219412171117086`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8219412313358974`*^9, 3.821941231594825*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$82658#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.050155764576590135`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0.050155764576590135`, 2053.0239873130427`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8219412326925783`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.586780", "^", "2"}]], "Input",
 CellChangeTimes->{{3.8219648892507925`*^9, 3.8219649092047358`*^9}, 
   3.8219652336710653`*^9, {3.821965846965816*^9, 3.8219658537990522`*^9}}],

Cell[BoxData["2.5178707684000003`"], "Output",
 CellChangeTimes->{3.821964909710767*^9, 3.821965235281515*^9, 
  3.8219658554744787`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Coth", "[", "w", "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"w", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", "25"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"w", "^", "2"}], "-", "2.5178707684000003`", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "/", 
              RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
            RowBox[{"DawsonF", "[", 
             RowBox[{"w", "/", "5"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{"w", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"w", "^", "2"}]}], "/", "25"}], "]"}]}], ")"}], "^", 
         "2"}]}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"w", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], "/",
   "Pi"}]], "Input",
 CellChangeTimes->{{3.8219649719156666`*^9, 3.821965240666183*^9}, {
   3.8219653504866333`*^9, 3.821965356661372*^9}, 3.8219658718861537`*^9}],

Cell[BoxData["0.6618698287649492`"], "Output",
 CellChangeTimes->{{3.8219650630401945`*^9, 3.821965155495999*^9}, {
   3.8219651950225906`*^9, 3.821965244170839*^9}, {3.821965351767905*^9, 
   3.8219653574777417`*^9}, 3.821965873482032*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"w", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822970798518711*^9, 3.822970820760745*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
umBQdaOH56OhMdDaiX1VLzB4G2vWNv/OGC7IovUunkq4G9seVUczgdUOdAg3
XglyjRJ4xtFzoK1QWWj8qArcssvvVfeag0Z7Z2LFtyqw1n+YesrIApQDZvzl
N6qA47yV/ocKCzjwTUiXw6YaBnxz/hzNuAACFNc2JPsFnGZvZbf6XYKZFNF/
ihU1cLf1v5jnRtbwjNtHY9voN7Cee3X224lrQPDZ0Uve1QzxDFsGZ6ALXLqa
01qi3gy2HdP6ic0uUHgKvnEbN8NBr8KYa/uvg+1ex/fvoprBacePpo9N1+Hz
1/IHrP+aISOrdIh48AaEi5JPZDS2wIP1kY8af9yAtbLw9XB4G6jNs7SIlXoC
O7dxqO1cJ7x9kCvdRPGDCwcvYZqcXdBw+PeZ03F+kKND3uSS6gKxrJC7qMIP
zvj5BhVd7IJ3pqpC94T8IXEszY/1SxccSLvSUfTVHw5UzrtnPvkBEtG3MrKk
A+GET7ztlP5PeJmCfIJ7giEx9unzims/4TzXY+zvlhCYyMsajAv+CcddZV2N
lUMgZvij9eF3P2H8hj53RUQItBuPXIrZ2wOimtNxijtvAVlO45ziUg949Qgv
Sny8BeGDnboe6X3gk7ntXttKKPSXnr7uW94HbJrrT79zhYF2PJYY3NEH99Sy
WN/uDoM/J3Imb7P3w39bOQ+fJoWBdW7Q/XTnflDWshF/G8Xs7yPV0642AG9J
d2IkecNhdct/paK2g3Bq1rQ9l3m/zPT425DqOggvdZ6v6UtFgNlA/pBEwCAM
nHp4vEUtAt6USHJLJwzCT0GN9hemEWDnzH1FvWYQ+vfoTJ+8HwHtzQOsRrK/
wGbjKjmQNRLePIkyDl74BToBn4XW+iKhTiBqfDtuCKb+ct0anI6EsTuRwc+3
DYHd5Cue3NVI2B0YkVctPQRinY8MZgSjgHY5jGPrlSG43La2tvtUFFzdE4w9
qhsC67ItSwcKoiDgYZCFTPcQ+FWLl578GAWJ24LmysaG4KJMRZhBbRTU0wN2
9+OH4esDj/nl/ig41O/nK3VoGJqVTBqWuKnA+8xb+W3GMPR+VfL2uEYFOSHv
Wp3CYZCfqF8pv06Fk/e9rNvRMNwxz+6YvEmFwBDPmOWfw0Bd6g6eukOFiSvu
E0f5RqBJ9MdgVCEVMPHrad+DRmC03Lzu4BqVuU+7aF2+MwK39T+7PiTQYInX
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
       "]]},
     Annotation[#, "Charting`Private`Tag$2261#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 9.255594712205576*^-9},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {9.255594712205576*^-9, 0.9924707514833697}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8229708090580893`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2.25`", "*", "w", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"2.25`", "*", "w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"2.25`", "w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822970838451748*^9, 3.8229708868492355`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
C/aNwgnN3O97biRIPRS4UD05Cn2seOJrPxJ82fXnHMSPQeTotlxNLAkuDPr6
8F0Yg3L/iQPKhSQ48txT/GX+GKQe/aDL1UcC4ROeTRcrxwAshb9MDZLg8gOP
O93oGHTeqBl4OE6CgGD3hPVfY/BxVpc6bJEE02au00pM41B8S/PMKJEMxF6X
4A6ucbgZuH6smJaiJ7VdjluIjMO7XumTtw6RQQdxVotQH4dsp9yqi8cpevu0
Y3Zr4DhoSWaxkM+Qof+Jw3mT+HG4P/z2tZsQRW8dcWj/82QcTJxNcFxiZBDB
2+8ceT0O1x7UTx6XIYO6r11ybu04fPlKVWxF0XeWf+8LSXeMA96m1TaZov+e
jNga6M+Ow+yvk6KPVcjwytB2cXp9HOjdg01t1MjQ3nUvyu/ABHzHMQyxqZOB
6rPN66zTExB7z0KMX4sMp+Rtrp4Tm4AJY1nBwOtkkK+0HsUUJsCsSKvjrTYZ
nHOtjozrTUC0jIpfhw4ZEn2fZibenQAOQfzHB3oU/a/dLiDnMgHcZ0xGZQwo
950lvhkLmACuvt3dWop+Xtg7r5IYOwGlbbW80sZkYOxx+HohdQIO1FfeS6Do
b9EXOYZjuROgw39wsJWiz7Uieib+K5+AbO1zGYsU/e5gTO924cMERFJXvdqi
6PsESWRvtHkCAlosFecp+r+UzjPuvx8TQKVy+kq9BUWfDhcdvzA6AaZZtMth
lmSYqxrMHV2YAKYdM02Bu2Q4+IDl3H/bEyDx9bH16/9/H7HRqDlPOwmX5cDk
rBVF/ysFqo8enQR8zGnVUAq2O1r5PYF7EgqjecQ/U3Dc3KTZebFJuLKqJzdL
wcWfOeZH5Cfh8cSaxyYFtz7V9klQn4REMcvNRQqecYmkOq8zCaNdXL+/UjCt
RvXDEfNJELHtlU2mYIFTi5wJjpPwMcHsJELBGmu8RbJ+k2B8pYjUTfHP9quB
zEjUJLyIaZ/XpuCY/P9q45MnwcCPnuoNJT6y/+drstmTwMGAUuEpuPnWet9w
6SSY6NhRy1DyMSUoYhP/fhKaiRWnb1LyRY23WJZpnISontv2upR8nulNCRr+
Ngm61PJ7KpR820Ttp8rMT4Jz7K5JN6VeUabSvMMbk6DehRj6GZGhUPp+edyB
KajRSNqjpdR3YvRb0xDXFPw36FI4rEvhVzWNTpzwFOCYdX4J/v97WZLisPSF
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
       "]]},
     Annotation[#, "Charting`Private`Tag$2931#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 4.6856442131855165`*^-8},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2.5, 2.5}, {4.6856442131855165`*^-8, 0.9972219002915327}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8229708882955027`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"4", "*", "w", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"w", "^", "2"}], "-", "4", "-", 
         RowBox[{"4", "*", "w", " ", 
          RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"4", "*", "w", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], ")"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8229708659295225`*^9, 3.822970865954508*^9}, {
  3.822970906880165*^9, 3.822970942733313*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUWHc8l98X/yx7FErRQEUoIRqUz3mSKJWkQfbHjMzsEUI2ERmRkb3K1+aD
5wkhJCorIzs72SP8Pr+/ntf7dc89933OPfc8930FDKzVjAk4HK6PhMP9/2v4
IfzP7i4D9l9als6vrQjyvi1eoUv/GLCQXH1NHu9X5HrFdG3HdQbs76nUiVus
kWShwYrPswsM2Ezztd3DYlHkbhEFnPAcAzZbyia0WRdFDnBoO284xYBpxr0W
UNN7TZ5mHU3tHWbAEPIospsaTY7XsPy5b5ABKx3QeP72dgz5VtraXtWfDNhD
kdKR6/9iyPmXWD0avjFg9lS3myZmcWQb83MaRXUM2JlQ3yFd/wSyQCkaNo8y
YN/LLkjhdd+Sv+GVP4lUMWCHznjv57yUSJaO0z2bXMyAxd9m3ZtBSiaPj00+
7itgwD6Nv+2xfpZMjpawS+LOZ8C4Zhn0+zaSyWuN/qyh6QxYJntGNctOCjmL
i/NqUwoDpn7y2iqr3zuyhl6CCzGRAbuqMVcrzJlKrlwtmHCJZsAmM9snpC6k
kT0Ef2Im/gzYxaVxik15Blnc1mgtxYcB62+JNTpgnEkeqpoXG/BkwOJYH8vv
cGeR5e8T4+85M2AROcnL54KzyUtJoR1h9gxY1f53Xr9u55DTZg4wNtswYGmP
99u4cueS6XxOOyBmDJiOSpSLYmUeubStNNfNmAF7AUJv+1/nk014r4yUUhgw
4u179884vyc3/ffgjpgmA8ajwNC8IFxADhnyEOG9yYCZ1vb47YgXkuVOM+k/
UGLAOmPZemapheR5p8jo8KsMWBKBUiJ+q4isuieLyHCZAXv5IJ/7qmsxGa91
Vlb+IgN20DglX/dgCbkwo8rmmTQDNnHMlc2YWkLmIncMLJ2m+Vceau7aW0au
D9TaJy7CgOGOXyTF1pWR7TvHlc0FGbActZSeP27l5C6LzbKhIwxYVONWLd9O
BflN/PFXX9gZsG3HHxp0KtXkHIm4lDJmBuzCDYFLwYo15MpP7P+l0DNgjM4/
u2KVUPLPPxtfHXboMW2G9hsKhRh52tf6l94mPXY6SOZ5APKRvMkzPn9jlR6b
lqcQy75/JPMqtLMdnafHzN+qGwYz1ZFFe68dYZymx/Lun9yKyKsjy1pRTy+O
02PxJSLOCg/qyZqxGTcbBugxhaeaWz7ln8jxs+6BVl/osR+/z79saG0i5z1f
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
DAk2XI3vKCTMkXhq8oeFOSRZ/VYZ16Hlu9zQ9/iUBbyzoHad1CRhr5ujn62U
WkOa+Utd84ck7GdLRxbjU1vIfGw4kadGwq7lX4A3iB3kmFyw+qNCwq7UfGmw
uusAeUYsq5I3SdhTpd3Xp/5zgg8Gv57ZK5GwC6WmcWHWrlCoX0RXdpWE2Qv8
6dNLfgYluv6hG0DCBi7uUdV97wXl2lr7L18mYeF5wmO2I95QqSn+1uMiCdMb
Wtmj//wFVGsQBT9KkzAJtymNxowAwB525xElSRh/8H+m8U4hUHs/V1pRjITJ
cmt+54gMh09qnlUBIiSs9rP6Kot7JDSp3lNoESRh4+FHIw8Lx4BoLGd6lQBt
vrgeMfB+AoT86qB7f4SE6X5kH7RJTYF5oQiTJB4Sxqg+3/rIOgNUrVQbw/eT
sBuNfdWnbuRDYckeYW8OEjb7n2Xtw+oi2LfdFmDHRsKKfHueD5RQwVEhbMqI
iZbfK1mXLrrUQ0/wbeWHdLR6j/Jz0T3SDrLfWXOV8CTss9Xgcf4jfZDA28oi
s03EqFsxanoCv2GHEmwhukHEckif2uaa/oB+tvKXQytErH1PtZ9h2TTULjCd
YftLxEY9bDSuJA3BiYufw3ZmiVh9Zv6lWvkf4OcZ8OfPJBEbrlNbrb/eDJMN
SqrDY0SMvegk14h0LSizM/z3bYiIWX5K7GxNroS8Bw0c9f1EDC4Kx3neKwb2
ty+elvQQMVLpxx+6bAVgM6bwPeMHEbvKsm/0EnsOfDtFko5tJ2Lb3AlB+knp
IG1XFxXYSsTUYm4q8yi9g+hK7xXXJiK2bntEhN4gCdbx8g8t6olYou/boYxb
8aB5A1+mgxExnQ3v5/6kWKgKxw7cqSJi18z2RfU8fA1HezydkXIixv/tXnw8
XyR48UGvZDER6+4/cR5ViIARkx2Z4wVE7OOdNxN0Ji9B4X31m315NHttlUeD
ZSGQseK+RZdFxLTqOqb/Pg4CRrnL2mupRAxnzn5B+HEAmPtuVU0mETF5bXVH
3iw/aG2pPPIznoh9WZKjFz76As5wuXq0xBCxAGvv1NaPPhCuKfOrKpKWn7vV
UidCvGExZR3evyRikrNFOWFOz+H+VFlyUjARC41pGjf39IJSCSd8hD8RG8HU
NerBEw46nzfw9iFit1Z9Wj1zn4ErulJr50kbH57/knbZHfrpS44buxGxAi13
hvR5VyCr2Ps+dCJiV2Kkc5OrXSD5tdS4kh0RUyLz/lTKcAbCwOI1GWsiFvj1
7YnadCcwOlGYIfqEiOluZX5+U+EIwkUSj9kMidi7qyXXRLgdIGjzT9OOLq0+
Dvq1G2vZw+yVDyILmkRsnPTIdTPfDlQCrYKGHxKx5vHDmxmsdlDQLjbzTY2I
uXH2mas6PgXOg3M361WI2Obtu8f/TdmCvV5eXokyESuiF9NtMbGFi/OiVrHy
ROwVYZf81dkG3pybbgskE7GlycPWRaw28M89W9xNlohNM3W+FFWxBoxF+K/O
WSLW8C2IufynJRy79/vunTNE7ORwYkGjhCX4vskoRESJ2NN+9VWNcAu4LiJo
f/wYETvbsROgbfYEtBnmT2geJWLMVgxvHafNwWa8tDOcl4gxnSxi6LA1h5iU
6xd2OImYgUF3+qcIM8jx5JiU3kPEZu70Nf4nYgY1Oj9jn7AQMY9zNzCvhscw
wWOx2UMkYqlDwtXv2R7D5pp07h4cjU/+vbNhZabA3rWtpfiPgF04IOapamwK
5169rC5aJmD7jq4r57eYwHUbDavpBQJ2n4nVY9LHBLRVBPgE5ggYw3UpHSUw
AV/mIq+wcQI26vg+8VuNMcROukl+GiZgFJPcmFJvY8hrUBjZGiBgmqaH6cVu
GMN3766rZl0EbAuXoaoxYAQT+knLSd8IGKfT6N3OHCPYJD9O72ojYBKcPV/s
XY3g2NYGvUIjAWPv3sNczWcE53try1zrCNh/k1H8siuGoFwW/Pg/lICliVaI
ebcawlO7I81HywlY68ytBWEvQ/g4g4RuZBEw7pH4KdymAfz4zESWSCdgLudW
Fbf7DGAy89u8SQoBe1hoznYdNYC9RkaqP+II2Hpm+vm4QAM4IS+GZ4kmYOia
i0qgjQFc5F/978orAubu3ygUr2EA+v3+XB+CCNgPRTfL7VMGYF+pWj/uR8Dg
0XTJpQMGEBDL43DYh4CdZRo0ciIawIf7uV2BbgSsUP+pauMgBWrP2vtjTrT8
fNyT0/qFAl175S6u2RGwkxNBcf9VU2CntS3OyIKA9eZ2nMAlU4AzN0Y5/jEB
I/eYOOi8ooBQoP5WhxEBUyi7Xv38BQVkTUXyGCkEzKfC3NfUhQK3ry1qgw4B
exVcEsFkRQH941Q2x0cETO9I428DQwrY431r8h4QMMOb4x+tHlEgoXo/P68K
AZPkfbsRrESBgvjBdlVlAtbswtkeBRSod8l87q9IwLhE9A7ARQr0qNucrZEn
YIRHt3f8JCkwc05mdJlMwFJc7QYen6Lx5yJEnbpEwGzKpM8NC9L4LzYrGFwg
YP/MBnNn+Wn82yNXYqUI2N7SIZaAwzT+77UzvorT/PnyyxccpEB+516JklME
rE/mc7HAfgrwb9dXvDlJwMRuVvtIclIg8oTLVa/jNHvGD1f691CA/pbYF2M+
Avap0zXrKDsFXOyGH948RKuHJMWYFVYKzL55PSRxgIB9aK3aq0vDerU3zLm5
CJjsnL7MAxr+NrW9tMVOwN65/HvQQ8PXOAqfDTMTMHXOY81jbBQov2jC0EhP
wH79+MTtTFvvlD5vRB6BgH20nup5yUGBRP823lc7eOx3hWaTyD4KcHzwTnPa
xGNIhk/p1QMU8O06f0ZnFY9JeSuH9vFSYG17ukx+EY/hvPAqf45SwFww6Yrw
PB67kWS099lxCgzcutfCNo3HrA+k432EKaBqz/BgaRyPxdk/N9wVo0BdPHWw
ZxiPsWeaBS9IUeB8nfXjmgE8dlzt/fB9WQpkTx9fTO3FY/b/VQ6JXqHAYc4e
t8BOPDbrrLHP9joFCBTk5f0veEx4hS/+ugYFHAKWD8p+xmP/NcQ+7NanwOSH
rHd8n/DYFWF67g4zCrTt7C2drsJjlZQSDvwzCrxJGO73yqPZW60sncuiAFv9
axOTLDwW0meuv1tEAa+ZGws30/CYbU/O5imMAiayhcQDCXjMfdM0I7eXAmd7
vEXzg/HY+WdRXpIcBpC+e774lT/N/vjrEhy/ARw8OSPn7IPH6HUOT4mJG8CO
w727V93wmGKzn3qyigE0c51w7jXHYwdb1xV7IwxA7lIPHjXBY/wlIqdDUg2g
wCAkOM0Aj31nohuNKzGA6P+WE6018VjXmkl+/U8DMLjz6ROdMh5zqf54966I
IWwGmXCdFcFjT/Pqrgl2G8J7X+tPooK0+BbozxHmDcHAw9npuAAey6XjrpWm
M4Jm26C+fTx4bKS36fsbaSN4o/E+dY0Rj7FiR20sYoxARmhVqnoSh9lMiF2R
szSGWb7d8ZIxHIa9PBzlEWgMyTyMse+HcFhHwbrLgQxjYGTj/ZfUg8O6X+uN
qA4ZQ8+SXL13Ew77Gu+yMKlhAs4fX9y/noXDrLMmlWY1TeE0NYz+ShoOM9bY
H9XgbgpDxTHlMsk4rG73Cs92oilcz8o+fCoWh91Jkr3mNWYKB15+GWMLwGEK
t+93TNk9hlLt/Q7fTXHY6wZFs/Q0M1hZS3utexKHuU7Jn9lQtQDNgLKYhOM4
zLKwQ3SfuwVgB5vjfvLhsBZ1Yd+QTAsIkfnz9uFBHMafcut0zK4FHHOTyVBh
wmGdJpezBYotIflfvOWzrl109WlJkIu4NVgc+Wi70baLqhz5W5Cmbw0XyBMO
Do27KGNJ6Klzr6yhzVPCw7J8F8XpUSFg1Rr+ET6F6bzZRU++niESDWxAnWn+
g5zuLnqB4cxZKxlbOCbKVVzxcBc9ym5vfOeBLcwrXyw/d2cXPWsTVWNqawu+
Id6YGLKLninFaGLfFgr3HOg4cmwXPbZRlRx+9CmwcyOL2+M7qFZrPo7EaQf1
x15J11juoF2JU5GmQg6g0hU6HWO8g3JPH/nWeMsBegIDk211dtCE0Nq9DnYO
MLvgxSp4ewe1VUpXL//oAFyo9Vjw6R1URGI2dZ7iCAZat6MezWyjh0/zFHnR
9AMuinF5+fE2epN4SjEw3BWClEg5bfrb6NxvUV2bj66wb2tXL0tjG1W6cuu/
okVXEDZYa9G6vo0+GcXvvfvQDe5ITKTWntxGM+rz1pcF3CGxte5e+MQ/FLXK
43/Q8gwu0XkWnTL6h1pEzN/cV+IFwhOhTOHa/1CtiMlGrMMLuBsT9Jbv/0Mz
Hol2Jsx7wUJAJUv1tX9owWhS4Jjwc8hgXTVUOfkPFT7HmFue9Bw491nus53e
Qq9mt2dnRHvD5DEth1KbLfTS8e/b0rm+0EU0b+E120ITOSr7FNp8oW7MWcCT
soW2uzpkBP/1hcSM6C9KalsoVnR4sebiC7gn+k2wV2oLXfu9+rf28wuokbzR
tbW6iT5JszzpsOoHUciFC1ee0TCzuO1J90AgNvwZaHHYRLebmZWK0gPh6c0s
34dWm+hsZ+Qht6+BcPchz7cnepvoBptPCno8CNgttiyir2yiWKTz1WNfgyAg
Bn03Q7eJJq4HVXlIhoD7vBJ7dNgGWm0y3sMt9BJm7HAl/P4baExo3HKo+kvQ
3CjXyvXcQGuUTGaUAl+CDEk0G7PZQGXEkuVezL2EVR5WhRm1DbSq8n7ca+1w
sLnW7oIc2EBf4JkGss5EgGGCxvh00jrqXYdQpedeQXjxb7nvMevoeby+YTNr
JNS0OkZTX66jaQLXOIJPRwLvdpRSiOc6mqI2uhhqEQntOh3ZYnrr6BUf678J
85FA5lO2sjm6jkbGq1xb34wCnneX1lYS1tCrB9zYtM7FgGJl853BqDW0SP1p
yAvNGLD/9iirIWQNLTHff2XQMwbaCc6PYtzXUGS5P5G3JQb8DIupF7XXULbN
KYOPhrGwfELMy+3QGupM/yOr+20cfM08yoR/s4oS2c8oxp1LAP05DG//ahWt
8WfHfdZJgMWzhpsTQavoZ4POd8f8EmBfTeZMq9sqWrY/B73XnQAaPyTaYnVW
UazRluW921sYwV2NlBBYRb0X9loptSbC6iPTI/pZKyhy9QbHy4ZkOMpaIImW
LqPTwjwKig2pYDUm3P/y/TL69Vo4WjGcCjVVKX76Gcvow98f91zbTgUdy8g+
fPQyujCUvPFOOg0S2hxfKDgso9I+cZauaWnAEyHX+1lqGT1U9sk8KCAd9nG3
eP0oWEIlcswq31MygZl/4utUziKq5XmxPkMtFyzuv4jNylpAqcvOPHND/4F+
3a+Wo6/mUCG5f1cyxkpASW7deOD5HIoMZQc5rpTAmbK9uARbGj4omy1HXwr/
cq5I89ydQ0d+VwZ9OFkKsa9SE7j2zqEfmPI/HjIvhXaKqSVj2Czaps99aGy2
FK7g/rAvBs6gKomFB6Mny0DYlSG7wGUGFRPGHrevlcHeZb6r1mYz6BRzC/cm
fTkM/lZ1mr0+g1a7swbzCpaD69fCXxMMM+jNrtLyAP1yKEx0LOh7MY2yVmvZ
DH0vh2NyO3c/PZ9C7ToxzXc5FdDOIXc67ukU2jZ+esC6tAI8JtzoLQ2n0KGc
cseTtRXw8+VG5b5rU+hDp0zS/d4KiBxZPm7EOIU+ePuWJ4G+EkgBMyuEl5Mo
IxPLoWLtSijUFm3v8pxEH3Fcu8ZgWgn6kmY5OTaTqINyeQtiWwlVPyd01dQm
UZWNmQ3jF5XgIDbSmLJ/EhX6ZSf2NK8SJr71xCEJv1ElgdNC2iuVEJV5wH5f
6G90O2Du/vp2Jci7P1SZfPYbZZ4/S+9ET4VEwR+EcL3f6NPgslXeA1RQd/76
5Ncx2nh018XV81Sgv82uWMT1G22VsUtPIlOhWOA2vz/pN1rcX5ckokiFvS3N
P85MTKBNX9nlB+9ToelIg5xH9gTqrruqWWdDBcdF0kG1NxPotKPMPXMnKpxo
vLooGDyBymCGw3+eUcHL5mPGF4sJtPQAZ93rICpcrKvac0RiAuUr+lt87R0V
JmK2phb4J9C65XyHn5lUiLKQra/nmED7LcK+38ynwsL+cmeLpXGUhzfUvK6M
CtmPi4appeNo/cK4wG4zFX4YJPHdzBhHNykVhl+/UgGnE6zz8/U4qngZX2/3
gwoP7xr2rtuPo2cnppMvDFDh+c07BwKMxtHnE0oeD4epkHft0oMD98fRwKHI
S9fHqUCQ5eo4JzWOGtzPOpg6SwUx6V32T8fG0YQW3jcsC1TQODNz6z7nOPoq
+0fNtSUq+Ah3B43ix1EJSYaLd1ep8P5YXdPTv2Po5TzWMrENKvQe/kBPGB5D
8XXmcz+3qEA6EK8Q0T6Gsg/8CNHYoYI4h783PzaG9gadUcrAVYEmix324cMY
rd+GttURquAFnd4OOWkMDTEndxaQqqBgV/lyW9gYeqG2ls2Svgr6Ns676niM
oS5sPaLrDFVAv3ysfNZyDCXyOf+6y1QFkvPsq246Y6idRP+gC3MVaE9uSrHc
HkPFwjz7rVmqwH9kwvbN5TFU5PaxECnWKijs//ZB5PQY+oq5NaWehge6aubK
D42hz0raOo6xVQFjR86p6yxjaLfB5/bbNCzVEm3WvTmK2p3KvXeNhnU/eWea
TI+ikftK9zDRcCBqNb7SO4oWE7wrY2n+iis0j7/4PIoeLdtlWqat/6tIkbKv
YhTt6nYr5qVh5vdnk1KzRtEowjsbVhrfc1lHB87GjqJK054rTYxVoP+O+VCt
/yha7hmweYcWb3DCqsZdp1H0kGDMhRS6KiiNHokeMhlFm2YXjaqIVTAc3vbD
+uEoenj07qUUfBWwBldy7l6j8THst7uzS4ULLzJUw86NopyuEk0N/6hg4Pkq
7IjgKBp323iRfpMKoS4erXn7RlH1OPb8PWtUKLczZ75MGkVlxJGiIdr+sz+W
99McHUHPaApE/KTVi4zBmfqpbyNo+vW4YcIUFYy0eQkutSNoWaik9eIYFSpV
F5/FpIygCq98ZIT6qTCuPEgVihhB49DYJbNu2nm71rxR4jWCCv4MGbf7RgUT
mXcOP/RG0EuSKU97G6kQIRVWZHiHZp9yKly6lgpVYq5/F8kjqMkL2+n7VVTg
PKZmyXF0BI1vD6WMfaCC3GFybjLbCOp1RI/+XjYVHnOLTolvD6NMYtNrL2jn
r4aZYKzSP4yO8Zr2XoiigvnSf9rBb4bRpiFRi0/2VIg7//eSadAwKr7Bgjhb
0M6/i8Shq67D6OnV/ME/hlQQxH3o3Xw0jGbbaleeVqPCEGveQ3OeYbRLwOFr
9ylaflRnzikyDaNzS/nduQI0PpGi+49tDKGhQpfJV2n96A1P9vfeniH01yM2
byqeCg+EMlRvxA6h7Zb+SV++V4Kv2bi4YMAQWqBQpFLeSOufeSf24J2HUMbj
BWeMqZWwVyr1S7n6ELpszbdLelcJLZCsLHxgCD35rfT1I4tKeF4oHch++hfK
tWV3E1mpgMGLRUoNLL/QncKwB1fGK+AyKknvMTOIjjRz8xI7K2C15YzPXM4g
+us6ltZUVAEW48LPWkUG0czQL52aVhWgcfCIbdDJAbRSXDAkrrscShPjxeUZ
BtCrl1YE0+rKgUuQd35joh8VrN/nYf2hHNokDzwxy+hHxcuWMq77lcPVmxzG
1wX70TsN5iv0kuVwxoPuEf3xPvQGS++PZtcy4K1sj5kk9aEnxFy9A4zKgG41
vqt54id6r2MK3atSBv2WZ++/zPmJxgi2+T3nL4MgHb07B8/+RAOlGOcna0vh
9+WKa6JXetHxEw9ub26XQPKWxVkVvW6U8WOvxJhKMYRcuGgrcaUb/U8NF2pw
thic7IgFnMe70W3Jw+tF+4tBZSZOrHuiCzW+JfW6o68Itn82COtbdaGcGuKJ
RJMi0Kzk53v6rBNNkm/ZznxaCFwuP1ii47+jc54rV1/bFMD67gbHH9fv6EUN
+RPxtwpg0I/v4HXN7yjBRDTQS7gAsqLMT2we/I7qecPgT/QDkAtwcrrR39A1
6Zsx3968B7Pfp62EIjrQEtnbZt5KeeCRy5xiyfYVXeoWQMqCMuFGxYN8vtY2
VET512AEORP2NSZXdAS1oSScX4XNYgZkj5z/do6xDeULz1S/ppkBP3gMiTuE
L+g0R3bDK9F0EA2gGoetN6Opb7ssOdvfQbeRheiH0QZUT21GXcQ3AWoGVC+U
ZjSgY8ExVnW4BMh4eE6h2qwBfTZQjMN5xIP99R2dlj+f0IfskVV2rm9g7+nw
iN9b9ei72skPLW6xcGOpaJ1vXx3KfghttUiLAgmLWLqT3bWoog/RxEIsCg6O
u3OeeVOLOqfVo5plkTDRde30Zf5alGHR1YG77RV4V3braZz+iPoP2Z8PYYgA
B+JaqEBgDbogm7o2oh0MCitopvieGvSwqCDKFBEEnL8DPsq9rkZ/P9KeSGwM
hPfNvCuPUqpQ8q6D9/nLATARQdZ+VVGJCrz1WadTeAHFPgyOyVCJ9s6MkIND
fMHbof3l+08V6J2w3nMfu32A75FBXXNHOXrrbGi1rqM3aPD7iRKnS9FSHY79
1jmeIMR5R4HDphRNL+aJln7sAcvEg7p8qyVot6iV3Y9TzyDid3bEJUIJmric
UtNX7wrN77+s2/EWoQNWX9j9wRFik6M5vZML0aq7r6ySxBzA5JXe6XChQrTX
UQ63LWAPRMe/enln/0MDBnqtyo88BSdX0bDPr9+jcHzj+Fy9BajML3R9yMhH
nbQ1xxL2PgEhgzK+6LI8NAM//5LBzAw6byj8Z9Cbg85mTw9oICaQV828eX06
G71K4cYMUSPwleyQF9/KQlMEO5ie3jQEKR7dH1uHM9F/mZmX+oL0gTn0xJER
sQx0ZVCwL9ddl3b/njFuIqejemiN+MkdLYiYdFqL0k9Fw7g5BI/dVYfH2mTE
zfYdepp9lavn2ANA2kmBFO8UNPMUf7DXnnswaH38nPb1JDSB7YUwh70KhKoX
NAibv0VtEzzqRBaU4TLIaawEx6PcT/c++PlOCWaEmqc+5sehKRx87jdCFOAN
u7pb2NcYdM9DOb34vCtwY3WUVevva3RCp1NtlIEM6wM2iSe5otAwcS727hMy
kPlpW3xZ+hX6KOKI4s0CaXiYH/QRexiOGpz+ft0+RwKYRcUzeP+GoJ8LY94T
TorC443rn4ukA9E2UYGrMt3HoaHJYPaW8wv0aBI/S37LYTge675ngvoclTU3
WpPO4ALC19PGOztu6LFo1h8z7oxQbamfK+Fnj/6V0Dhz+N4m+e9B4dFPvOZo
2qrdWY2b4+T2vKO/7qs9RA2dTPG4EyiZRLnJH3CVDPfmmJZPJYWQs8+8c2Kt
NABqyUTm3HQnOc757cr3Thsw52ZXcyn9Sx7oNfuQouIMc7U4wrIDAY5dOm9m
3egJR/FP8zhD94CUyvOIo8k+4J45cn13z0Ho9DC1eqHtD1d9X4k8YxEApw+3
b84eDIYLEVSy95wQ8A5JCd/rDIOhM7nFn/PFQJcxlDBwPQLuBTocIGSchQ/8
ONu9JyNByfX5/tnR84CTsft1le41vGlRJtmGX4K7dyduO41GAyU5jpT/AIF3
Zo+qcj7GwgCV49053qug8AbiODwSoK44bWFH6Qa8LixkuKadCOhd69trBbfA
bpzz0uUjybR7T3iEjLAq1G+/yLbeSoH9+yPqTvDch9lAVD9w+h2Yh0vuPyH7
EPZzbxxI7U0FG50Hl5kcNcDkjIVfV1k6yHiNLh4i60BYZbrcQkYGhGSLEzmb
9aBM8dcyU3Qm5Gr3OP3/fZlRT81Qzj4bdNmrv/DTG0HOy4tImkQ+4BueKIzJ
mQOpPqmKQfo9+B4d4cNzWIDeOr3MkwsfoK+y7Q/LkiUEFUwf5EkqAPeElcba
vzZA5qngGEovhMkalT/BMg7wpGj2a8TJIvj7LklVW4d2vm/zh13NLgLjme1i
6QAnWHzuz5yZVwzLRiV56KILZEw/IFoVlULdh3Mrbjye8N038CPfuTKQnFUU
m5DxAhxftWdHaRlcaKqKVJ32As17J/5JV5bD9UqcVtN9b9hTtbi8hVVCTaLq
8at3XoBz6MuJwLYamLz+eGmrIxjST9alXVJFIXuvyErv+xD49nHVYK4DBaOq
+1y6YaHAvfXeOsscA+lb7KfPPHgJNuLcsyxWH2EyPk1E3ysCBGPHxr7Z14GA
lHY+neFrCDN73qXv3QgVwxqFO/1vIaAFXzJW0wjMFyptXlASwVvMO/LxViPg
+6tSoycSwemvt6qNfRNws3V1XltMAn0X32ZPk89g46OLy2VIAclA/5pE5RYg
KFnEHT2TCj+yQjP6Ob9CvImGKltEJrQxs7/Qv/MVJswO5id2Z0KTRZjhWPBX
aBphfSB+NAt0Y5X2OhLa4U4q5zvF3Cy4p339yzO3dvCNJfZwf8qGy2M3lEIt
OyAGddqNXckFtuVbl/Lufodvn3dNVo8WwN6fZw2dnn6HX6E+xleuFsA+7GCw
fOR3SGpx63tiWgC8IWM/e358B7eGF2laHwpA+IS7K53GD7BWzs8Ok/sP5O/n
VujqdsKFHJmcULVCcCxmusjxpBtI0y82Nh4Vg8ubP3r9wd0w9zfSrNq5GNy9
Ov0z87qhZijPWjmmGHxupXTLzXfDlcc+muj3Yggfu+hkbtsDHYOehxiVSyB3
3+PSOqdeyM+OcK88VQpD9g3Sjr59YNyiLKz3kXb/aaLjzUrrg0bLyHPnesqg
5/C13d76Pnh+QN3ky3wZtNfXfZaj64cNKUrO1UPlgO37qEvn1w/8pxucFGzL
IamYGhDlPwB2zuKuPhwV8IZxy7IhcwCeTQktWJ+ogGht2XvrjQNQg3bdOnKh
AsJIFUe0GQfhiJFgbqUWTf/fLy08HjgIe+WF5ndTKkB3uaC/MOgXsNPHaFUc
qwTN6wsfx3J+gbkb5+cSyUp4kCCeyd3yC5Sd1GPskEoQOtZ9sZpuCKo46jKl
dCrhaPMDooDiEEQPMx5uiqyEw/YrKzIPh6Bbk4/5W3Il8B59PalmMgSbDpZH
EvMrgfvpjy++fkPQ9RfEnjVUAjvvvdjJhiG4k1Hnq7lSCaz1i0H47iH4ISBx
0gVHBWarV894fw8BVyffriYLTe/XdhjcYhiGW2Kk2cf8VNgxUxUrUBqGgSut
FwuVqPCPa4Hvs/owPEmZ3plXpcJm9UvOEdNh+Dz18dbCIyqscnxd4woYBpE9
IHvlCRXmK27XOjUNw/qe8AyBYJoeYGq0d+sehjYWRxXmV1TQ1kBOek4Mw+1f
ImFYLBWaV8+G+JFGwPoy6/PodCrgFfPIQVwjkH8gI7g0lwoXXwv+DT02Askt
g/1p/1EhXergw9fICJTm/GKYo+mbfu8Ixrg7IyB27bqcEk3/cH5jpibojsCi
RLCNTeP/3xu2+dLcR2Ak5FqoRAcVylDHb5nBI3Dj5OWuxk4aX/YF39w3I+B4
mb7/zE8av/yRqcLyEdDSohuxGKFC5D+thNLGEaiKuXZNYYLG92anSmXXCOzW
mp+apek5fLwKvmZ8BHruExqN5mh8pxuLPi6PgN/ajvL7BSpYy1wx+UQchaWT
pdNNNH2YEVB58DPnKBwYGOgtXqUC18n8Z+0So5AjfsoJT9Obyo5CEj9gFAr0
gsIMdmj8PyWNdKuMgkV5U+NrXBWU7eN53aczCjg1bY14QhXMG75S+mUxCjWy
7I52pCoQLGLZHHEbhRsq6w+P0tP0PeFF3kTQKEhw+Ugm0PRx5N0d3em4UUCS
DC/P0fRzc7ITx3zWKKh6x73noOlr/MJC3d+yUXhZZoEy0fT3RTB3XGkYBfm3
TzI6adg6bFR4o3MU1hYfxzvQ9HvGgHbfv7FRmB5w6Zr6//vA6a5Q3PIo/Fpa
enmWpvf3ud9BSMQx4L/1BKdKw8otTYsMnGNQEF2gL0/Dz3nl01kExiBD5uvU
/98Hys2o6nskxiDRnqUzg+ZvvlyamQvGQCZoSIuHhgUZ31dxq4yB45+dMgqN
j7b6SWtenTGA58rHvWj8IzOSBY5ajIEz2tNtz0SLb4Xnh4AbbZz9zx6EFi/+
WqSfYNAYUP/h6Edo+bkYxSojEjcGORHvlzXpaPGNvpg5nTUGWW9ruXOJtPjO
7r6VKBsDZi7JzG94WnzPnVWlG8bgjuH+4Y5dKuzr+Eu42DkGTCMFu1nbVLjJ
/6Tk0tgYXBczI2tsUcHbeswUlsbAJL6h59c6Ff6wdbcqcoyDVfD5PS60ehDS
UfVU5h+Hu64bx4Jp9aKd91lSRXwcCkzQ5460empWrop+cHsc/qpN7/1Jq78M
/xR9o8BxWHskvKevmwr6/1l+yIsbh+ThDgfD71Tg7ZPZWc4eh97B2tdYGxXC
znyLf9E8Dtz7Ui5s1lPBsZPQncEyAQkfNbztPlBBYrdN8M+hCVAfSZbMyabC
tHC8/YXTE5Dqy89YnkoFXXcpzqZbE7DyMspAM4YKiseNbk+FTsCsZOf9Wncq
4G5LJEgmToD+Ct+nSgcqVDr+m3Z5PwHOqo6tIVZUONMcFcD8dQICnOh7avSo
wG37qe7U3t/w+z2PqSFChYkaIVmrV79h8eRJncXNSkieXAwoffcbMkIm8rP+
0vonJ9q9U/gbttxNreQmK6HNWN3h5fffgIZu2xI7K6GUNaCgYN8kcDGTx5ho
/dBPc0poKXoStKUj91xVrwTB1Vwu5/gpyM1M07CLroCDn+4ey82Zgs+PjO1N
giqAOWpNYrBiCh4zyz5R8KiABcmrKgo9UzDY+PLbR+MKqLL8GbB3/zSgIlG9
TVIVcH+ccScrbBryEx3qZVrLwfuH8WTv8xlguz6iIrZQBoOFfNWXHs+BPUNf
68SeUngQMxQwE74AtiqKTer7CiExPaT6VvQiZPJcdJZPzwV74Vvvut8uwn9l
Da1bfrlwI5fF3yB9EcxYsirqHufCckGQqnPxItxSf93veToXblYFjKZ+W4Qv
nziK84pzYP2bL9MW+xIc8sofWWzMhru4Zw+y/ZdA7Wjjy4XNTCBpWc7RuSzD
xsht9siYNDh08yG/1PNl8LAbXA12S4Ozl+CefuAyzMoVaybopYH+IY6Kyrhl
WHhZ3UYUToPqvmJf68pl4AySn5uvSAVH7X+HereWIWxv+joy8g6mdIKV8zxW
4OxZTVeeaymAU7F/1uu3AjiddMMDp1PgIFmngP7lChjeH18Q40oBxaPi3JSk
FXhub0WfPpwM7wa/De/HVmDRisuJ6pkM2nq8Lp74VdA5+TCI+3kStOlnZ6r5
rsIdulQby+wE8D7uKbsSvApW0zqrbl4JcG7i/peYyFXY4RjUKlFPgIQnuKX+
d6u0+0ZVZhZ9AjxxVCebflyF2TRvzXCTeGAMoet021kFxufpbVpn3oB8GYWQ
7rwGN05XGL4ciIFVlwuvlbzWoI/NbmusIgayL7MJT/uvQdAJszHD6BjYW1t+
WzxmDYQV9hkP3ImBX6174ipK1iAey5Goro8G95Fq8bbFNUjiv5/MV/oaSth4
ddYs1qHjKT5uuJSm708pJtnZr8OpkytbP2Ij4aDy0+E/butgryvxZs41Etz9
mo0ng9Yhx1HqTBhEgsKuq1Vv1jqcFR6UCmp+Bd8W+jypY+ugsHHnwqPfETD/
/e07T+0NMBO1Q7IuhQP/4uexLcMNmJYcLtp3LBzU9q4KOT/ZgD9xmXdSGcOh
5JZKro3rBrzNIIjdznsJ7p92iiixGzBw/++C73gYMJfpfbr6YwPeaVjQ2xiF
gtAbgUmGW5uQ95frbfGrIIgTdHIWur8JRHOSGqtRELD+18p4TXuT1i/f3so7
FwRLjU4i3habEBr55m9dbyBgK1/M/4VswpDeLzZlwUDQuus6t/BlE14sWy3Y
fvaHcMbvi713tuD8aOddSYUXQIwS9llX34LkEuNs0tEX4MjnwXVAfwu4GPaK
HFj3BZ3zItL3bbYAPXrp2XqeL4gaeTq0hW8Bf6aFTxqPL3xCT63XdmxB6OA8
7f/pDZuOvtu59/7B79gJcc8lL2DubJgDrX+Qcur7g/IuL+CVYhr8bvAP/Art
S/krvUDmT2jNlu0/sJBjvubx3AucTWM8b4b/g/mqs+YmnF6wqp6Dn2n9Bz5B
QW/sXDxg8WI7najiNujRdf7rMnQDQgznavXtbdBpd5pGzrkB58r9ibsPtoGk
n/92i94NJP/rbXAx2oZpC4VCSq4r2IiM+n/23obDJn7S42suMM+zymSGbsOv
qM1y6yRnmNk8xJ51cQdkWTZWOwUd4XKD/61BZAf0lzKeumw7QFjEUtC+GzuQ
WrXnlGWnA0gItzA8f7QDXufTnK/6OYDjA1e8pusOcJz6VpQ4Yw+4gp5llqod
uDzJOJNTbwdqbgpS8vU7IIQvHDqUYgepigW2zq078Ld7cr7zmR0oDvjPj/Xv
wMwJleTjF+0gmPnCZPX2Dshx9vjzFDwFbuPXfdawC9uX7y5x5tuCqQSeN0Np
F2SF1QJGQ22hfMtCo//OLghZ6uWsWtmC1iuFzuv6u4BW9jCOStpCMrrUJvB8
F3xL3F0/V9rAKV612u+1uxC6RH26VGANyab+Pw4dxyEJPt+vDT23AEa3xy3H
T+IQZ7b3o7H3LMAm7EbtqVM4ROxBnW2VoAVACUvBJSkcYijXcli+5QkMEsKD
ta7ikAtEpXMXDz2Bw4mx8vGGOGT1rlyhRpsZ+P7nIpNqikMkTPQaPDPMYLZe
UyL3CQ7hYfjuyORpBtSZw0epdjgkqD6qXV7SDDRlUjZ++uCQSBeoR948htgf
2QW8aTjku/shT2YPU8BNBmUey8IhXmaB8ie1TeHx1pNE0TwcMpB6hS5Z1hQu
HDsTIluMQ4bkgwTT1k2gy7rQVLMeh5xv5oyaczaBfSzUo2/GcIjkQnqifJAx
uB9N2P9ukrb+t+SHm5bGMCb5jDVnFod0X/4VyKRmDEUasFmxjEMaDfRixQ4Z
g1pGXWcvCY8cPoxa+f9nBOFXWkN4BPHI5rcbuUbzhqBYkyrVL4xH3OdEdJh6
DeGfrNvPxNN4RCfRMH29zhAeS4sKn5DGI4531bdL3xgCcjKg7sxVPDIidSiq
6KYhrKbqmf9VxCPXSpfz8y8aQh7/BY5iZTySlLG3fFHQEA7yTujKqOER6UBx
Jl28ISywKmxepeCRiAlhg2qqAWQEHkqhN8YjYt5u2Zy5BqBNv6T0+TEeORbB
frj4jQE07aa8VrHBI4j9mmW/qwEkL+5KPPLEI/TfnCWbyQbw0Lq7+5APHrm8
dfNYgIQBsM6+9xj0wyOMm0deRh0zAOdxnVbDMDwib8pr8obBAO70UE2t3uKR
Uw2s7CadFCA9iGSXTMEjfJ8nalI/U6Cyw7xkKQ2PPGjieCNVQwGhFh6iSx4e
yXqoduxWFgX6lf5mXyqgxf/7CEvXWwq8qm9S3SnCI6+fnIgujqTATrVTog8V
j6we/qv31IsCxbJ3rimieMTjLTfvPScKmJcJzTLW0cZ9WyyDrSjQVdApE9aM
R0YftcvS61IgRCx/SLUNjwR7hDgrP6SAfI6vP9c3PLLkbNg7pUKB96lSnbG9
tHgRwx25KxQw4mdx1xrAI33+cn3LshTgfTty7OgwHgn0tmBjOUeBdp7Kz0Nj
eOSVwkTNc3EK+EVH2KRO4pFFuC2kKUqBy1xmB0xm8Uh1t5X/a0EKLL5EaoQX
8IgGX5PUOQEKZLEeNJ5ZwiO8AhzBskcooBv4h+X9Gh7BM37dyuChwD76xkKb
LTxCjZwjunNToNk78ZHULh6xuKovSeWigNeuA26VQECoGS3HTDgocN79dmY5
PQEJunchwGMPBWbXT6i4MRMQJtzn4/TsFHjn8G9Zjp2AmNwObN5hpYDG4vd4
HCcBce49a2xOw+zWufJ1+wnISynWv8o0bPwuZm83DwH5x6Fv9IGGqzp9BqeP
EJBLhb3+79gowMlkk7cjQPOfdYN8krae2WVtV04hAmIe6h+C0Phg1tevC4kS
EFwCX/xfGl/uVGlu2TMEZPAwb7ncAQpYdvGP3T5LQOyfDWoIH6JAPRNbIeU8
bb0tqcMlfBQ4JLfh6SBLQI7RG7T+PkGBpzbjtwPJBCQ14imlnpbfptSOQ2/l
CYjsaCzxjiQF+LqrpwoUCUi1LcoWcpECjsw5ZfXKBIS1AfZ6IRRolYt+0aNC
QHLcGr+L36CAa5qVAE6dgMTD9myXNgU6ujX/cGkRENdmB+ZeUwoIsyhVn9Qj
IN8VWjzz7CjgQZYKvmRIQFDrcYo6rf46bfke3TElIMy2E1xDoRQ4nc5y0vAJ
ARF7UX3zdgIFvHvWlh2tCUgPG+uBjFwKSEB7eKITAWkUH7e/+IUC/k+rdAvd
CEi3uBKz9y8KDKZnnW7wpK1/9s617kUKBLM+b5rzJyDL0rNRnw8bwAhYRuND
CIhXXZieq5QBXLR7ZLQ/nIA038q4pXvTACZ6JXFysTT/VZ/k5jwMQI7taJtq
AgGZnbQsL6Cd9yiEOcEomYD4lJo96ikzgCuZIxdCsgjI6uPcQ6GrBhD7s40u
OY+AIF9PDV88aAjzbNTvRQUEpJ07QNrvkiEk2Eda95UTkLu5m663/Q1hKdNT
7k8VAXl3uv/c/AdDUO57wkL8SEDsCiJkPH4awtoVhUzRzwSkJMP5d+M5I1Bx
kHAgfyEgQhfcZItMjCAt6/BVtQ4CIvooxvhvnBGo7VkZdOklIGGcpgP9DMaQ
LT+cFzpAQHJN6uKa5Y0B5/jFNWWYgFz91WMS4mUM+f3p3J+nCMjDgOK0k3Qm
QNr7aqx/joCkl+YtPbhlAppXPQoX/hKQ3pO4KEKMCTDmPFQ5uElAdn9p9adf
MAW9AfnDp3do9jNa0uxhplC6V3waCEREc+Qefe+kKRg6MfiZMhOR9OK0Qx/y
HkNlztI9N3Yicl7xWcoDbjPYO/hL4CUnEdl/QFcv+oUZ1CiUV5fyEhEO55N0
Fo7mYDj85tKLo0QkJD19Ze2POTB6PKu4d4yIvEsMI/y0fgJqZfIlCyJEpOq4
DKrjawFr9wSlUDEiItXuorXGYwkJCwz/hUoSkX7tPsneMkuYEPmSJypDRMiZ
at3z7NYQ3PBBdOMyEeE5tynn99kaJAxfZTUiRITVxtEiVskGOnfthaIViEgK
f9y5xwU24JqgnmZ0nRZP/NMzH/hsgU9G9pjULSKi8MvSZO21LdR3Hk7GqxKR
bGk99p9cT4F9z0h8ojoREaHIfzolYgdFufU8llpExFTG7ohYrR1oXM+MuaRH
RGoPBQYsGdvD9ljgfmZDIiKhevxZ0H4HePfcIrLHhJafJcSV75sDKB29w5Fp
TkQiXmSYMbx1hNlKyZcOVrT5vxmZPjk5wfnl1SBORyKibKeLGzZ0gb7wXsZh
FyJS6Vq+38nFFbzEqvw+PCMib8Re/zPPdAPB5kSSx3Pa/CGxqqoFd2g2ee59
6wURKRId8J3U8ABrohHuUCAROTNT+Gl31BP2JSt6TIXQMKe0lFGLF1RcFvlX
Fk5EhJHza7bU56Dby+LqF0VEttseeXh98gai4/za/VgiEiBbJRg65wNZnB0O
xxOICHPblU7Diy/g9oeipb9JRCSK/9qL77l+sHgz2hZLJSJHkhs5llQCIGbS
+U9YJhHJW2B87C4aBJdfaFnq5BIRNx4HTPFGCAwLkGdOfSAitxIDombLw8Cv
ht9ss5CIqMRE7dX4FA6ntIi/m0qJiHa3n5WO+StoXxs3iqkkIhfIqm1/H0WB
Q1TTiHENETk90cXBnxkNvJK5+tK1NH/m/4ydn8QB+iV0kNBARLhlYtznPyeA
kbmNdsdnIjJuXPkh3SUZmBju/Uz6QkToq8NsU7hTaf+/cxpW/6vhOuO57qM2
+Q0yIqMUMktGISH0/R6SjKwUWjK6kVGyGqKy+hORrCIKN1IP0p8kZSbukoRs
kl0kSVbp+b94ntfnvDjXda7rc855c1o4YHx0UZH3TA62hvUfdds5IFxe4Kbe
e9b927tkzd3F0vcZkbInh4vw3Qt9LV29LD6kqsq4zzCxvkiVRd4nDpCpveg4
almOx4ozmwKGOWC7VJjtseRqHG0Rbrp3nNXPwZ50tuwGrDrp2ig4yQGl6mXn
H+t/wB8ZJvs+T3NAq9IcmzezFwfKKb8qmuWAdMUO3oilUSxZs2bP5XlWPVH+
TTMe0/iV/Y8qs2UOmMIpE9l6k9h9uQ2J/eWAfrUnPQqKn/GalKcVX1YRcE/G
6Z+k1nbMVL+j/YwioGioIEfQ+Q22a7lUdm01AUypzQcHUA3+43VCw4aPABfe
yMHM+8+wk9bUdYG1BGhajbnEjRbj+lWBg2+FCVDL+ex58f0jrNDEqckQJWDG
av3m/tgcfCM5KXqPOAH8EW6OB9dk4h+Osp9XJAkQC+HZ6eBzF9soFWuWyxIw
RvkLaTqm4PJfOMZfngArpfnbqb4JWKK66bOKEgH9Gr2Gfw/fxCHXj2pNbifg
gPL+jo7nMXj00ERM7g4C3tdHhlkWR2ITyXNDTpoEzPnemo91iMAFX4hdEjoE
LFeYDwSkh+K1JfE3uhABqkYatVvMr+KAy5LDCfoE8MLhVeLFwbjbuGCXpSEB
G/kzRJ4eDcRISDeW24SAzmW6XSf4PM7sbxyuNyPgsP0IM4YIwNQDW+0QKwLc
h/f+mujzxe6+I7G7DxGgwOh+Nfj7LH6323dkwY4AMkE/KcXGG6txsuswjxHg
KWXu5FrnhZM+3Ig740DAyo+2sG4VD7yUJjaqcJIAw/mvsSGjbtjeNV9n1JWA
rlPn8NEeF1yjqnXzvgcB59QbmGysebD596vRY2cIqC5gz3B0csZR9da6630J
KOierr465oi/xQ3ebA0gII8Rymt80wEfOHpm7MZFAkTjMvvKSu1xqdwfXZNg
AvK7znv9Dj2GN3yPiidDCOD7JDk5HnoEXy5fP14VTkDt9XDJ8SI7PByWs/tS
JAFDx5rEN1G22MhC/ZZmDAG2XM5TVpcP4UeiNeM/4ggQuSIk8Hb9Qcw/bIEK
EgiWv7pn9jcfwH4FfbdOpRBQ/qL5ynyGFe487zEhm0ZAxb5mfwOGJb7Hey0h
NYuAU4Eus9LbzDDRKfTFJpcArfoNfzJ8TbFbZiZe+5CAfU/zS3S7jPFbT5XE
pgICOI5ua998zAiraL78wigmwNe/XaZj0RAnsO8Hg1IC3s30+3EW7cULb7oS
/z4jINJgoafwkgGucpiDgGoCuJ8zPqkc0MeyiqFJqq8I+HPpmv+ArR5mzPFP
TjYQkDLwKTjbC/BkZbpe3lsCXkQlzIXLYmwZpZTs/J6A7u1rzXZG7sbMg+WT
Em0svTy2mzemdfH6TUb63R0sv/CnC4ykaeNPT5ynLAcIyBi6aLxCa2GD4Bl9
niECgq5FjQV1a+A8o8spr0cJuHtWhrzycif27ruzB30jIOphsdeB0h24LVf+
9uIMAQmd0ovsDWpYy6f0G3OOhTcjWPrbqCpmpz/cVvxDwB0sclPYWAVTDD8R
LXYS3orl9ir+2oZXc627ZUCSkO3VqzN1Vpl17x2LPs5LgqmCQrdLvgIWjV7h
dBcgIajV02Pfya1Ygvd+eIAwCT99NCp2qMhj+TWjwbHiJGx3K+ZLX5TDynGM
5VQpEmIGIjZyzcliNQHF83lyJHxIPH3EZkUG6wh6n61WJqHTr+y7lqY0hoS1
35pUSTgUhGcN/pHCBsIl7t07SVgjYcgjkS6JzdctOc/uJiHVVOT3yaMS2Dol
7dNfPRL699r8jqbEsZ0oPs5jSMKYUrVXQc1G7LQxzEbOnAS7om1PedxFsWva
5lbVAyTsrLx9h2G9HnuKN1ogGxJWi50sumCyDvtv4jO2tSdBO2xZp/m4ML54
r+iVsxMJ6btul3afF8LBUtb63i4kPK1iq89NF8QMmRSdyNMkcNXvK9nDuRbH
ZGuXJfqQYDiU0UOZCuB4uT71zAASJBOyZ32S+HHaFultz4NJmGPylnJc58P3
8+ryX4eQUKPJwZVjyYtztrpuaYsg4brXhikrWR5cqPhIcuoGCVlO4vorP7gw
85H53cV4Eu7VquU+meTEZcozolQyCUOJt3HPDI1rtmsIbsogYcc1lQ+mYhR+
XdQZq5hFQnX/hF8MkPitaiCPVi4JeqmCD1RPE/jjjirSqpCEHm7H5b6hVXhC
02QhpJKEQmvBrYXKbPhb2aRfbC2rX2b5sUEyf9GPXbEzqa9J8Pj32U2PhT/o
t07bF2YzCY8kK4Nd65cR+4sA1+pWEixsjhY6vlxCFBIdbupg6eHnzJFV1YuI
H+z7RgdIuGPbDXbD80i4mu3I7BAJ/7mXP1Ei5tEG/ayPf8dI0OeA0yNKv5CM
wXjz+u8kNJlLzQcm/0QaRj41JmwUxONOlfDXMyhSjXtagKDgwELutOX2GdQr
lr2xi6ZguPSpamLadxQy0+7nuoaCONUu4WO806i95/T9bYIUSMQVPNakviH5
evrdnAgF8k1vXrhxTqF3d3ZtCZOgQM8o4br9lq9IKvyDtak0Ba3nam8F7PmC
/M54XFm7mYJ5i5+7o1wn0AaDu133lClI8p5xP1s/hlyn2KJf6FJgMx/jGdEx
jMo7bpeFAQUnnjtZ5ysOI74atRFTAwq2Odf2F4YPIWbSSdRtSoFbwX6RMJPP
iL76x/2+BQXMGydsvjAH0RGPpGQ3awpOP89UdZQdRGzQ8P3XEQq0j3TPvRL4
hKwVHMVf2lNQWNkmXSoxgHKElozDnShQ/3fV6nTpfrR/QjFL0J0Cl7fnCtz2
9KKU+NhDKhcoGCpZju371Im+XpIPmb9EgXhFx0yLaCdCrtUFL6+w8K/62GZ1
uAMN68zSZgwK7B34/bi/tiPNzdHqQtGs+NVrlqxFB0Xxyzn2xFKQ+Xqgyjyh
DamM2JSfSqaAZA+svGLdikKbp0dVUinoQVHiPeUf0MdnDMGFdBY/6A9DdssH
dOlGuWdEDgX9KzYTnbwtqFFTYlNWCYvfOP2ATol3SEz6qan7Mxa/Y2e/Fexo
Qt48ludVX1AQOcGUY7d8i0QGr7ZU1lEQ86I6QzT9P3TqzYaViAYKFnxXFv9p
bkQVJU8UzN9SEFhtLaxNNyKnqJHQ3lYKntTmf02LfI1K/IKLsjooEKtJVK1p
rUecJ9b1ufdQkLucIJ8mU48KdhhrLH6mIMzbTaiwtQ4t9T4aF/5Bwf6x4+E+
3jXIwLMhzuwXBQIjz7+ptlajmOUhrfAlCtboiibY61QjyQ0bI3+uokH71tX/
0dpYhdwfaKgq0TTc5Ip7zydXiZhaB7qcuWlI3WoaxS3+Eu2zjdzaKkiD1+9s
rXdbKlDcaHbL6vU0/PeGa2Rm13PU7V91QV+MBjaLgxwqB8vR6YT5xseyNIT+
7gztyChDCS3/uMftpCFxyeqRR3QJ6ne4urZhFw0XJ7v1RjuYaMv3tPK/u2nQ
9fIR9t/KROV8bavPGNKwNX3q3/m+YkSkTxfnmNDg2l7uEgbFyFyZ+2i/OQ3K
8raGtnmP0aCp/kMzWxoeljgGCF8rQgo9x63Dj9KwrlR0teVyIfJzv7BccYIG
phsplj5TgDgji0yV3Gg4zCN2xG/hEdpWLzG5+gIN6M5Bm0GXB+j8Ie0E/SAa
bpfam/Mn5qHq4UO6F6/SICT3mqn0Xy46yBETPRFJQ+2hJXVklIPS4/PUpW7Q
IOPc8aYq7l80LlXXaxdPg9GapUzTgWwUCMtKDXdoEM46npUfk4XqmkXa/6bT
EHapN2PjVCbiO6EWpJlFQwNPj8M7q0yUGXSqKechDTaLj133KtxHDeUdXuEV
NFCDF5wb5dLRWpNZ4RdVNLyarUAR2++iY118L3/W0TBT7dK4Ry8NTc/v5TvZ
RIMWY5mtOPAO0rrmWJraQoPGLIMezLqNQkSC7FvbWfkLXIa8rSlIZCezQL+f
huX7Jl/P7k1GDnXNNhc/01BZZZG8i5GEHlh/XXk8SsNcqsagWEsi0vWRtpCa
pqGzos7jlF8CimBH83azNJiddoz3fncLvY87nBE3T0Pkw+Mczcq30AZJ/30N
yzTUbfGstY2PR//3nw3+/z/b/wKNUvxy
       "]]},
     Annotation[#, "Charting`Private`Tag$3844#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.1324876266549776`*^-7},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {2.1324876266549776`*^-7, 0.9932774580448911}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8229709336176443`*^9, 3.8229709437274227`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Coth", "[", 
     RowBox[{"w", "/", "2"}], "]"}], "*", "2", "*", "w", " ", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"w", "^", "2"}]}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"w", "^", "2"}], "-", "4", "-", 
          RowBox[{"4", "*", "w", " ", 
           RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{"4", "*", "w", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
      ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8229709575916557`*^9, 3.82297106381164*^9}, {
  3.822971139067093*^9, 3.822971145261143*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,9,9,23099610010445339481,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.82297102387539*^9, {3.822971058321966*^9, 3.822971067775362*^9}, 
   3.822971146210967*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"w\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"w\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"2.48318174688172`\\\", \\\"}\
\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"1.0596712662827974`\\\"}]\
\\) and \\!\\(\\*RowBox[{\\\"0.010176055395486765`\\\"}]\\) for the integral \
and error estimates.\"",2,9,10,23099610010445339481,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.82297102387539*^9, {3.822971058321966*^9, 3.822971067775362*^9}, 
   3.8229711462667837`*^9}],

Cell[BoxData["1.0596712662827974`"], "Output",
 CellChangeTimes->{
  3.8229710239389935`*^9, {3.822971058640316*^9, 3.8229710679242744`*^9}, 
   3.8229711463103943`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"i", ",", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Coth", "[", 
         RowBox[{"w", "/", "2"}], "]"}], "*", 
        RowBox[{"i", "^", "2"}], "*", "w", " ", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"w", "^", "2"}], "-", "4", "-", 
              RowBox[{
               RowBox[{"i", "^", "2"}], "*", "w", " ", 
               RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
           RowBox[{
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"i", "^", "2"}], "*", "w", " ", 
              RowBox[{"Exp", "[", 
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
          ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"w", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ","}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8229711567434597`*^9, 3.822971260959736*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"w\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"w\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"2.141257644123483`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"2.089794377899235`\\\
\"}]\\) and \\!\\(\\*RowBox[{\\\"0.002995980319315864`\\\"}]\\) for the \
integral and error estimates.\"",2,10,11,23099610010445339481,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8229712280518665`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "\[InvisibleSpace]", "2.089794377899235`"}],
  SequenceForm[1, 2.089794377899235],
  Editable->False]], "Print",
 CellChangeTimes->{3.8229712280608606`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,10,12,23099610010445339481,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.822971228065856*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"w\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"w\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"2.48318174688172`\\\", \\\"}\
\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.119342532565595`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.02035211079097353`\\\"}]\\) for the integral and error \
estimates.\"",2,10,13,23099610010445339481,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.822971228112836*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"2", "\[InvisibleSpace]", "2.119342532565595`"}],
  SequenceForm[2, 2.119342532565595],
  Editable->False]], "Print",
 CellChangeTimes->{3.822971228157807*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,10,14,23099610010445339481,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8229712281628027`*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"w\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"w\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"2.9692370890657775`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.2590395304620112`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.6964918210638016`\\\"}]\\) for the integral and error \
estimates.\"",2,10,15,23099610010445339481,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8229712282157726`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,10,16,23099610010445339481,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8229712282657447`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"3", "\[InvisibleSpace]", "2.2590395304620112`"}],
  SequenceForm[3, 2.2590395304620112`],
  Editable->False]], "Print",
 CellChangeTimes->{3.822971228312716*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,10,17,23099610010445339481,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8229712283167143`*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,10,18,23099610010445339481,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.822971228364688*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"4", "\[InvisibleSpace]", "1.225399168511845`"}],
  SequenceForm[4, 1.225399168511845],
  Editable->False]], "Print",
 CellChangeTimes->{3.822971228408662*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8231556771158895`*^9, 3.8231556772350845`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", 
       RowBox[{"L", "^", "2"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"w", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"w", "^", "2"}], "-", "4", "+", 
             RowBox[{
              RowBox[{"L", "^", "2"}], "*", "w", " ", 
              RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"L", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"-", 
               RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8231557082649775`*^9, 3.823155795745226*^9}, {
  3.823155857304835*^9, 3.8231559090287232`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAAoVirt4gsgz78PclqOO1gPaT6FoKj
lmE/aADYI/5pHD9NiwUpfZZxP0Y31HW+Mjw/SJn/kKhhej+cKLm5ClRPP6LT
fPxploE/zEUxwJ5eWz+g2nmw//uFP8z7KpVZ62Q/neF2ZJVhij+RTaDd51dt
P5rocxgrx44/mXdMZqBfcz/MdzhmYJaRPzG4hEoEdXg/S/s2QCvJkz/Lq4WN
99B9P8p+NRr2+5U/j8DYswCtgT/HhTLOi2GaP4pP/S6ZTYc/4UkWm1uWoT/C
zLbyiA6RP6CLFQjBr6I/3n5QrQpSkj9gzRR1JsmjP0MV0dyCjJM/3lATT/H7
pT957C2zSeyVP56SErxWFac/ujLjRi0Wlz9d1BEpvC6oP870zDsbQJg/3FcQ
A4dhqj+Be1E5qaOaP5yZD3Dseqs//jokbJ3mmz9b2w7dUZSsP+8h2ZdtPJ0/
Gh0OSretrT/e+tZywaueP9peDbccx64/V8uajDEeoD+ZoAwkguCvP3Wyjo/H
+6A/LPGFyPN8sD8HfdWWMfShPwySBX+mCbE/uE+YXjsOoz/sMoU1WZaxP6DW
EaNXUqQ/zNME7Asjsj+aMWIkNculP6x0hKK+r7I/Nk+q+ZKGpz+MFQRZcTyz
P0dM21p0lqk/a7aDDyTJsz8hBYa95xKsP0pXA8bWVbQ/6XQaE7ccrz8q+IJ8
ieK0P0Q8jaLJcLE/CpkCMzxvtT+RKYP1XdGzP+o5gunu+7U/zFTmBPzftj/K
2gGgoYi2P0JI7qUt5bo/qXuBVlQVtz+2BwgscinAP4gcAQ0Horc/MfK0Y/Px
wz9ovYDDuS64P19V1Wghbck/SF4Aemy7uD+2TTTzAOHQPyj/fzAfSLk/Il1b
tv+a1z8IoP/m0dS5PxfDSZ1rquE/50B/nYRhuj+V2nIVtOTsP/MeqhN1w7o/
dOJkPYyk9j9K7VXN
       "]], LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAWA4jKwQvvT904mQ9jKT2PyUGfeS0
rb0/8U5kqeoM7D8Ep/yaZzq+P5J6JsVmieI/5Ed8URrHvj87K1B4l7vaP8To
+wfNU78/v3vVJQOo1D+kiXu+f+C/PzQw8H2h4tA/QpV9Opk2wD/m5QfWVfTM
P7JlvZXyfMA/gCHHtPTkyT8iNv3wS8PAP2aTusr1Esg/kgY9TKUJwT8uFm+O
ajrHPwLXfKf+T8E/0MbwWsFAxz9xp7wCWJbBP0YxpZ3rLMg/RB5/N5ziwT+z
hD3T+WPKPxiVQWzgLsI/NrvJYKxZzj/sCwShJHvCP19fAz2MhNI/wILG1WjH
wj9sn0sX6jLYP5T5iAqtE8M/qyv+L+MV4T9ncEs/8V/DP6TKVEl//ek/OucN
dDWswz+8fkqB4A30P3MN4SSVz8M/dOJkPYyk9j/F76JK
       "]], LineBox[CompressedData["
1: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
n93G/v6lEaWs+buvU/w/faEq/w==
       "]]},
     Annotation[#, "Charting`Private`Tag$36805#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7}, {0., 1.415172805615069}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8231558228149786`*^9, 3.823155904035895*^9, 
  3.82315593896935*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", 
       RowBox[{"L", "^", "2"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"w", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"w", "^", "2"}], "-", "4", "-", 
             RowBox[{
              RowBox[{"L", "^", "2"}], "*", "w", " ", 
              RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"L", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"-", 
               RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8231559749092293`*^9, 3.8231559817894573`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAoVirt4gsgz4138pqOO1gPaT6FoKj
lmE/WV+UZeuOHD9NiwUpfZZxPyLLTe5wxjw/SJn/kKhhej8j+6Wx/mRQP6LT
fPxploE/wvVYF/2tXT+g2nmw//uFP8MLuOBjvmc/neF2ZJVhij+fAJsHzJtx
P5rocxgrx44/39rLskLXeD/MdzhmYJaRP1xaiYZI7YA/S/s2QCvJkz9gJuTe
KISGP8p+NRr2+5U/jipfqTxzjT9IAjT0wC6YP2ECCaY5C5M/x4Uyzothmj+r
RbzD6HaYP0YJMahWlJw/jpzbsW5Xnz/EjC+CIceeP8EFPXosGKQ/IggXLvZ8
oD9vIIl+suKpP+FJFptblqE/B1T4/sLQsD+gixUIwa+iP5DbXlQFIrY/YM0U
dSbJoz9gyGWlpay9Px8PFOKL4qQ/VSO3RRRoxD/eUBNP8fulPwpseOAuEs0/
npISvFYVpz/eg9oO/sDVP13UESm8Lqg/CPwaamB84T8cFhGWIUipP/7tDYC5
Xe8/hHGFVEtfqT+srL0xpCrxPzPMvwg=
       "]], LineBox[CompressedData["
1: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
/wM5bnYc
       "]], 
      LineBox[{{3.132447094748852, 1.0729104941372425`}, {3.1339888789099506`,
        0.5115727906782314}, {3.136133385800715, 0.44441941104997623`}, {
       3.138277892691479, 0.637852580257703}, {3.140422399582243, 
       1.0205832280783773`}, {3.1425669064730073`, 0.46297253939566213`}, {
       3.1448919975143017`, 0.4437072111099866}, {3.147217088555596, 
       0.8183413652526971}, {3.1495421795968905`, 0.6928237262825085}, {
       3.151867270638185, 0.43615324813487183`}, {3.1541923616794794`, 
       0.47515508054854844`}, {3.155685509544698, 1.0729104941372425`}}], 
      LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAATnbAutw+CkCsrL0xpCrxP6j8fSiv
QQpAo7PMRv8B3D/82O0sckYKQCTosK+87do/ULVdMTVLCkDPBoYpScjtP6SR
zTX4TwpAzlzWBPyZ4D/4bT06u1QKQH25SwSzY9s/J8VMYS1ZCkDjl1rga9Tt
P1YcXIifXQpAWTOXLeX13z+Fc2uvEWIKQJkePgr4U+I/tMp61oNmCkAfEZfa
r1fhP+Mhiv31agpAI95emqpY5j8SeZkkaG8KQGBv6Ct1uu8/QtCoS9pzCkCw
08mDlhvdP3EnuHJMeApA186MFGYK7D+gfseZvnwKQDUp4EnPjN8/0NXWwDCB
CkAF73y/MR7bP/8s5ueihQpA3G+t43lO6j8uhPUOFYoKQA+U9AD+zuE/XdsE
NoeOCkAoH7yCbxDaP4wyFF35kgpAomoVkZOC3D+LWTT70ZQKQKysvTGkKvE/
LBCfpA==
       "]], 
      LineBox[{{3.4242266262366017`, 1.0729104941372425`}, {3.425965666437535,
        0.5710934933041946}, {3.4281365202007885`, 0.5118335750822028}, {
       3.4303073739640415`, 0.841195683368381}, {3.432435597592111, 
       0.4257932760698762}, {3.433429444548263, 1.0729104941372425`}}], 
      LineBox[{{3.5633762366939825`, 1.0729104941372425`}, {3.564385462532381,
        0.40905237575366227`}, {3.5665136861604503`, 0.39205940492971536`}, {
       3.5688224939390496`, 0.8152322703264081}, {3.5711313017176485`, 
       0.42934243688544815`}, {3.5734401094962474`, 0.38257536885138416`}, {
       3.5757489172748462`, 0.41441899075095145`}, {3.5767027290811524`, 
       1.0729104941372425`}}], LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAA7xmkWO95DUCsrL0xpCrxP+WGbUwZ
fg1A4oUfVxk22z/avVzH04INQDlhEvipd9s/zvRLQo6HDUC1VYKEBSDaP8Ir
O71IjA1A8+Vo+5mQ4j+2Yio4A5ENQAR8rnfditg/qpkZs72VDUCuxiRuEPbZ
P5/QCC54mg1A1/McfQYt6z+UB/ioMp8NQBr11Q0Zn9g/iD7nI+2jDUDFSaEr
EGDYP3x11p6nqA1APOc+woI63j9wrMUZYq0NQIQm8C7YuN0/ZOO0lByyDUCV
KpEGYFLYP1kapA/Xtg1AgppNqRBX2D8ozDKtQLsNQDBKP2mpudw/+H3BSqq/
DUB39iXVg3/hP8gvUOgTxA1AKxxbtViJ2D+Y4d6FfcgNQF3pgTKqLtg/aJNt
I+fMDUBCk9oKFMDZP/MvzxCczg1ArKy9MaQq8T/eDZXJ
       "]], LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAb3Jr3DE0DkCsrL0xpCrxP94+zujN
Ng5AxJgw0vCg2T+t8FyGNzsOQNJME+kpL9g/fKLrI6E/DkCZiLuEv2XYP0xU
esEKRA5A7MNARviG3j8cBglfdEgOQJW3qWhR6tw/67eX/N1MDkDLoX4Q3VnY
P7ppJppHUQ5AGhspa/Yy2D+KG7U3sVUOQMSt9IWt09k/Ws1D1RpaDkBIwjpN
gt/tPyl/0nKEXg5AuV7h8he22D/4MGEQ7mIOQL8olOBYONg/yOLvrVdnDkB2
7nmzB3bZP5iUfkvBaw5A5eJZfhIc8D9nRg3pKnAOQIXmgkNFstg/NvibhpR0
DkCcJdKgBofYPwaqKiT+eA5Ah1SIrKU+5z/WW7nBZ30OQIHjhd3SVtk/pg1I
X9GBDkDQjCSvG8bZP3a/1vw6hg5A4YhhHZcp2z9FcWWapIoOQMYPwi5FwNw/
FCP0Nw6PDkDjEV+oLovaP+TUgtV3kw5A4bMMIWgk2j+0hhFz4ZcOQDrKw9z5
Hdk/hDigEEucDkBe2TNQL/HwP1TqLq60oA5AsRMT2FmT2D8jnL1LHqUOQJsQ
bGORktg/8k1M6YepDkDCt/4JvffkP8L/2obxrQ5ASDTtAbat2T+SsWkkW7IO
QIieFZnRPtg/YWP4wcS2DkBk/fTpLofYPzAVh18uuw5AsS9semSr4j8AxxX9
l78OQMi+bXfqLNo/0HikmgHEDkDPoHi3sEHYP58qMzhryA5AgAnNOGNF2D9u
3MHV1MwOQDGZGkdJYto/Po5Qcz7RDkAWDp3k9qbhP3Rqd74G1g5AUFSPJORv
2D+qRp4Jz9oOQL7weqQ1Ndg/4CLFVJffDkCDJsTc5XrZPxX/659f5A5AFygy
jo/P4z9K2xLrJ+kOQEecaZEve9g/gLc5NvDtDkAsA5IsNUnYP7aTYIG48g5A
yrT7S2Hw2j/sb4fMgPcOQEFh4W1jU9s/IkyuF0n8DkDPEsfupWDYP1go1WIR
AQ9A2qrvOuxm2T+OBPyt2QUPQOvFdqcM89w/xOAi+aEKD0A1LfM8pbbYP/q8
SURqDw9AMVKdOXM55T/LdHnh6BAPQKysvTGkKvE/WL+ETQ==
       "]], LineBox[CompressedData["
1:eJw9lGs0lWkUx7FUpuR5xhxqMhXFWIkuxnWa7E0JFUqds+SScpcTFk03ZUoq
RIcxRJdDikUoU7oMTdRBc7qNpSnPe3TcLzkxLpU0leadL/Nhr732h733b6//
f22jwGivEA01NTVXPv7LNYU2C30zCZaX/778otkovGhOOeCVTTCpYWODThED
3SuV9+ecJvgtd67y6fkucD3RotstJdh/tp1F93CQEDbpX3aBr1Vt0to0BVSt
MimNKyF4+biVaLHLEKjmr3+zooLgFitRbksBA8OPsaB5leBwr84MGfSCkOWl
PrpBcMq07R1PZQxSq+qe/VJD8LmX/xv7PQzqMvoN/esIjg0IzTXUlDAu1hGb
NBC03qJVsTScA3M365tDcoKSV9+8O+zLINDET+PGE4K5Y4M4JGGQq37EPeEp
QTf7ajfrx33wRFmau4YRvCscctJX50CzuqlbR0kw4mNzdoaIwfc575a0dBIM
f1csG45nEBM7b39+H8HR7Af5P2a0QbGHc0PYK4KlKz0T/GI4aDUT02UjBAs2
a+kOBTCg07J8J94Q3Jzc86lXzGBN92/Fde8JPqh3MD/UpYADtR2jyZP8vBin
S/WmCuAeH5GWqFPsmv/IRbKTwUX9FafUNSkubS2bLN/LICpgTOIzleJbRZPG
km0vwK6kNPmaFsV9YduyQnZwoDG67bD2DIrx1weNB3czeGQ/e3/ITIoTfePp
/6zg4FTin7F3CMWAudK8HRMKCHx4LHKWLkVFjKWz4SUG5gKH4BgBxaO3jgbb
Vo3AuN9bP7k+xcSK0P6cwHa4W1QuXPA1RaumtBKf1Ryk/R3kEW9AsaMyJzRH
oASRrYHLX3Mp7v8ULXMu4/U91AwWhhTb8huEh+NGQPVHit2xBRTNzod8/uoW
g6ovHZe3G1N0iQx+bJHM4CefiUV2phQzOG+DpsRWWHvhyoLMRRS1pXobpkZz
IBgMNVAtpgiar8948fe1Wc0TrFpCsficXkRPOoOSg8+0zy6jmNOu7jQ2Swmx
jWlT3lpSPFG4y9fej4OVZPWkuzXPc/HaruO8n7S8P4wX21JMLfOszDrAoLng
6vBne4qhDhvd5dc4ODsQ8dL7B4opRjnLen1aIczSqPNXB4pCC8vZZ9IYWMYz
brojRdXzew7f8TwfZZLmoFUUBR/IusoBBo3aLg9vO1M00rALD0tQQYZwUqbn
SlFeFDHqfIWBj/T67ai1FMsGQq+mH2Rg0i++fn89xa3zBWGdvQxGlhpfNvSk
2NiXcFwy3g3Ve1uL922kaBostBwtYZB09+f85k0Ua1iW7KaUgcf0tbmLRRQ/
yO+MSeVdMHuTemaSN+8PPc9cwXMG3WdupSh9+H3yROV7Gw4u90Qn2vhTDExd
p5pjx8FeC9N4SQDFPRmSdIMyBTjtbot7uZ3XMzjtZF4jBzNrs8WOwRSH59Tu
sxtkwKa5h5wOpRi3xsW/6RODwg2aW1+H8/1fyHZXdbeCOK9GtD6SYlBB/aYI
ns+mK9azaCfFBwst7iXVMhClTuabR9H//82/N5Qc3w==
       "]], LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAA5OicwlJ7EECsrL0xpCrxP/SWviO7
exBAWJCJ20PY2D++33UcFH4QQPJ4Wt4PkNg/iSgtFW2AEEB7ZqwRLafYP1Rx
5A3GghBAo9chKllv2z8eupsGH4UQQCAdmDfFZdk/6AJT/3eHEEB2U1UGO5zY
P7NLCvjQiRBAkuvTYlya2D9+lMHwKYwQQEng92sHN9k/SN146YKOEEDvnYpW
rlLcPxImMOLbkBBAXD3lOSqy2D/cbufaNJMQQKcZ4NPentg/pree042VEEBt
mjvmmBrZP3EAVszmlxBAWSVS4Qgx3D+qBl1WF5oQQBkTpu/Jutg/4gxk4Eec
EECkMSGyKrXYPxoTa2p4nhBAwbiL+6rX2z9SGXL0qKAQQEOyfArcE9k/ih95
ftmiEEBDpMZa1dnYP8IlgAgKpRBAZHCNbCif3T/6K4eSOqcQQFuavQyoy9w/
MjKOHGupEEDbbtvHj0zZPx8KtcLKqhBArKy9MaQq8T9CZKvP
       "]], LineBox[CompressedData["
1:eJxFk21M03cQxxmDImxtOUyoThxW20IhPgwmBKreQcTClCoPmwxUcCtKxxiC
qBXiNi1IJVLQiWY6tdtceRAFmTPyFJyjIj5AjTr+P4OGIQjS+ESInVjJ/r7a
i8vlXlzu+/3cnfSL3MRMVxcXl8V8vM1thTuTHTOA6uvbPzoV9AJTcyeO+c4E
yrnkXf21J8OD217L1bOAogJ8l0x7wOG1ItfGHbOB/KUyacwgh657PCNr/IEq
bd0jvREMI43enZwUqM678tqlpn7MN0k0njIgm0z7ZPa/HN6vHVugUwCVRQsT
BEMcxlrbxd2BQHfLlf52D4a/D1Q+DwwGOv2dZUzYYccPnV/eMs4HKn8atvvu
FIf7JOFNowuB0odHa0UvOJwI8fohNgQosiCgaU0vhxma+1trPgaK/dm59ISS
4XVdY/K0cKDGhuB9bUKGYSWGxVkRQMYVh+FzJ8NfzJ/5XlUBza2JF198NoTC
NqUjYBk//y/BIVMwQ32fs6+UgFQvu3T6doYPx3svjkQDXQ79SdcgYKgR/fqj
OgZIMXZy0ZGvBrFZub2wWg3U8Od8gVjMUBYTl+bxCdA5++Yeo5PDigy/JZtX
AUVYz8e90jOcLHrm16UBajF0xg8fYJh55PIbRQJQjU9diZb3a2uqerA3Ccg7
8MI5D75W9WR1PPoU6F08G5+dwtDyWGVekQJ01iHsb5lzD33cxbstqTzfvK2v
enh9u+YMbhSsB+r2kieu5ftHVX9Eb0rn93Pm+foRX4bJa43zrmzkeTXf0TeH
27EjP81NoQWSiyR9EgXDINOC4ZJNvP9o5i9zY1hV+86V4Sxe77GGE638fbhY
71hisoGmp62sCytmmD1QXfpbDpC+8Or25NMM/35dmOW+BQgs65am8zyiJJq4
zHygb6YOr8l7n2F9iDTIWgCkTrFpolYylGgmvOQ7gMxD6wQDc+/hHl2XvXgn
kPvTbLmPhOGT4qM3hoqAZpYdOPnyA4Yp5pwzy78FOh+aENBdMYCdrWQ69T3Q
lMLPZg1iuLBveq6bAUiTyAz/RDE8Ov5otbYEaFt8l2PGBoYCUcuizlKgguOO
0CozwzxlOcjKgCbfS2ps5fX0L88YN+wHEm7RejnSGKozQm8/NAGlut+eV8Tz
S7oZPimq+P9//gNj13X4
       "]], LineBox[CompressedData["
1:eJw1U3tQ1AUQ5jmIlzB7MMRjYBQwFJAKGPCudFebAxRhEEUew8OBbhCkEfER
zqTngZYij4zi0ASEwxM6MkOcDERJTohROrpM3RPiwBBBkwxQQAb79Ud/7Ox8
s7O73zff7rL0XbFyCzMzM4kQ/+W7e+4r8suBmpra3633fY7uKv5SLeCGUhd/
e1/GY81N+ywrgGoqR3xMnoyTvYptGZVAFjUn+1adZUwdiw3tPA1UObNiu+N+
xh6rt5y9qoC2VCUVtnoxBi+dnSmoAVrifbOx3Zux5r3bPFwL1J3GHyuzGRfH
17Surwc6YxVZlDjJuD8v7+s6DdCatpUPbfwZh0pkn1g0AhlkFdNzyxk3NTqn
pGuBqn2Cs3JCGK/onqy58S1Q/IPjQeGJJvQyXfPwvAhU5jcjitjAWPrq5Gtl
M1D4918sdxTmzTrJTUMtQEXiY0EjAYwfBq7+ad0PQJ9rFsUsE/joo0R1tT8C
pexZNZW+2IjSrD8KzK8CKaXbZSdCGR3Wm0+vvgaUUK5y3RjI+NTVOzO3A2hE
u89GKejTTYbx+RtA6jC1Za/At+p2VuSgDuhZSmR9TqSg71xxu1M3kPlXfopK
CWP0oe/eju4BogNhFzK3MPrEG2qP3gJyuTR9cPyREc3emXZo7wXKk2T8HiNj
5EXOn07pBX/qdz+OUzA2D0ln/AxA2kOlaeNyxqLWlOyMO0Djhky3y12MGeWH
+0/fBbK0+yciN43x/Rx1tOE+0CZV9vnuq4yOsq4O2wfCvrbQNwo2Mv7lPha4
bgCo5dSSpnujjF0vROfyB4GmOjx8c7ME//QBb14cAnppHlyYFM6Y37D5+OhD
oIWSwk59LGOMcu8rj0dAxif2qnDpEK5MUn207TGQ5heNtSaV0SKodbBkHMi1
z9P0q+CPUTSw+eZTIIfeF7r4KMZLf77unH8GZGNpvXfHZ4zF7Z4hwc+BpPnV
blWWRpRXyBp2TgK17ayMi97KuHbXDlf1NNDaAWWUKJrRKeJEsfEl0NitfucA
oT6x9MICzAE5ndpdLv6G8efZvtwN80D2f8tDXa4znjVMDh9eADJ5z2FOAuMB
rVPcFTMxDfdLW/sEP2KPSLonLMSU+EGWmz6J0S8lWeJjLSb1Uf/ke78xWoUo
tKk2YtKUHYmwPcPYb1fnXmErJoVeded6MuPlUV1Zr0hME5qe2Rahv7Rj1Nza
Tkx99vN11cK9sTyh56CA//+/fwGmf6hR
       "]], LineBox[CompressedData["
1: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
4//vr/8Claw6HA==
       "]], LineBox[CompressedData["
1:eJxFk31M02cQx3lTLFYHnIAoFFQKooSXMV6E4p0tQ6g6MrSoqSyIY1gWViTd
giivEVu0QBigq8tUmKLLmO+CCEYMU4cyx2BAf0+0kQR0gswBiojG7fEv/7hc
Prnkm7vv3S1J0yal21hZWX3E4102fLhKMuEL1Nh4LeTEinF0ney5+LUfkMLY
sfzImIA9rcOJf/oDCba2ZR0jApbvmx4NCADaozcOuT8RMH7DXIMhEGjdUL33
Wl63c5X4DAUDBVZuylLYM7xuCW7HUCC7zAFv9b8C5p1SbPs+DCi9Wxcbyjk8
O3l6KgLo0Rul5tmEgOORmpqkKKAoP++Mm64MG633Bp+RAU1FSwKCbBnuvFPR
JUIgm5681VdeCLisum5n+hogd6nH1Chni/qS3Q0FkL4mX/V8WsAjPrePe8QB
NT2oUBdGMFSNCbLceKAD17p9pVzPsempuVcJNJx6ViV9LWBXwX+6oA1ApTGB
KS8469c6Ox1MBMqJXDoQbcNQ7ij95dGnQFtvn7/j0sDwrTkiQb4JqDZIo9xo
zbClTjn8QzLQSJZt9YAVQ11mSvGrLUBD5iinz0QMg0OzPVVqoMcKyXnHRQxH
X5e0nEsB8vnZolPOYtjwa61KnAqUKXZsO+HBMK389HhGGtAnEwvr5HMZeia3
lnd8DlTsZq42uTM0S+75e2UAHY22L9w1n2HN44c38zRAGv32qjIXhonnJrf3
fwn0cjI2bJaYYW54cqXoK+5PqUMvShkeb7vSJssGetJacaFvAcNO+eIRbQ5Q
TExvuC/Xm/gt3+1HHVDALS9x6wcMFyc+jO3/BuhuZaD6Jx+GsX3yHNFu7l9+
06J/JAyz1CePyfYAzVmfW1DizPDQoP3v2nygVAfr+bc4X8/InKkvBCqSNvvF
8f7+Huvy6y8Gmg6pTYhbxdBJF6QS7QOyzg4rs3gzjJqpKpHtBzK9NAnfuTHc
UfT8rNYAdNXu7rM/OBtnb35QfwCobbBUcoj7cdnY4tBvBJopTDLsXsbQ4uwR
KaoE0pmWdHbGM7Q3FaTLqoBci/TY5Mn34TX4rbaa36P4r3lOnLeeVLTX1wKF
nr78xcd8npKVDWN9h7l/C3sTipcyHL4vbr5/+P2//A8wF20x
       "]], LineBox[CompressedData["
1:eJw9kntI03EUxYdpThKprmKQBjPzMc18lJZb3luaGsYmamkilY8SUzcqrYxM
RAsK1DBrqb22fKUW+YwcvsnnfIDO0bewUkMsIjUd+axf//TH5fL553DvOUcQ
Iw85a8Dj8YTc/NvR2ZEZ+x4BVVc3u5UI53DUKzFQzLGX9asOlS3DteaBVPkT
oHbj13NXbBja+bk+Vz0DKrgZ6piyk6G0L39YqwIKash7l2fP8Grw4hq/FEhd
rslvyBhH5Vi4k7gcKHDETDjkwLAvqilC/gJIUFKbN7CL4a8Jq1uqKqBjYQKm
s2NolZBRp30J1DJq9vULpydL9TMT1wK98WgTLzoyVKyUieT1HFfW3F4XMmzL
NElQNQIZOaUrjJ0Zbs0d7OSrgaKKefptLgwbyyLStJ1AY5Iz7fvdGX5yVpfx
u4CWfLstyYMhv856VNTDcdjgnoC9DCNbJ1xUGiBXI4fSME+G67qkKZkWSNxi
WZHkzdD+1NAWlQ6IHt8xuyhiGDzlhtr3QJ7J8pBGH4Zp5wuS+B+B7A5AdhXH
qll9oWgcKN4jvuYux/2XT3bLPgNlQd9qATJcWFUvKCeAtgcXWRUSQ+usHTba
KaCRga7ES0cY+ptkSvnTQA+E+rEJX4byvMnrohmgaWGYosqP4UML/0rZd85v
3bI+w59he3GFTvmDy6coOjn+BMNvgk1G2p9AKTGThgEBDKEi2Z0/D3TI9qnC
IpCh2GX4tGgBSNYae/ztUYZx9e45Mj1QxLJ+SBrEMMf7fpPyN1BoygZJWzin
p+30MVwBik1bNb0Xwt13Yb7j3BqQ5MOs5qCE+9dUEND7Bwizig2vSTn/yqX9
TgbmlL75cI8ojvPX94Y019CcloKNezWhXD7j1SOzG81pJqhgtzHH6hab+G6+
+f8+/gUv0Dj3
       "]], LineBox[CompressedData["
1:eJw9lGtQFFQUgNFEFERQzyIP3cRdoDRYMCRgzXNYMFkTjecAigrBxkMjdOUh
gmvgEwlEfAQ+UJAaw8UU2QkVSwEJENJK7LKCGi5IxLQQiELR7Y8/7tz55txz
Zs755lzbqMSAmMkGBga+/Px/Tx/q3aUSAVVU3HApW6THqQ5awzzOBWGXNsg2
MYy6ZXxQbwcU2nu/3ZRzbYTHzKC3gDwU1uJVkQytX35SUL0IyG+FMrc3hmFy
4TELK0eg7s1pD8O3M7wvqS9KlwCNS+ebtUczlDQPCTtdgNLFhfXE3x9SLCwl
VyBdpasiS8Gwd5K/Q6kb54wIn+R4hj6ndn1j6AG02NTfeHsWwxJ3tSRWCvSk
WDq2lMfHf9ZeaXofqCXjZME+zqGJJu6OBNR5T5LlmcCwytjzep4M6LKnb98/
nM3LY2nQByg1c9hupJjhZq/jdUErgW6vFIr3JjJs1Nb7auRA+UuS98k5i1P/
brFaDeTYI1sxN4mhao7If+caILNkmwMOKQy1av9fOz8Cki5r8L6QytB9lSrM
KxBonrDafpWSYeEz9aPSYKDAdWp3bz4PvepR5NRQoF5DqUaZznDNvBm62HCg
nIJ0b9rB8ILGM755PZBNVGTwCV5vamDcgONGoPZLlz6buZ/7GDi+NT8SyNbZ
XKXm+bUHGkYGPwaS2GYErvyc+7Ab3hGsADpbKf1rSib38b1oQhML5GC9V92/
m/tYF5BlnQB0Nfjb7ts87vRCZZSxBcigJkfdns3wYEFlTlci0EZdrtUEr6dz
7DSTbeX+j6ffOcbzZT/OKCxTAsnP1xa28vjpaKmlUQpQTPX5B/6HGL6aiDsZ
l8Z9jc/qd93HMKT4xIKWdO4rHtMq9jC87HanzCkTaPRNUcm0vQyPzFrWIDsM
pPgz5rnrFwzXx9d07DwCdEaqX/h2HkP72+766qNAH3ZZLJyfz7BGuXTe4iLu
71py0pQCho/bnbbOKQUK+G1byE9HeT+nbYXdVUCRcUbyiFMMR0fOvCvUAKmH
D3X7nWZ4a61QHvod0NderR8sP8MweJKNsuUGkEXYvY3Cswx3RkNTVQOQU9tk
XUcZw6ZFRsl7HgK5mAcEr67gPrP25NxkQBePuio8LjLcoH3j7Est359z76C9
mvvNNWjZ8gRI5F4vn6hkaKl/aRvSB5QtK6lTX2H4VJ76Xn4/UEfTEquiKoYV
50ZWNw0A3RWr6lqvcl9jyqgpeqBPs6+N6qoZYtBQyvIhIJNf4pyjNQwVmv67
9uNA5rm7v5x2jaGzecLvm/7l82pImT3I+VXs89EiAwE9G1YpOq4zzLXWicwM
BWR4T/zHWC33sS3aQ24kIMXyfuOSmwwXtDxdkzVdQIGuueXlnQz7xJHRN0wE
1OgnMvK+xfcnoyvthamAno+17f6Bc+aDiDwXcwHt91or9Wlm6CvRliXMFlDX
YY+k8TqGs/eH15wHAbllm2jCGhl2PH7Y1mUhoK96LD3rGxg6Fol7/OYKXv83
/wFMLQw3
       "]], LineBox[CompressedData["
1:eJwV0nk01VkcAPCXpkxHUaOrxw8N0bGMZFQIfb9ZQ0xhKjMUIpSQg8iS6FhG
YqJFi6VNtnijaco2k+xRT1G67/cIIaIzliiS+c0f99zzOd/v/d57v/eqeAY6
ekvweDxnbvw/FyRcHRxQIFhcXK13U2scAs51zjoxBGXmYzYaNlEwfO+08qwS
wbT+r582NFOQsHiu3rSW4BnV9CZpFRFEHg+RnlEhaE/jdaJbKEwVys2oqxHs
vSprn/qEQkD3gx7n9QQtKvLY060Uhlb92hSvQVCvsDjd7hkFd8v5sj+0CCY/
dRBMCCnQ8Jys3h+4+i6d1Rpc3Kl4e9xKXYLjoSvTiji39vQfBj2CeCmzMoXL
t5RNcArQJ7gxKPLxkXYKNVYaJtc2E3z0t1GB3XMKBida1FoNCF43UolofEGh
rMR/xZwRwUEa83R7BwXNXulpTROCT7tSxKSTwvXVgu592whe+Na1W+YlBcUd
To2JSFB/7lw/r4vC+ciPpffNCE7ke8eH91CQLr14acCCoK7OztYOLp7UZ3Rq
tTXBjs1jAcdeU1gkx/qZ2xCMjtgrY0spnLCJcQy2I3jT5d8hWxGFyajvjfPs
Ce6KzV66qJuCf1ntOuFPBJdsCgmrYikM9HstX9hNcEhqndk7MYX9ayQ/6jgT
9FWf1rjG5b+yLRC77iE4vX2hOZY7z64Yu4aUfQQN5yW0m99QaBGM3a34hbu/
WzpjulcE5gNpF4ddCb40le9276NQxf8xln+AqxeaG93KecvODl9rD4Kh7ltt
aT+F0pNhu8MOEqwvnP/TfZCCRjl/6y1vgvPGEbczOecNVqh2+BDkjcQ7BXJW
UHCTWnyYoJb7xGzREIVM+4VJPX+CZU+eTWQOU1hxKo91DyB4ed53n9QIhYR7
5vVpQQRdjtbcauPivHcDJTXBBON026I3v6cQwSRdGAvh+imaiosapTDhoHVS
8TjBECv5Jk/OlSPGdRlJBG8XSM/yJyk4qB5wiCsi2Paof4szTwSzh9tS35QQ
zEvw+Lx1kQhulxu3bSvj3j/GMktZQgQLFvydc/e4/37DZmJksQjKfNptQmoI
pi6ftj4lKQLZEnPLQ+0Ex6K6mrxkRNBloGFiO0NQfEqluVpRBJ7245rfmcuh
aWTYMjtDEXS/CHZJEMqh+47qPaf9RKCa/9lY6LcGx4Reni1XuP6vPz7kwOOj
UHzF2qxFBG28t4OCM3x0ymVh06QI1mrsyRpRk0d3wTppTSUWXhf+lSNZLo87
vqh93WjGwrHXMoEu2xSwirzj53ixIHQ+Oh7bqYDi0kmJb5JYuKRd0XjGk8HE
5mObHPNZ6BoOyZTwZrD+xV4Pypl/R9cj3IfBIguHQM87LGSp3Zo96M+g64bk
DcEFLFxWStcxDmPQHFcZpxexcEXmUMZwMoNlDwszGkpZyJ5cdcBKwCDW9cUo
PmChW9CqXVXOYK22WJzLWTko8ZPefQbbZD8qqz9kIWf0y+9KlQxG++RY61Sw
kDswVDdVx+CS7Cf6JlUs5L2q1rrRxWBo40CM8z8s9J0Pn+GLGHRULl38irOq
s37dWTGDPwsVj7g8YuG68I7biT5u/5ylfW61nJsz0nePMpj2+EuQdx23PtHB
rfEDg2697VJDnFWtlmmZjjM43ZCa7FvPwo3amMca0wyeHqU6RxpYeBtrlJ79
iUGD/CjnUc5qMOW6eo5B7bXr9x9tZMFr/q7mb/MMSqb02H7gfLPSb3phgcEH
ygKFwCYW/gOEa4kH
       "]], LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAQNzFMpQtsD+srL0xpCrxPyzxhcjz
fLA/sk4xgqPl6D8MkgV/pgmxPzvSrmkuvOA/7DKFNVmWsT+lEUOGplDYP8zT
BOwLI7I/APG4p9Gr0j+sdISivq+yP6TrqqHf5c0/jBUEWXE8sz+yB2I2z7zI
P2u2gw8kybM/wVdKKxoGxT9KVwPG1lW0P3GqQDdYRsI/KviCfInitD/k2Wbp
dzLAPwqZAjM8b7U/xw3lWIo1vT/qOYLp7vu1P/XDcafAv7o/ytoBoKGItj/q
d2QRO9m4P6l7gVZUFbc//yOKIO5ktz+IHAENB6K3P3Zo9H3XTrY/aL2Aw7ku
uD9G7w+9YYm1P0heAHpsu7g/PrwplsoLtT8o/38wH0i5P9CtYkgx0bQ/CKD/
5tHUuT8FGiKGHNi0P+dAf52EYbo/+WlKImEitT/G4f5TN+66P+if551ltbU/
poJ+Cup6uz/6wO6E0Jq2P4Yj/sCcB7w/SJRAi8Xhtz9mxH13T5S8P3vYsKf2
oLk/RmX9LQIhvT9o4Y0sB/q7PyUGfeS0rb0/M+tlwCYfvz8Ep/yaZzq+Py4G
PzlJrsE/5Ed8URrHvj8sg8+Vn5TEP8To+wfNU78/It+3q6WiyD+kiXu+f+C/
P6VdYEMmes4/QpV9Opk2wD+KoAMHvZzTP7JlvZXyfMA/0y5x01Z82j8iNv3w
S8PAP69f4guX9+I/kgY9TKUJwT9GH2jHGxztP+WzoidxHcE/rKy9MaQq8T/m
lBhs
       "]], 
      LineBox[{{0.19381410929543968`, 1.0729104941372425`}, {
       0.1955872968433291, 0.8147349719808863}, {0.19791476358063376`, 
       0.5957624431067535}, {0.20024223031793842`, 0.46408150543603327`}, {
       0.20256969705524308`, 0.38645063259919593`}, {0.20489716379254774`, 
       0.34310127326940204`}, {0.20722463052985238`, 0.3238481018101045}, {
       0.209552097267157, 0.32449922769721373`}, {0.21187956400446167`, 
       0.3452082345603897}, {0.21420703074176634`, 0.39032057114119295`}, {
       0.216534497479071, 0.4692234539553443}, {0.21886196421637566`, 
       0.5965871416498153}, {0.2211894309536803, 0.784163536983231}, {
       0.22351689769098493`, 1.0017503365596037`}, {0.22490453504404143`, 
       1.0729104941372425`}}], 
      LineBox[{{3.071890736212557, 1.0729104941372425`}, {3.073942685968552, 
       0.4976441673779466}, {3.0760871928593163`, 0.46702943208866926`}, {
       3.0782316997500803`, 0.8013862050341266}, {3.080376206640844, 
       0.7878424640740016}, {3.0825207135316086`, 0.4610089449144718}, {
       3.084665220422373, 0.46903994447046315`}, {3.0868097273131374`, 
       0.8903101668817963}, {3.088954234203902, 0.738105485968212}, {
       3.0910987410946658`, 0.4561260478827745}, {3.0932432479854297`, 
       0.4717116146457628}, {3.095387754876194, 0.9540658460998188}, {
       3.0975322617669585`, 0.6784540688219248}, {3.099676768657723, 
       0.4555253951783257}, {3.1018212755484873`, 0.51735855717467}, {
       3.1034860623641896`, 1.0729104941372425`}}], 
      LineBox[{{3.201804188413469, 1.0729104941372425`}, {3.2030192735466603`,
        0.47692109895387247`}, {3.2053443645879547`, 0.4211066481267345}, {
       3.207669455629249, 0.5863869917383397}, {3.2099945466705435`, 
       0.9867495984815678}, {3.212319637711838, 0.4367468712771722}, {
       3.2146447287531323`, 0.4314424141617033}, {3.2169698197944268`, 
       0.8882933076554727}, {3.219294910835721, 0.598508537264415}, {
       3.2216200018770156`, 0.4233964589060698}, {3.22394509291831, 
       0.513263798647828}, {3.226105810155362, 1.0729104941372425`}}], 
      LineBox[{{3.3574513138894115`, 1.0729104941372425`}, {
       3.3586691997766907`, 0.4409486064502991}, {3.3608400535399436`, 
       1.0061052974896119`}, {3.3630109073031966`, 0.5719223749457191}, {
       3.3651817610664496`, 0.545310533571255}, {3.3673526148297026`, 
       0.880650668967244}, {3.3695234685929556`, 0.44044993402591}, {
       3.370583260193636, 1.0729104941372425`}}], LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAo6gy+WmzDECsrL0xpCrxP9CCLiGB
twxA7k78pGwf2T/EuR2cO7wMQO2YsABeW9g/ufAMF/bADEAgRvyNALzbP64n
/JGwxQxAlnrpOsfn6T+iXusMa8oMQAfdftdO6Ng/lpXahyXPDEC5JtWuR6TY
P4rMyQLg0wxAg/wYKFPf4j9+A7l9mtgMQFspePpzadw/cjqo+FTdDEDUE+fq
kbfYP2Zxl3MP4gxAZzY1SnZc4D9bqIbuyeYMQFj5S6fW7ts/UN91aYTrDEAB
SzYpGSjbP0QWZeQ+8AxALtapl3P+3D84TVRf+fQMQICKD5GDR+g/LIRD2rP5
DEBBY+Yvf9jmPyC7MlVu/gxAXascc5qZ2T8V8iHQKAMNQM1SbnHdD+I/CikR
S+MHDUAzxIimcdXaP/5fAMadDA1A+iMDfSu22D/ylu9AWBENQN/o1Sub5OE/
5s3euxIWDUCGD0a/A/fWP9oEzjbNGg1AlAy/6gBe2D/PO72xhx8NQO2fVNOl
VNk/IHtd+2EgDUCsrL0xpCrxP7Z4v58=
       "]], 
      LineBox[{{3.9031410057040725`, 1.0729104941372425`}, {3.903543298350413,
        0.38478167925302476`}, {3.9058784530015007`, 0.3793803307028092}, {
       3.9082136076525886`, 0.3967081244212761}, {3.9105487623036765`, 
       0.5603632758158935}, {3.9128839169547645`, 0.3822382376477307}, {
       3.9152190716058524`, 0.37895079642778096`}, {3.91755422625694, 
       0.39216236275058847`}, {3.9198893809080273`, 0.8246459472298128}, {
       3.922224535559115, 0.3837585505866094}, {3.924559690210203, 
       0.37895062586601885`}, {3.926894844861291, 0.3879855570219305}, {
       3.927591126884805, 1.0729104941372425`}}], LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA2N5/CWusEECsrL0xpCrxP6I+nDDM
rRBAzhJEBD7M2D/aRKO6/K8QQJfcmGrgmNk/EkuqRC2yEEAAGl4nz4/ZP0pR
sc5dtBBAsN1hKKW32D+CV7hYjrYQQCou8cXp1dg/ul2/4r64EEBgywLLacTp
P/JjxmzvuhBA+SOfv5D42D8qas32H70QQAQjKnadsdg/YnDUgFC/EEB+ffnV
U8HYP5p22wqBwRBAIKKnUpdN2j/SfOKUscMQQJnlxJj+tdk/CoPpHuLFEEDD
Ovx7w77YP0KJ8KgSyBBA78SCNw6z2D96j/cyQ8oQQGlhf1o+3tg/spX+vHPM
EEBQAlNSs5fkP+qbBUekzhBAGy8fGH8U2T8iogzR1NAQQE52MPN8u9g/WqgT
WwXTEECsozm95rvYP5KuGuU11RBAWJ9bz10S2T/KtCFvZtcQQIAv8yNZM+M/
Arso+ZbZEEBakGehWOLYPzrBL4PH2xBAHHiTigq/2D9yxzYN+N0QQM1V0A+S
2Ng/qs09lyjgEECpkv/N+LveP+LTRCFZ4hBAS91edBEb2T8a2kurieQQQNk7
sssRy9g/UuBSNbrmEEBpot2OXfnYP4rmWb/q6BBAYef+7hAB4T/C7GBJG+sQ
QLwr5lkS5dg/+vJn00vtEEAkeAP5pm/ZPzL5bl187xBARS7cgc4v2T9q/3Xn
rPEQQKxLZ6oAt9k/ogV9cd3zEEAIKY/FgCvZP9oLhPsN9hBAqT7J2m9/2T8S
EouFPvgQQOrDVsPJ6Ng/ShiSD2/6EEDElEmQ7zLfP4IemZmf/BBAeQBKoqgE
2T+6JKAj0P4QQCcdaiLw1tg/8iqnrQABEUCYy1NgORbZPyoxrjcxAxFA283C
fN924D9iN7XBYQURQJlQq2k97Ng/mj28S5IHEUB0i7kcdNTYP9JDw9XCCRFA
eI/MeNDt2D8KSspf8wsRQHS1yn3R1d0/QlDR6SMOEUDZrSZ01jHZP3pW2HNU
EBFAdNCxiKXb2D+yXN/9hBIRQEkDnY252dg/6mLmh7UUEUCKLEIsCgvZPxhr
Sc7UFBFArKy9MaQq8T/IlIVb
       "]], 
      LineBox[{{4.751687693223913, 1.0729104941372425`}, {4.751693526655657, 
       0.404042749026028}, {4.753996114781355, 0.40386666468487936`}, {
       4.756298702907052, 0.4043620757607959}, {4.758601291032749, 
       0.4081393540767451}, {4.760903879158446, 0.4041896400120504}, {
       4.763206467284143, 0.4054456683052774}, {4.76550905540984, 
       0.404704165043845}, {4.767811643535538, 0.4060202174483834}, {
       4.770114231661235, 0.40484776180706283`}, {4.772416819786931, 
       0.40557446674432873`}, {4.774719407912629, 0.40460269735563986`}, {
       4.777021996038326, 0.40863715991594135`}, {4.779324584164023, 
       0.4044974124730599}, {4.781627172289721, 0.4047066424110184}, {
       4.783929760415418, 0.4049785348452597}, {4.784431802295855, 
       1.0729104941372425`}}], LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAdoErbHuhwj+srL0xpCrxP8CCxtVo
x8I/A4ns+ZFu6j+U+YgKrRPDPz+yrVNl/OE/Z3BLP/Ffwz8tUc/F7H7aPzrn
DXQ1rMM/VgUBEqHa1D8OXtCoefjDP5Mb/GeSWtE/4tSS3b1ExD+Bc1QSmU7O
P7ZLVRICkcQ/d3TRl2uhyz+KwhdHRt3EP4jyKXs0OMo/XTnae4opxT9hzagL
q9vJPzCwnLDOdcU/0xKUpeR/yj8EJ1/lEsLFP7KmoZ1tQMw/2J0hGlcOxj+D
2Ad2zWjPP6wU5E6bWsY/9WeIKJ9G0j+Ai6aD36bGP9tcXfx9X9Y/UwJpuCPz
xj8Ub2KzxvjcPyZ5K+1nP8c/QcRUgMzn4z/67+0hrIvHP4gA9hFEwOw/WlZg
Ai2txz+srL0xpCrxP/X8m1c=
       "]], LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAZ+ZqEVRCCUCsrL0xpCrxP0xfVT1P
RQlApzl6rHd94D+fO8VBEkoJQAdaSbssENw/8hc1RtVOCUDLQlqj7qjmP0b0
pEqYUwlAa49tC5q45T+a0BRPW1gJQFez1ojKBd0/7qyEUx5dCUBW/tH0Lf3p
P0KJ9FfhYQlAHYqS7pSA4T+WZWRcpGYJQEZQ7Ypdu+U/6kHUYGdrCUASFhAR
biLjPz4eRGUqcAlAr/0bQORz4z+S+rNp7XQJQBTKnER4gOc/5tYjbrB5CUDZ
qDVvLMjgPzqzk3JzfglApLU7HhAI7T+OjwN3NoMJQOIDHUYFwdw/4mtze/mH
CUDDA7pgxafjPzZI43+8jAlAhKw/6pHb6D+KJFOEf5EJQHKqy6e0vNs/3QDD
iEKWCUCMok0Z4sXeP5ncnJa9mAlArKy9MaQq8T9pYpL+
       "]], 
      LineBox[{{3.325225733331561, 1.0729104941372425`}, {3.326106393327895, 
       0.46981384336945586`}, {3.328277247091148, 0.3999141025181501}, {
       3.330448100854401, 0.4430219331558671}, {3.331328810030562, 
       1.0729104941372425`}}], LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAOY4iXQubC0CsrL0xpCrxP063eQPb
nAtAQE1EtzLR3D/cw9DQNqELQF0Jf7jz1dg/atAnnpKlC0B+Lh6Iz+fZP/jc
fmvuqQtAbm91eKVH7z+G6dU4Sq4LQGiWbI7Put8/FPYsBqayC0Dc1BZ3fPfY
P6IChNMBtwtAVgsRhStL2T8wD9ugXbsLQLu555a8I+Q/vhsybrm/C0Dktshj
3XXiP0woiTsVxAtA5zty/IU92T/aNOAIccgLQDmxHVa1eNk/aEE31szMC0DM
h2FJBsHoP/ZNjqMo0QtACP47WPox3z+EWuVwhNULQAi2T0xpVdk/Emc8PuDZ
C0A+jxywMY3fP6Bzkws83gtAgaH9KkRV4j8ugOrYl+ILQP9Q1JH12No/vIxB
pvPmC0ACq4GthBruP0qZmHNP6wtAj6BPkt3c6z/Ype9Aq+8LQKoT2ZZB8N0/
ZrJGDgf0C0A+YOurvevhP/S+ndti+AtApQgTLfL+2j8JD82bJvoLQKysvTGk
KvE/YMu6mg==
       "]], 
      LineBox[{{3.7367445785704803`, 1.0729104941372425`}, {3.737977659496922,
        0.3889651258664042}, {3.7401322299974797`, 0.38446589251284086`}, {
       3.7422868004980376`, 0.7835358294168531}, {3.744441370998595, 
       0.40061817274831313`}, {3.7465959414991525`, 0.4115557535910336}, {
       3.7487505119997104`, 0.43165232051643215`}, {3.7509050825002683`, 
       0.5035306184758109}, {3.753059653000826, 0.43455268360664157`}, {
       3.7552142235013832`, 0.40856062018340433`}, {3.757368794001941, 
       0.4002986226125942}, {3.759523364502499, 0.7181994803834185}, {
       3.761677935003057, 0.3838339830719164}, {3.763832505503615, 
       0.38785363967231895`}, {3.7651207180406776`, 1.0729104941372425`}}], 
      LineBox[{{3.8861988573717596`, 1.0729104941372425`}, {
       3.8871972157927983`, 0.3999066630365457}, {3.889532370443886, 
       0.41138581684279074`}, {3.8918675250949732`, 0.3898629506615563}, {
       3.894202679746061, 0.6213448316819934}, {3.896537834397149, 
       0.381994858455121}, {3.898872989048237, 0.3868967187295321}, {
       3.8992742576802017`, 1.0729104941372425`}}], 
      LineBox[{{5.009640979061284, 1.0729104941372425`}, {5.01143592654749, 
       0.4115708940953244}, {5.013764861545676, 0.4629925815629013}, {
       5.016093796543862, 0.4119220419491909}, {5.0184227315420475`, 
       0.4117270183937555}, {5.020751666540233, 0.4116468880365612}, {
       5.023080601538419, 0.4185288897625157}, {5.025409536536605, 
       0.4118734696730413}, {5.027738471534791, 0.41186223646207365`}, {
       5.030067406532977, 0.41199644882909514`}, {5.030122818843276, 
       1.0729104941372425`}}], 
      LineBox[{{3.104448550922326, 1.0729104941372425`}, {3.106110289330015, 
       0.5218774045059045}, {3.1082547962207796`, 0.49567462882811675`}, {
       3.110399303111544, 1.05783011008661}, {3.112543810002308, 
       0.5289922398032558}, {3.114688316893072, 0.7742247270912251}, {
       3.1168328237838363`, 0.6263364593329072}, {3.1189773306746007`, 
       0.6271635648526374}, {3.121121837565365, 0.7828945469002326}, {
       3.1232663444561295`, 0.5232845509044438}, {3.1253622043549885`, 
       1.0729104941372425`}}], LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAmIy5j3UeDECsrL0xpCrxP/QvrROd
HwxAifQB6q1Q2z+CPATh+CMMQL4QDaX1itg/EElbrlQoDECQKP9f7InZP55V
snuwLAxAn7pCtAR17z8sYglJDDEMQJUJ/bJN8N0/um5gFmg1DEDhV6tRoqrY
P0h7t+PDOQxApaOYNBTu2D/Whw6xHz4MQH2qKGSBWeI/ZJRlfntCDECRxb8m
E83hP/KgvEvXRgxAwDP4nEvy2D+ArRMZM0sMQFKkl/7VANk/Drpq5o5PDED+
tBUc/UPkP5zGwbPqUwxAvKRAApsg3z8q0xiBRlgMQPckayYt/tg/uN9vTqJc
DEDc02VT1JrcP0bsxhv+YAxAPc8IfLUm5D/U+B3pWWUMQADhq7Rg99k/YgV1
trVpDECBlxj0x97ZP/ARzIMRbgxABCU+0dRT5D9+HiNRbXIMQMsbvAHy29w/
DCt6Hsl2DECI6vTuddrnP5o30eskewxAX3gaClXq2T+LmQzFN30MQKysvTGk
KvE/sxyxjA==
       "]], 
      LineBox[{{3.6630917442656687`, 1.0729104941372425`}, {3.663483612861609,
        0.39464572892433236`}, {3.6657924206402077`, 0.37989551703479413`}, {
       3.668101228418807, 0.4291185400797999}, {3.6704100361974064`, 
       0.5580523902561888}, {3.6727188439760052`, 0.38470884630665814`}, {
       3.675027651754604, 0.4081010274831439}, {3.677336459533203, 
       0.5841678677287796}, {3.679645267311802, 0.3939119406757541}, {
       3.6819540750904007`, 0.9149581355726082}, {3.683437873150437, 
       1.0729104941372425`}}], 
      LineBox[{{4.111145262538984, 1.0729104941372425`}, {4.111660970459478, 
       0.3875065735675046}, {4.113953494975382, 0.3837315530003558}, {
       4.116246019491285, 0.38723758894842086`}, {4.1166446576179085`, 
       1.0729104941372425`}}], 
      LineBox[{{3.4356979277622988`, 1.0729104941372425`}, {
       3.4366920448482485`, 0.42546321117045105`}, {3.4388202684763174`, 
       0.40828729720583457`}, {3.4409484921043862`, 0.9674207450843185}, {
       3.443076715732455, 0.47692334144807824`}, {3.445204939360524, 
       0.3917838453396632}, {3.447333162988593, 0.41749519791179424`}, {
       3.448244128324911, 1.0729104941372425`}}], 
      LineBox[{{3.579397438060718, 1.0729104941372425`}, {3.5803665328320444`,
        0.39623575775215103`}, {3.5826753406106437`, 0.3805524029263848}, {
       3.5849841483892426`, 0.4246674963442323}, {3.586968174361198, 
       1.0729104941372425`}}], 
      LineBox[{{3.728517475562507, 1.0729104941372425`}, {3.729359377494691, 
       0.39108385297707016`}, {3.731513947995249, 0.3785762582910816}, {
       3.733668518495807, 0.39966520712265935`}, {3.7348932742551204`, 
       1.0729104941372425`}}], 
      LineBox[{{3.2264179309030263`, 1.0729104941372425`}, {3.228595275000899,
        0.4454922005871198}, {3.2309203660421932`, 0.5367184020175607}, {
       3.2332454570834877`, 0.7243510153658161}, {3.2355705481247816`, 
       0.5004469756016753}, {3.2378956391660756`, 0.639988646791435}, {
       3.24022073020737, 0.707070461266363}, {3.2425458212486644`, 
       0.904084257767234}, {3.244870912289959, 0.4711835863016348}, {
       3.2468841284138854`, 1.0729104941372425`}}], 
      LineBox[{{3.653928203093023, 1.0729104941372425`}, {3.654248381747213, 
       0.3977775093605968}, {3.656557189525812, 0.378173403060055}, {
       3.658865997304411, 0.39840676135164355`}, {3.659256060066583, 
       1.0729104941372425`}}], 
      LineBox[{{3.044018338575287, 1.0729104941372425`}, {3.0460640963886165`,
        0.5256877213943806}, {3.048208603279381, 0.522222782283736}, {
       3.0503531101701453`, 0.9575311690000468}, {3.0524976170609097`, 
       0.5273556566376845}, {3.054642123951674, 0.7517325045906129}, {
       3.056786630842438, 0.5585668702592741}, {3.058931137733202, 
       0.4053553470487358}, {3.0610756446239664`, 0.6964049201950475}, {
       3.063220151514731, 0.5527698924921098}, {3.065364658405495, 
       0.9197467152298192}, {3.0675091652962596`, 0.48844147040256164`}, {
       3.0696536721870236`, 0.5658998210150222}, {3.0716937682248733`, 
       1.0729104941372425`}}], 
      LineBox[{{3.3425487189183376`, 1.0729104941372425`}, {
       3.3434732234339193`, 0.47162214864298185`}, {3.3456440771971723`, 
       0.40194271225519973`}, {3.3478149309604257`, 0.47424660955302955`}, {
       3.3492400357200336`, 1.0729104941372425`}}], 
      LineBox[{{3.2715426069199585`, 1.0729104941372425`}, {
       3.2727720047854914`, 0.4893805381093033}, {3.2750970958267853`, 
       0.4072479428854282}, {3.2774221868680797`, 0.4865526157845383}, {
       3.278754808701626, 1.0729104941372425`}}], 
      LineBox[{{3.405773413636789, 1.0729104941372425`}, {3.4064279825682577`,
        0.43477662463243444`}, {3.408598836331511, 0.39484026713923537`}, {
       3.410769690094764, 0.47865130734067973`}, {3.412940543858017, 
       1.0089158336759891`}, {3.41511139762127, 0.411296877244209}, {
       3.417282251384523, 0.4339813336940611}, {3.4187104775513357`, 
       1.0729104941372425`}}], 
      LineBox[{{3.5055214552933474`, 1.0729104941372425`}, {
       3.5069234245745218`, 0.4378110555375486}, {3.5090516482025906`, 
       0.3862322155363482}, {3.5111798718306595`, 0.41350727243731006`}, {
       3.5117520011590337`, 1.0729104941372425`}}], 
      LineBox[{{3.6445989887954013`, 1.0729104941372425`}, {3.645013150632817,
        0.4001291530988326}, {3.647321958411416, 0.3783506377216023}, {
       3.6496307661900147`, 0.39794506040930966`}, {3.6499508764008697`, 
       1.0729104941372425`}}], 
      LineBox[{{3.9308669497590403`, 1.0729104941372425`}, {3.931565154163467,
        0.3852879579109541}, {3.9339003088145548`, 0.3797119507781282}, {
       3.9362354634656422`, 0.393627797928316}, {3.9385706181167297`, 
       0.5192538316045349}, {3.9409057727678176`, 0.3825700054864043}, {
       3.9432409274189055`, 0.3855686037808901}, {3.9451773141532223`, 
       1.0729104941372425`}}], 
      LineBox[{{3.3339346181661473`, 1.0729104941372425`}, {3.334789808380907,
        0.4731367288770917}, {3.33696066214416, 0.39905066953172624`}, {
       3.339131515907413, 0.43679086234361364`}, {3.3400860273156483`, 
       1.0729104941372425`}}], 
      LineBox[{{3.255286708924707, 1.0729104941372425`}, {3.256496367496431, 
       0.4536228939472935}, {3.2588214585377253`, 0.42234949574560604`}, {
       3.2611465495790197`, 0.7747133787138}, {3.263471640620314, 
       0.6148350465724677}, {3.2657967316616086`, 0.41248670697185724`}, {
       3.268121822702903, 0.44180645441614275`}, {3.2693965019188966`, 
       1.0729104941372425`}}], 
      LineBox[{{3.3506950846262793`, 1.0729104941372425`}, {
       3.3521566384869317`, 0.42738429238719544`}, {3.3543274922501847`, 
       0.4396499512940766}, {3.3555464755169857`, 1.0729104941372425`}}], 
      LineBox[{{3.4201893809255, 1.0729104941372425`}, {3.421623958911029, 
       0.4256032658230994}, {3.4234443875541793`, 1.0729104941372425`}}], 
      LineBox[{{3.499664477274444, 1.0729104941372425`}, {3.500538753690315, 
       0.4056123439841557}, {3.502666977318384, 0.4051265395678384}, {
       3.504092760528792, 1.0729104941372425`}}], 
      LineBox[{{3.397003746291009, 1.0729104941372425`}, {3.3977445675152453`,
        0.431158920224054}, {3.3999154212784983`, 0.39173262718504814`}, {
       3.4020862750417518`, 0.43968044342872037`}, {3.402737322408247, 
       1.0729104941372425`}}], 
      LineBox[{{3.379216234980706, 1.0729104941372425`}, {3.380377737409221, 
       0.4575952399337212}, {3.3825485911724744`, 0.39734778187845027`}, {
       3.3847194449357274`, 0.46271423596003536`}, {3.385653141830759, 
       1.0729104941372425`}}], 
      LineBox[{{3.7668607886780685`, 1.0729104941372425`}, {
       3.7681416465047297`, 0.39749851781887174`}, {3.7702962170052876`, 
       0.37838054254685644`}, {3.7724507875058455`, 0.38823476933276446`}, {
       3.7737343441605176`, 1.0729104941372425`}}], 
      LineBox[{{3.1254569025489403`, 1.0729104941372425`}, {
       3.1275553582376574`, 0.4915844253500958}, {3.129699865128422, 
       0.5089301117414768}, {3.131243682425527, 1.0729104941372425`}}], 
      LineBox[{{3.3727970372424965`, 1.0729104941372425`}, {
       3.3738651761194616`, 0.4306431842363627}, {3.376036029882715, 
       0.42532379612455246`}, {3.377225083069136, 1.0729104941372425`}}], 
      LineBox[{{3.2475058998792754`, 1.0729104941372425`}, {
       3.2495210943725477`, 0.4667470950362559}, {3.251846185413842, 
       0.46225637381339996`}, {3.253047694671978, 1.0729104941372425`}}], 
      LineBox[{{3.388095915177291, 1.0729104941372425`}, {3.3890611524622334`,
        0.4255990127314973}, {3.3912320062254864`, 0.39285789133881405`}, {
       3.3934028599887394`, 0.4531520996173438}, {3.394126758932364, 
       1.0729104941372425`}}]},
     Annotation[#, "Charting`Private`Tag$53959#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7}, {0., 1.0729104941372425`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8231562151639075`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.790392", "^", "2"}]], "Input",
 CellChangeTimes->{{3.823156474910991*^9, 3.823156476521181*^9}}],

Cell[BoxData["3.205503513664`"], "Output",
 CellChangeTimes->{3.8231564773584166`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", 
       RowBox[{"L", "^", "2"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"w", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", "3.205503513664`"}], "+", 
             RowBox[{
              RowBox[{"L", "^", "2"}], "*", "w", " ", 
              RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"L", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"-", 
               RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823156497701068*^9, 3.823156503920923*^9}, {
  3.8231575464496717`*^9, 3.8231575496542735`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAoVirt4gsgz6gg6oRgc14PaT6FoKj
lmE/YZxvUJ3zND9NiwUpfZZxP7EOb9djMlU/SJn/kKhhej9NKFyC0FFoP6LT
fPxploE/2IgdeIQ6dj+g2nmw//uFP/mtiIbgAoI/neF2ZJVhij+g2RPeQiWL
P5rocxgrx44/S5gd3mOGkz/MdzhmYJaRP7tnOqNcPZs/S/s2QCvJkz+9axli
zqCiP8p+NRr2+5U/a1IQ57UtqT9IAjT0wC6YP6DR7Hnl7LA/x4Uyzothmj8U
vdHKgMO2P0YJMahWlJw/grXHYn/Mvj/EjC+CIceeP/VjOsSgFcU/IggXLvZ8
oD+P4ECSkmrNP+FJFptblqE//LQcyosX1T+gixUIwa+iP19WziFbdN8/YM0U
dSbJoz/FX2UW+8zoP3XQk0Qz1aM/5Wb54saN6T8aMJ6h
       "]], LineBox[CompressedData["
1:eJwBAQP+/CFib1JlAgAAAC8AAAACAAAA3DJxWzdTrj/lZvnixo3pP9peDbcc
x64/JDNvFXIS5j+ZoAwkguCvP/OpP3zYzuA/LPGFyPN8sD+OSnMejZ7aPwyS
BX+mCbE/DfPfdSG71T/sMoU1WZaxP9GTjJDDLdI/zNME7Asjsj9H6/AgxQfP
P6x0hKK+r7I/4w58jdbuyj+MFQRZcTyzP5p4Kuobt8c/a7aDDyTJsz+PoLsC
GSXFP0pXA8bWVbQ/knHeiw8Qwz8q+IJ8ieK0PzJ5TLBVW8E/CpkCMzxvtT9/
+WPTk+S/P+o5gunu+7U/SurmRpCLvT/K2gGgoYi2P7dCobkJlbs/qXuBVlQV
tz+nY3sk7O+5P4gcAQ0Horc/OhqkMyyPuD9ovYDDuS64Pz1G3ivCaLc/SF4A
emy7uD+PCKcI83S2Pyj/fzAfSLk/+1QxGM+ttT8IoP/m0dS5P9Al9xjWDrU/
50B/nYRhuj9DK3VjtpS0P8bh/lM37ro/XPRkQyA9tD+mgn4K6nq7P/rCmhCp
BrQ/hiP+wJwHvD+CrOtOu/CzP2bEfXdPlLw/5VbSaZL7sz9GZf0tAiG9Pzrv
7rdBKLQ/JQZ95LStvT871SV8x3i0PwSn/JpnOr4/8neSui3wtD/kR3xRGse+
P0X1jRa8krU/xOj7B81Tvz9HifW+P2a2P6SJe75/4L8/z6KK9HBytz9ClX06
mTbAPwOowFmBwbg/smW9lfJ8wD8ZF6CT42C6PyI2/fBLw8A/TunBsmRivD+S
Bj1MpQnBPxUvt6m73b4/Atd8p/5PwT+3icA/YvnAP3GnvAJYlsE/P0l48lrm
wj9EHn83nOLBPyjIkdSljsU/GJVBbOAuwj8OVLDwlwLJP+wLBKEke8I/j0zm
s9uNzT/AgsbVaMfCPzwrlmQQztE/lPmICq0Twz9RQl0tW+HVP2dwSz/xX8M/
l06Nqmpg2z865w10NazDP4n6fGDHVeE/Dl7QqHn4wz+apcZPOerlPzYd9Fyy
L8Q/5Wb54saN6T8B6Xpu
       "]], LineBox[CompressedData["
1:eJwVl3k8VO0bxocWa2WrZIgKoUilLC3XSRLxkpAWVJJIRMoeJanIFlq0ahHS
hjbyapGdbDPmzJjBjCWpN0vZjd/5/XU+3895rvtZ7us+93OWuJ3YdUSURqP5
itBo/39+U/435nbwV3R5jPHL4nsxc/mBLrnPX+FrFuHyn24XWHeWKDnNLUOO
K5O/eEcHchU6bW7tK0Ol4xnZ5xdacTYu83xbZhmsH1U8HJ5qgb2o17tlQ2XQ
oqcVhWY1QzNkxa+jKMdQ1TqFEeNGjP/+tSQ3rhz30w7IiIXWo87j5e7+lnKk
XvwGlXN1eMA9GWegXoFN0iOjBV01CHRY9zHYrwK+5Yui2qarYVk98ufDhwqs
9tG8nf+hGsqmhdoiEpWocT7csG1+Dfrfhbtuc6zEX7e9njZza1G6CimXMyox
4VnlqvG6DjcyRSpqf1Ui52jwg5KkehxXKZ2UNanCdFbWHhNqfUiNWb07pgqb
pOSUI92bISdl6ZHeWAVHb7Px28ot6D4ndYu3uBocuG+qdGSjcLT221Lvathk
Dv/1YXCRcCJp5tG31dAcqM9dG98Ot+5dxk9n1OAY3cN+e0EH1rnM9/1tW4Pl
vfUOv6T5EG9uebD2dg12SYhZy8R0oHVHekvQ9xp8OfFLOsW5HS8/OUt/MKjF
y5fO9CAuF9FGqlto52ph9D7+15ACB3tedJw2q63F5iv5gaVvWVih+Sjn0qI6
GIpIjsl/Z0J426Ot5kgdXPnVt9/lMNAor60gm1cHE8GBPZljzciM7bNwFNZh
fkXxjvdVzQgVeX7m5o5v0FQP+OUsz4BNsF8e99o3KAg5vIpqBpb8XtOzRPAN
o2eMS5bzmRjPG5+Tv7AeFcnO4neNWHD/b78WY1M9GpIjD2jfJVGnXWw6crge
KllFQ+X1bBgdWeyyKLYeugNtDjKJHDy4Hxm04WU9Dka0taq95kC6tT3ZhVkP
X+9GhtCWg8CFprmRk/WIu1CrbZfGRtuuh2UZSxtwfHfYHctyEhYJMzu+WDRg
9jrWLC86ibzKIxNdvg3Yu8M91L2CBeVZ5fPF0xqwWfnU5fxsFmIILX2dogZ4
vMjtLPnKQn/Y5R3WHQ2wee0ZFDWLxL63P9x9xRqRr+c2R+QfEqWDVpFJuo1w
HYufeeEcCT29Zzfz7Bsh/a4w7lUyiZOEZOU/QY3Q3hBhr5NE4s2uo6Pf0xth
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
       "]]},
     Annotation[#, "Charting`Private`Tag$327366#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7}, {0., 0.7985567505922658}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8231565266509047`*^9, 3.8231570108955193`*^9, 
  3.8231575689439726`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", 
       RowBox[{"L", "^", "2"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"w", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"w", "^", "2"}], "-", "3.205503513664`", "-", 
             RowBox[{
              RowBox[{"L", "^", "2"}], "*", "w", " ", 
              RowBox[{"DawsonF", "[", "w", "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"L", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{"-", 
               RowBox[{"w", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8231565247512474`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8231565510588074`*^9, 3.823156620456006*^9, 
  3.823156756902527*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", 
       RowBox[{"L", "^", "2"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", "25"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", "3.205503513664`"}], "+", 
             RowBox[{
              RowBox[{"L", "^", "2"}], "*", "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "5"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"L", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", "25"}], "]"}]}], ")"}], "^", 
           "2"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8231565639813523`*^9, 3.823156577631298*^9}, {
  3.823157507434106*^9, 3.8231575126543226`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
5ucJ9EN0ILm/lQ3/AdQolZE=
       "]], 
      LineBox[{{0.012464003678766624`, 0.25749601364715335`}, {
       0.012881438377790039`, 0.2746756629367768}, {0.015028320964564568`, 
       0.3808591421685607}, {0.01619985135905591, 0.4467327231613336}}]},
     Annotation[#, "Charting`Private`Tag$320927#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.25749601364715335`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7}, {0.25749601364715335`, 0.4467327231613336}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.823156583830968*^9, 3.823157519543922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", 
       RowBox[{"L", "^", "2"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", "25"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", "3.205503513664`"}], "-", 
             RowBox[{
              RowBox[{"L", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "5"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"L", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", "25"}], "]"}]}], ")"}], "^", 
           "2"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8231566363012905`*^9, 3.8231566365011864`*^9}, {
  3.823156743350269*^9, 3.823156763065428*^9}, {3.8231568273056407`*^9, 
  3.8231568499855013`*^9}, {3.8231574921344023`*^9, 3.823157501383904*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], 
      LineBox[{{0.017484125678833985`, 0.3273042886295523}, {
       0.01932208613811363, 0.3685906706168099}, {0.02146896872488816, 
       0.4087404459668479}, {0.02264645899164772, 0.42569421644383043`}}]},
     Annotation[#, "Charting`Private`Tag$314157#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.3273042886295523},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7}, {0.3273042886295523, 0.42569421644383043`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.823156647010973*^9, 3.8231567753353963`*^9, 
  3.82315684401552*^9, 3.823157509929018*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", 
       RowBox[{"L", "^", "2"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", "100"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"w", "^", "2"}], "-", "3.205503513664`", "+", 
             RowBox[{
              RowBox[{"L", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "10"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"L", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", "100"}], "]"}]}], ")"}], "^", 
           "2"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823157130077569*^9, 3.823157150697294*^9}, {
  3.823157201517718*^9, 3.823157216477255*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0Hk4lHsUB/CxZ1+y1WvJVpYbLVSI83MtaTGS4k7RToRCi0TWXCpKjC0i
iiglS4QpSXfsJWTfvTPekcu1lEnFffvjPOf5PM/5Ps85R+3k+QNuvBQKJYqs
391lJrHoUOpj6E2NvuVe/AVcO6V1GPr58Pa/HBCz/QJK8tLJarYFcMbDWjK7
aBIGnKX4ok88Abk0DSsL00nISJP0nbr6FAKz/g1IGefAkX6JQQd6IaSoGJwN
zeHAWmWJPRXPnkGnQW4z7s+BvqPiFUr1z+HzqddtOfs5kPZATDNipAhGfezX
u+3gwB+zUQ3zwS+gT2eH580NHBBLEAjNEy6G8shEi1VKHJjaEmVESy4GgUtd
px1kOdDSwT8lqlECw97FfWaSHCi8eD3nTVEJ6H90Hf4qyoFYOX6a385SyH7+
8+GwMAe8yiMlNRtLYbq1hj9+FQf2OPMxuw6VwVSg37o3QhzQ5UYE3xgrg0Wq
VIoxaZE03q07z7+EY6Ji2LggByaNIzjTP17CJvXi+TzSTX08D7JjykEmfkk8
kHRBULjTQbkKKGgU3GVEOkaJR1wopwK2fZgqXU3a43VYXaX+K4hrF3OaF+CA
7VHKVe/qV1BmaMXXQVp7JXSTqm0lNEnO6ZWQnkCh96+fqIIj6n6a50gzR5cd
t09XgdJmNLyHdF5EiMjk1WroDt7ZuJ60+/trAfZ0BrjNtdgM8HMA3xXssLb+
DXyreXrRnLTfYwbvX8m18PXdImuIlwNWKqHbM8ZqIc6pqeYpacUkC+8R/XeQ
fs2vOoD02wjmZ4/6dxCyGdMXJy1xtC0/kFsHUbq9Qvo85L9lcWr6YSZsu15Z
v2uFgLBbeZHDeUywVAcbIdKOvJ6vNOaZkL6vd/afZQKWZv5VK7xVDxm0a58Q
6d3NiwsMRgOY+8pW//GLAHa4aPqQSjM0DcyEDC4RUMVt/aju1Qwy8hcW7pC+
fT6e/0xFM2iGGGdYkDZylTs3Y98CUPQ9Muc7Add3qFpQwlths/yRN4e5BKjN
bJlQG/8IFZXTm3O/EqCv/yytxLEdiCDXnkczBPgjkUa7gHagqfRqWZMuP3CG
S9xrh8xGrBmfJsA8QM1Zdawdlt28VdRJU98mycb6doByBH2OPkWAz4GQO25x
nWBaP/jwCIeAwsv2UYr1XVB0qXbu/BgB/8UUlpVOdgHndvvij1ECDNOFcapE
NxzU33simjSjpu7PqEPdsIhpncoYIaBl1Q7K3Hg3zC/76tcMETB1b11QM6UX
jGsPWxF9BOjVzPqGmPTDxn0mMc3tBLgHx7a7u/ZDXcSn1F2kc4w3GNqH9cOk
0x21uk8EKJa5LKoy+8HqZVHWqzYCBAvqr9U6DEDAnpHd9z8QMJJw/ya/5yBQ
LJKH7JoISHbf/ehmyjCkcOyk7GsJ4Ilu89q7NAoqjOTEL88IKKAf2C5QzoZ1
d3QF/UPI+Wv2OaPrvsBfh965b7IjoKblcq7X5Az8ZHrW0WUJ8Hqtw22lzsE/
1ekZmf0ToBhxyGcxdAFidLsaU/MmYDww+XnAyDfQ2f2fnOO5Cdg/TIcbit/B
5cCawXzTCdi64LPgY/0DxA3nJw3EJsBop8ulguxfYD2vzPbpZ0PvrJDN5c8r
kPETSeW+YAPV5/TsPiUe9GWjXC9EseGscYmDrS0vypfP35ThygZnxhBN7Dgf
0hqztTMwZUNnj1xD0B1+pLCSx72qyAb1Qr2h0icCKFw66IfnEgtWFPcdThkU
REWVT1K2DLAgZZDmgYusQs3OTuE1b1lAodmoLGkIo232hD43nwVcHzOT6oMi
yMTMclTwLgtqjVcvW/mJIrXMheOWwSywdu1y3BEjhthnfmbt8mQBbe0jye5y
cSQfUn99jRMLzG/vv2D+SQIlWa9T9bZmQW9rZGY+jxQ6R51uuGvIAj+KUws7
RQqtdnBb1tZigf9tBaqwpjT6/FEBXimwwMRzKIKHIY1q7yu7yYqwwCuLLjq0
Wwa5CuZraC/jEBhu4TrTKYMmZF0O683jYP9i/kSX12pk5B3XwZ3AIc4kqSqb
uxrF9JQFbxjCIVF6J/PPu7JI/QjXTKsTB16rdq0GVTl0RVlgktaMA1X9GDXi
qRzSfvEpyKgOh5N2szoylvJosl9WYaQKh6EOf9rfbfLoQ96V/TGlOKg//m7a
5qmA6A/cpvkKcbBcHzBBpSiihFZIEcvFoZWCs4tjFZH1RlllViYOqtpOaZOa
a1CuVLZzQioOvU8qsoRK16CXxXr07wk4+PVKnqeZr0URH5421cbh0HbQZzbs
81okkEfPPx6DQ6peVX3sSQxZzQVJpEfi0MO5SOd1w5CcHm71N2nFfIMTV85g
SCOpLtSPdJpm7tIpbwzR+MZ5bUnfU47faHoZQ0djw82/RuCQLumeyLmBoeh2
7Zv7SWfOSx+zKcZQj2DCWZFw8t7iFj1GKYYcj4Zu/BaGg4pvNHdzOYae4YyF
UdJZUz/vKldjiKdSI76S9APWxPuF9xgyMwxd8iCd3f1a92EPhkxOnc5oCMVh
LOnKomI/hgw8mA/LSKsf3Pr+9iCGrpa7FT0gndOW73p1DEOZkc4dV367MTHe
YQpDytYTdjq/89FU1/ppDFkuygTI/c7bCOuazZL75vo/4iH98F1InfY3DG2i
NYr2heCAhxnHZ3IxdEryjTWTtCYsuMj+wNCA5lhkCenTv57r3PyFob0XDJmZ
pB9Ve35bWcEQo7NU7Bbp/wFd8Baj
       "]], 
      LineBox[{{0.0086439676705543, 0.5130496073478749}, {0.01073455579101551,
        0.7849964274270964}, {0.01129916646515449, 0.8654053425969109}}]},
     Annotation[#, "Charting`Private`Tag$272969#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5130496073478749},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7}, {0.5130496073478749, 0.8654053425969109}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.823157156217521*^9, {3.8231572074074435`*^9, 3.8231572252975245`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"s", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"w", "^", "2"}], "-", "3.205503513664`", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "s"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{"w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"s", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8231572995872335`*^9, 3.8231573370575137`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{{0.5608291244729872, 0.6119082045670476}, {
       0.5618035417321324, 0.9468482225279106}, {0.5630373439882183, 
       0.6119082045670476}}], LineBox[CompressedData["
1:eJwd13lYTN8bAPD2TevMNHdaFaVFklBRnDfakRCJLEWlvSipbxFFJCppEYVK
G60qtKEiUrQgoiTUnWkh2tffub+/5vk8957zvPe857znHWUnn53OPFxcXLnc
XFzUr44673+7Xo2iqCr2pTqL34h2NzRAsAk7hPnjtulvtOjZvVCCNYbEzp45
/VrgN5qfG7uiXzSG/mTOKj6IGUZd3DNXnzwZQ0vziz6HXxxGVfxcsYZ1Y0h5
LEn56NlhFCwmcg19HEPnx7w2bzwxjCbkFRPNZ8eQ3Vu29l67YfTH0CzNzmIc
fdVvW6agPIx+BCUWBPaMoyO/5K49qRhCp050jtqxx9HZipW686VDSNxL0dDg
7zgSoF0PtSwcQusPZzVM8k6g3qCW6X8ZQyjWrLwnSG0C7fqp25x0ZQhtpH+k
hXhPIDf5DcUMpyGU8kA6MGx2AnEfbfpSLDGEdLLsqw/zT6LqLa3mNSJD6OXt
VF5j8UmUM2AQ2sI/hEauqcZyK02ic2hBTWB2EFkErc09t3kStQTVPC4jB9GY
6e4vEVGTyMU/L39x3SCy+XYdXWJNoZY36oK//xtEmZuPtRkpTyHH8VsvqwIH
0US2ofMfjSl0XFLLNObEIErz7Y2yM5xC3rUurps8BtEgt85H1YP4eevK5J59
g+iSyhvP2owpdMtt/emJ9YOo1o07ZUZ7GhntWWLsOj+AmG/faxXqT6PJ47x3
nk8PIDfdnKdOMI2Sfu4WUpoYQJIz1r9e75hGcXVbesjfA+hg9C2dZP9pdDax
XS7v+wCaLtBvWFMxjartKy37Xgyg1aNeo16mM+hU1GliadwAss336+22nkF7
vG78KrwygPxdAlq2751BRlfCqyBqAJV+CnmwymMGddJFvL3DB9Ca6stHx2Jn
kM71lE1TAdgXct+HfJ1BNnbpvQ37sVm/Si+fmEWZEXprVTTx/K1k+mzILCpi
iparqeH5owZjvS7MoqnF9je0VfD8s/88t9+YRc1bEvzNFPH47zyq9KezSE30
3UwqDTtPKSFFZA593xG2h5zhoLVGDgG5d+eQenTVnzctHCQ6kJZzKm8OlYUU
Xjv0loN6b3z/Yv5wDuXaLRSOveGg2AmXTX31c2iXmpaNRgMHcUr8JJaScyio
bPxdfjUHpWlE5t7SnkcH6cOqGvc5SJAo6YqpnEeXKm63v4/koO4Xo5KH6ucR
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
q7EzK93GFxbk4E+/59rn2P8D4r4GxA==
       "]], 
      LineBox[{{0.6346857411637411, 0.9776323026288918}, {0.6357614129196302, 
       0.7372185913566346}, {0.6380725963942395, 0.8776641642475203}, {
       0.6385605210507934, 0.9776323026288918}}], 
      LineBox[{{0.6508570281726244, 0.9776323026288918}, {0.6519396972418954, 
       0.8435605387777728}, {0.6542508807165046, 0.94022331435536}, {
       0.6546606636595182, 0.9776323026288918}}], 
      LineBox[{{0.6118586646441679, 0.9776323026288918}, {0.6126495781735372, 
       0.8864417568657023}, {0.6149607616481465, 0.899355973207756}, {
       0.6172719451227557, 0.9331493046582512}, {0.619583128597365, 
       0.9527939834422801}, {0.6199951878025862, 0.9776323026288918}}], 
      LineBox[{{0.6422533473177976, 0.9776323026288918}, {0.6426949633434581, 
       0.8893932474368446}, {0.6450061468180674, 0.7839482437578961}, {
       0.6463136071535996, 0.9776323026288918}}], 
      LineBox[{{0.5530241604748601, 0.9776323026288918}, {0.5532811444358157, 
       0.6549227838167583}, {0.553603129570216, 0.6119082045670476}}], 
      LineBox[{{0.6587661376114514, 0.9776323026288918}, {0.6588732476657232, 
       0.9691970153326883}, {0.6611844311403325, 0.9233430712876366}, {
       0.662222523215217, 0.9776323026288918}}], 
      LineBox[{{0.6657034496743709, 0.9776323026288918}, {0.6658067980895511, 
       0.9745157490521614}, {0.666215145162027, 0.9776323026288918}}], 
      LineBox[{{0.6278013624209542, 0.9776323026288918}, {0.6288278624958022, 
       0.7296727662738575}, {0.6309924990773859, 0.9776323026288918}}], 
      LineBox[{{0.5679605770983085, 0.6119082045670476}, {0.5687370921559604, 
       0.8171076496989169}, {0.5705812501087234, 0.6119082045670476}}], 
      LineBox[{{0.49961270820741516`, 0.6119082045670476}, {
       0.5000161613338361, 0.7349692667399613}, {0.5004178318412206, 
       0.6119082045670476}}], 
      LineBox[{{0.6228819706772091, 0.9776323026288918}, {0.6242054955465837, 
       0.8242266999581292}, {0.6249700511914179, 0.9776323026288918}}], 
      LineBox[{{0.6688122745243584, 0.9776323026288918}, {0.6704291650387697, 
       0.9438114576778749}, {0.6715824867690935, 0.9776323026288918}}], 
      LineBox[{{0.6084392271757422, 0.6119082045670476}, {0.6097230743552697, 
       0.9776323026288918}}], 
      LineBox[{{0.5363189859679557, 0.6119082045670476}, {0.5363843440334284, 
       0.9776323026288918}}], 
      LineBox[{{0.5212530956482226, 0.9776323026288918}, {0.5212824343245107, 
       0.6119082045670476}}], 
      LineBox[{{0.5850599588089048, 0.6119082045670476}, {0.585285245551544, 
       0.9776323026288918}}], 
      LineBox[{{0.5493140049297328, 0.6119082045670476}, {0.5495610748073821, 
       0.9776323026288918}}], 
      LineBox[{{0.5758723974992719, 0.6119082045670476}, {0.5761020220339121, 
       0.9776323026288918}}], 
      LineBox[{{0.4570209284583831, 0.9776323026288918}, {0.457174018367977, 
       0.6119082045670476}}], 
      LineBox[{{0.5942470925325015, 0.6119082045670476}, {0.5945621063199628, 
       0.9776323026288918}}], 
      LineBox[{{0.5591263225006852, 0.9776323026288918}, {0.5593882814326018, 
       0.6119082045670476}}], 
      LineBox[{{0.6017674448894276, 0.6119082045670476}, {0.6028832230573871, 
       0.9776323026288918}}], 
      LineBox[{{0.5403502511959342, 0.9776323026288918}, {0.540415632235068, 
       0.6119082045670476}}], 
      LineBox[{{0.4533735781744394, 0.6119082045670476}, {0.4535266321979647, 
       0.9776323026288918}}], 
      LineBox[{{0.5555943730783184, 0.6119082045670476}, {0.5558708114233295, 
       0.9776323026288918}}], 
      LineBox[{{0.6061365354219035, 0.9776323026288918}, {0.6075678648446796, 
       0.6119082045670476}}], 
      LineBox[{{0.5892231956790361, 0.9776323026288918}, {0.5894549023818216, 
       0.6119082045670476}}], 
      LineBox[{{0.5171015319430793, 0.6119082045670476}, {0.5171308586114725, 
       0.9776323026288918}}], 
      LineBox[{{0.579931373187888, 0.9776323026288918}, {0.5801695170839583, 
       0.6119082045670476}}], 
      LineBox[{{0.5983714780869543, 0.9776323026288918}, {0.5986850063408006, 
       0.6119082045670476}}]},
     Annotation[#, "Charting`Private`Tag$278700#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.6119082045670476},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7}, {0.6119082045670476, 0.9776323026288918}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8231573730441856`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"s", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"w", "^", "2"}], "-", "3.205503513664`", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "s"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{"w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"s", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.823157401124098*^9, 3.8231574013444633`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], 
      LineBox[{{0.811344361421837, 0.7854915953731709}, {0.8132527015423919, 
       0.7764425583600953}, {0.8154096477389599, 0.7734716079151117}, {
       0.8175665939355279, 0.7817058342307716}, {0.8187214372756205, 
       0.7854915953731709}}], 
      LineBox[{{0.7845546077061433, 0.7854915953731709}, {0.7852124009870081, 
       0.7815804127916663}, {0.787369347183576, 0.7782522096178973}, {
       0.7895262933801439, 0.7814810423510941}, {0.7916832395767119, 
       0.7815626787291695}, {0.79384018577328, 0.7815855992078558}, {
       0.795997131969848, 0.7804538997690021}, {0.798154078166416, 
       0.7802162223137378}, {0.800311024362984, 0.7844615694310073}, {
       0.8024679705595519, 0.7826718393349713}, {0.8046249167561199, 
       0.7756060856259084}, {0.806781862952688, 0.7784913706093519}, {
       0.808398039810611, 0.7854915953731709}}], 
      LineBox[{{0.821659135583205, 0.7854915953731709}, {0.821880486328664, 
       0.7851159233693912}, {0.824037432525232, 0.7770879359057964}, {
       0.8261943787217999, 0.7754614807220818}, {0.8283513249183678, 
       0.7809811170931802}, {0.8304394688723519, 0.7854915953731709}}], 
      LineBox[{{0.7802948433049068, 0.7700831636628485}, {0.780898508593872, 
       0.7773571506950264}, {0.7819276775093945, 0.7854915953731709}}], 
      LineBox[{{0.7549134640699131, 0.7854915953731709}, {0.7550151542350558, 
       0.7756847525366942}, {0.7551106827611535, 0.7700831636628485}}], 
      LineBox[{{0.7763906599500529, 0.7854915953731709}, {0.7765846162007359, 
       0.7804761883150557}, {0.7773547125657126, 0.7700831636628485}}], 
      LineBox[{{0.6377461440235781, 0.7854915953731709}, {0.6377559190514894, 
       0.7700831636628485}}], 
      LineBox[{{0.582275379393046, 0.7854915953731709}, {0.582282856225127, 
       0.7700831636628485}}], 
      LineBox[{{0.7278673107422017, 0.7700831636628485}, {0.7279595993953627, 
       0.7854915953731709}}], 
      LineBox[{{0.6545042861228039, 0.7700831636628485}, {0.654513665432871, 
       0.7854915953731709}}], 
      LineBox[{{0.7192696865737536, 0.7700831636628485}, {0.719372867052235, 
       0.7854915953731709}}], 
      LineBox[{{0.6469675763673219, 0.7854915953731709}, {0.6469824632350606, 
       0.7700831636628485}}], 
      LineBox[{{0.6832272692944819, 0.7854915953731709}, {0.6832682793480072, 
       0.7700831636628485}}], 
      LineBox[{{0.6273967880932472, 0.7700831636628485}, {0.627431738567052, 
       0.7854915953731709}}], 
      LineBox[{{0.7714299895169359, 0.7700831636628485}, {0.7718245225257612, 
       0.7854915953731709}}], 
      LineBox[{{0.5533121975850062, 0.7700831636628485}, {0.553312890721928, 
       0.7854915953731709}}], 
      LineBox[{{0.702494482914538, 0.7854915953731709}, {0.7025577198919832, 
       0.7700831636628485}}], 
      LineBox[{{0.7495009702168877, 0.7700831636628485}, {0.7496449351772524, 
       0.7854915953731709}}], 
      LineBox[{{0.6784163332773939, 0.7700831636628485}, {0.6784545610548253, 
       0.7854915953731709}}], 
      LineBox[{{0.7326431861049827, 0.7854915953731709}, {0.7327350227366182, 
       0.7700831636628485}}], 
      LineBox[{{0.6228781121104959, 0.7700831636628485}, {0.6229212286711618, 
       0.7854915953731709}}], 
      LineBox[{{0.7663293159633332, 0.7854915953731709}, {0.7666605297755861, 
       0.7700831636628485}}], 
      LineBox[{{0.7232943372872515, 0.7854915953731709}, {0.7234078464420924, 
       0.7700831636628485}}], 
      LineBox[{{0.7063236669597894, 0.7700831636628485}, {0.7064168860586855, 
       0.7854915953731709}}], 
      LineBox[{{0.6586711632834688, 0.7854915953731709}, {0.6586808205312433, 
       0.7700831636628485}}], 
      LineBox[{{0.6937508418629089, 0.7854915953731709}, {0.6938367577052191, 
       0.7700831636628485}}], 
      LineBox[{{0.7383183929852015, 0.7700831636628485}, {0.7384194837262119, 
       0.7854915953731709}}], 
      LineBox[{{0.6663891282700508, 0.7700831636628485}, {0.666410053005602, 
       0.7854915953731709}}], 
      LineBox[{{0.6300400862446489, 0.7854915953731709}, {0.6300704329735511, 
       0.7700831636628485}}], 
      LineBox[{{0.5575107211128205, 0.7854915953731709}, {0.5575114142907969, 
       0.7700831636628485}}], 
      LineBox[{{0.6431656214042798, 0.7700831636628485}, {0.6431794854081251, 
       0.7854915953731709}}], 
      LineBox[{{0.6254355076957548, 0.7854915953731709}, {0.6254768027680366, 
       0.7700831636628485}}], 
      LineBox[{{0.6989781419549059, 0.7700831636628485}, {0.6990235671239415, 
       0.7854915953731709}}], 
      LineBox[{{0.5783006823108676, 0.7700831636628485}, {0.5783081684634891, 
       0.7854915953731709}}], 
      LineBox[{{0.7607985663827398, 0.7700831636628485}, {0.7610315255230458, 
       0.7854915953731709}}], 
      LineBox[{{0.6895264362309786, 0.7700831636628485}, {0.6895564470129514, 
       0.7854915953731709}}], 
      LineBox[{{0.7435215334707231, 0.7854915953731709}, {0.7436341590844858, 
       0.7700831636628485}}], 
      LineBox[{{0.6706064119778011, 0.7854915953731709}, {0.6706732435105169, 
       0.7700831636628485}}], 
      LineBox[{{0.6337954313252163, 0.7700831636628485}, {0.6338050665550367, 
       0.7854915953731709}}], 
      LineBox[{{0.7092155911677459, 0.7854915953731709}, {0.7093855772064959, 
       0.7700831636628485}}]},
     Annotation[#, "Charting`Private`Tag$303011#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.7700831636628485},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 7}, {0.7700831636628485, 0.7854915953731709}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.823157421903937*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.823242959630056*^9, 3.8232429599269705`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Coth", "[", 
   RowBox[{"1.790392", "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", "0.4"}], ")"}]}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"1.790392", "*", "2"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8231574464943533`*^9, 3.8231574569340963`*^9}, {
   3.8232425470302196`*^9, 3.823242551967368*^9}, {3.823242655842779*^9, 
   3.8232426889029217`*^9}, {3.823242722230204*^9, 3.8232427227457924`*^9}, 
   3.823242827431922*^9}],

Cell[BoxData["0.2856972320333443`"], "Output",
 CellChangeTimes->{3.8232426908402405`*^9, 3.8232427232144537`*^9, 
  3.8232428349469495`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Coth", "[", 
   RowBox[{"1.790392", "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", "0.6"}], ")"}]}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"1.790392", "*", "2"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8232428422433662`*^9, 3.823242842680793*^9}}],

Cell[BoxData["0.3090309546550642`"], "Output",
 CellChangeTimes->{3.823242843727573*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Coth", "[", 
   RowBox[{"1.790392", "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", "0.8"}], ")"}]}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"1.790392", "*", "2"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8232428521645327`*^9, 3.8232428524613857`*^9}}],

Cell[BoxData["0.3459636474789903`"], "Output",
 CellChangeTimes->{3.82324287472536*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Coth", "[", 
   RowBox[{"1.790392", "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", "1.0"}], ")"}]}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"1.790392", "*", "2"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8232428577735043`*^9, 3.823242860320197*^9}}],

Cell[BoxData["0.39115931428414014`"], "Output",
 CellChangeTimes->{3.8232428762565007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Coth", "[", 
   RowBox[{"1.790392", "/", 
    RowBox[{"(", 
     RowBox[{"2", "*", "1.2"}], ")"}]}], "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"1.790392", "*", "2"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.823242867460315*^9, 3.8232428688664656`*^9}}],

Cell[BoxData["0.44135352783958515`"], "Output",
 CellChangeTimes->{3.823242877318925*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.823400311636188*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"l", "=", "2.0"}], ";", " ", 
   RowBox[{"a", "=", "2"}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.8234003497933474`*^9, 3.823400372648262*^9}, {
   3.8234004847374787`*^9, 3.823400484985064*^9}, {3.823400527009467*^9, 
   3.8234005524877176`*^9}, 3.823400582987433*^9, {3.8234006206628957`*^9, 
   3.823400804497207*^9}, {3.8242431480188313`*^9, 3.8242431497531033`*^9}, {
   3.824243189301688*^9, 3.8242431980822678`*^9}, {3.824243272686482*^9, 
   3.824243297858121*^9}, {3.824243351198142*^9, 3.82424335202621*^9}, {
   3.8242434019445553`*^9, 3.8242434609716578`*^9}, {3.824243859516096*^9, 
   3.824243860359848*^9}, {3.824243921558637*^9, 3.824244006084032*^9}, {
   3.824244151231595*^9, 3.8242441513565903`*^9}, {3.8242441876508617`*^9, 
   3.8242441888227158`*^9}, 3.824244256444337*^9, {3.8242442866610355`*^9, 
   3.8242442892701735`*^9}, {3.8242443497191277`*^9, 3.82424436992084*^9}, {
   3.8242444391413736`*^9, 3.824244443969103*^9}, {3.824244560337529*^9, 
   3.8242445623686366`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"l", "^", "2"}], "*", 
     RowBox[{"Coth", "[", 
      RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"w", "^", "2"}]}], "/", 
        RowBox[{"s", "^", "2"}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"w", "^", "2"}]}], "-", 
           RowBox[{"2", "*", 
            RowBox[{"a", "^", "2"}]}], "+", 
           RowBox[{"s", "/", 
            RowBox[{"Sqrt", "[", "Pi", "]"}]}], "-", 
           RowBox[{
            RowBox[{"l", "^", "2"}], "*", 
            RowBox[{"(", 
             RowBox[{"2", "/", 
              RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
            RowBox[{"DawsonF", "[", 
             RowBox[{"w", "/", "s"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"l", "^", "2"}], "*", "w", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"w", "^", "2"}]}], "/", 
             RowBox[{"s", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
       ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"w", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], "/",
   "Pi"}]], "Input",
 CellChangeTimes->{{3.8234003276990595`*^9, 3.823400347756704*^9}, {
  3.823400467116417*^9, 3.823400476806774*^9}, {3.8234005091690335`*^9, 
  3.823400511676296*^9}, {3.824243156174528*^9, 3.824243258484293*^9}, {
  3.8242433280747595`*^9, 3.824243337449105*^9}, {3.8242438410643215`*^9, 
  3.8242438690936112`*^9}, {3.824243915059086*^9, 3.824243916902771*^9}}],

Cell[BoxData["0.3796066287101925`"], "Output",
 CellChangeTimes->{{3.823400356507701*^9, 3.8234003747539115`*^9}, {
   3.8234004781793833`*^9, 3.8234005857106094`*^9}, {3.823400623517585*^9, 
   3.8234008065184093`*^9}, 3.8242432167684555`*^9, {3.824243259593588*^9, 
   3.824243300014163*^9}, {3.8242433863675175`*^9, 3.8242434631902523`*^9}, {
   3.8242438425954094`*^9, 3.8242438635626907`*^9}, {3.824243917558911*^9, 
   3.824243988788307*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"l", "^", "2"}], "*", 
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"b", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", 
              RowBox[{"a", "^", "2"}]}], "-", 
             RowBox[{
              RowBox[{"l", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "b"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"l", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8242440144911027`*^9, 3.824244062550297*^9}, {
   3.8242440981727643`*^9, 3.8242440998757544`*^9}, {3.824244226930837*^9, 
   3.824244229133748*^9}, {3.824244302050525*^9, 3.824244317393263*^9}, {
   3.8242444279077826`*^9, 3.8242444335167665`*^9}, 3.824244480997761*^9, {
   3.824244529010089*^9, 3.8242445948819313`*^9}, {3.8242446384726906`*^9, 
   3.8242446947655735`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"w\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"w\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"2.3033953946715178`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.0272800630588192`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.00031719988330546436`\\\"}]\\) for the integral and \
error estimates.\"",2,62,20,23107946602254612018,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8242446670019045`*^9, 3.824244695890509*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0n001GkUB/DJkmQKNQ2mQeNX3jqVVkQT96alrEXlJZXWy2bb6rQi7Z7V
mzWU9RomMWmipvfYklKbkLcsseJpDsvK21pDOkM7BhX77B/33PP563vvuVcQ
FrEjXIPFYm2n9X9vH/Nay2IpQVVNJo+NEqhb+Guqt64Stj/y0o6ifrBSfziP
q4RhvZ3h+6jzt0a6jwiUwHOL9gqgTgtvveK0SgliX/f8LdTH4+xmzzoq4chY
Qb8D9XeXxXvkm5XASm4cWE0dUKYqXe6jBE3Pr30F1Js7AjhHdyuh6COvXZu6
qDJY/XeJEsyF2c8L3hJISI981nhgDBRdO8qrRgh8vuq8x4W2cXik8WPc/GEC
gtDw+7oDKgjRbn0VPEjgabrmovjKSdgXaH9bu5+AbMFcO2naB3CbOd3d9oaA
efy5q+dzZ0Bs5aw40kXg+nT0ma2PWfil3lp1UAfNWzPYt85VA/det7YxlRNg
pySajdd8hu3V3CatNgKK8MzA+6u0MMrC2GN9CwH9shCnNyVzcUPmkq9cmwik
pmdz9cznoay8aq64gUBx0qc2vUQdrHMSzmjV03k1rJ1Os3VxPKGww6+WwODE
U4nyBza68BenDVQRUO1fLGuZXYC3vXuLfCsJ3GXlpf78sx5OxX7r2feMQJBu
nZMkWh9/qr3af+cpgUS/fNad9QbYPNLrv/MJgeCgotqyUQN8n/Hq1oZSAnuu
SLu1HixCXkJ4/ZyHBFaeuLG/NHoxZpU4v+4vJnCNM/DugDUH5c6zCZP3CLiN
aDT4jnKwz6isfbyIwLlY/6susiX40NNgqUkhvc+tyrcZO7l4zXNPT9AdAuP6
C5P4PEOs6P+nR3SLQK9D+oqbfxiiSbTFCfkNuo9knHNIbITTw/YPDa4T+Cvz
++hsf2NsM7t0PFRGIMLDtLVKh4fNj2yG2q8QsHS5J7Jo4mFTeoDHhgICSWPH
7JJFS/GkpNrr+WUClY5+voEOfPQ5PE4CpQT45ZwXQZN8jIyvPtOZR4DR0HEK
KzRB2w7uzdiLBHzi38xII03x1YTlJwMJAYtaRVWXlRna+cVxa3IItOSy1XFd
ZhhTv/xA/AUC2+SJcM9nGbbed1atzSawEK7FXb69DBdNWF78JCbQXVccYbNA
gIaaaSGlWQRycl6KFYcFuLE55vWpTAI3PVhO1vUCFComVaEZBBqMV5zVtDHH
yjUx/HXnCLj+/o1fSII5Gpu+K16WTv+zqmiXstscZcc7TxulETDqHJ7HRwY3
53ovZ6US6GvF9fUSBmdspS6sFAJSK0/u3jwG2THO5EMygV2n/FVjlxh8bLPl
oJq6xfrgg6UFDMrO5l54R10em7Um4gaDDhmO6i7qi6sHLbklDNaodzQ8ofZL
Sjba18Rgo0tmxVFq/Z7z6slmmvc+NCyCutE+X57awmCoUKJ1iNq1t0Rc2sZg
hfsXXmHUto7d+rp/Mhj224nebdTsQVud4kEG50VFmaymrhcKh9yHGJSKauqs
qUUZbi86FQym4KkjK6inN+5O0BplUE9kVcunHsoSzdn1nsGXuQFHdallitSe
0X8Z5BwbMNOmDoacirgJBu1/6XipQS0fvnvy7hSDBsyU5XQSgUwsDdr0gcGt
KYxcRe2d/Vwo/8jgXlVJ/Bj1/LeNvEMzDBpuK7Qbpa7dJJ+anWXQJY3dP0T9
HzuyfF0=
       "]]},
     Annotation[#, "Charting`Private`Tag$213256#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0.32097837612875313`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 10}, {0.32097837612875313`, 0.3269934587470396}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8242440772523317`*^9, 3.8242441192337723`*^9, 3.8242441688084297`*^9, {
   3.824244209963237*^9, 3.824244239539275*^9}, {3.824244270552729*^9, 
   3.8242443269550314`*^9}, 3.8242443589528155`*^9, 3.8242443929101768`*^9, 
   3.824244453140332*^9, 3.8242444891065674`*^9, {3.824244555040965*^9, 
   3.824244567508862*^9}, 3.8242446078810415`*^9, {3.8242446520029545`*^9, 
   3.8242446981716013`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"b", "=", "5"}], ";"}]], "Input",
 CellChangeTimes->{{3.824244729310049*^9, 3.824244733405076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"l", "^", "2"}], "*", 
       RowBox[{"Coth", "[", 
        RowBox[{"w", "/", "2"}], "]"}], "*", "w", " ", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"w", "^", "2"}]}], "/", 
          RowBox[{"b", "^", "2"}]}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"w", "^", "2"}]}], "-", 
             RowBox[{"2", "*", 
              RowBox[{"a", "^", "2"}]}], "+", 
             RowBox[{"l", "^", 
              RowBox[{"(", 
               RowBox[{"b", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}]}], "-", 
             RowBox[{
              RowBox[{"l", "^", "2"}], "*", 
              RowBox[{"(", 
               RowBox[{"2", "/", 
                RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "w", " ", 
              RowBox[{"DawsonF", "[", 
               RowBox[{"w", "/", "b"}], "]"}]}]}], ")"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", " ", 
            RowBox[{
             RowBox[{"l", "^", "2"}], "*", "w", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"w", "^", "2"}]}], "/", 
               RowBox[{"b", "^", "2"}]}], "]"}]}], ")"}], "^", "2"}]}], 
         ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "/", "Pi"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8242447440762043`*^9, 3.8242447840421*^9}, {
  3.8242448283203144`*^9, 3.8242448387570815`*^9}, {3.82424488467575*^9, 
  3.8242448995653286`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","slwcon",
   "\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"",2,67,21,23107946602254612018,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.824244900362091*^9}],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"w\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"w\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"1.9942913832430857`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.4334102347544266`*^-6\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.1644350784567638`*^-6\\\"}]\\) for the integral and error estimates.\"",2,
   67,22,23107946602254612018,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.824244900424588*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$253714#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2}, {0., 0.9764993697808858}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8242447565127773`*^9, 3.8242447942288857`*^9, 
  3.8242448499124966`*^9, 3.824244910252045*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["The Bath Functions: Non-Ohmic", "Subsection",
 CellChangeTimes->{{3.8217517678010235`*^9, 3.821751768646145*^9}, {
  3.821751953180216*^9, 3.8217519603164215`*^9}, {3.825060882962515*^9, 
  3.825060894245858*^9}, {3.8250609807732153`*^9, 3.825060981585663*^9}}],

Cell["The bath spectral function for a non-ohmic bath", "Text",
 CellChangeTimes->{{3.8217519734679155`*^9, 3.8217519816613307`*^9}, {
  3.825061005943364*^9, 3.825061015364523*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "[", "w_", "]"}], ":=", 
  RowBox[{
   RowBox[{"w", "^", "b"}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"w", "/", "s"}], ")"}], "^", "2"}]}], "]"}], " "}]}]], "Input",
 CellChangeTimes->{{3.8217519655963297`*^9, 3.8217520197930503`*^9}, {
  3.8250609962096567`*^9, 3.8250609988656564`*^9}, {3.8250612082981415`*^9, 
  3.825061208626244*^9}}],

Cell["\<\


The Imaginary part of \\Sigma^R is given by,\
\>", "Text",
 CellChangeTimes->{{3.8250610199267726`*^9, 3.82506105983374*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ImSigma", "[", "w_", "]"}], "=", 
  RowBox[{"-", 
   RowBox[{"J", "[", "w", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8217522299389095`*^9, 3.8217522587548575`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["w", "2"], 
      SuperscriptBox["s", "2"]]}]]}], " ", 
  SuperscriptBox["w", "b"]}]], "Output",
 CellChangeTimes->{3.821752259671894*^9, 3.82183968374121*^9, 
  3.821929505207243*^9, 3.821964861035446*^9, 3.822452485082708*^9, 
  3.8230374805364113`*^9, 3.8231556075229917`*^9, 3.825061062083519*^9, 
  3.8250612116591363`*^9}]
}, Open  ]],

Cell["The Real Part is obtained using Kramers-Cronigg Relations", "Text",
 CellChangeTimes->{{3.8250610903669662`*^9, 3.8250611147716103`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "Pi"}], ")"}], "*", "a", " ", "*", 
    RowBox[{
     RowBox[{"ImSigma", "[", "a", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "^", "2"}], "-", 
       RowBox[{"w", "^", "2"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "\[Infinity]"}], "}"}], ",", " ", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821753749189503*^9, 3.821753753198762*^9}, {
  3.821755306375981*^9, 3.821755312546644*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["w", "2"], 
         SuperscriptBox["s", "2"]]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", 
         SuperscriptBox["s", "2"]], ")"}], 
       RowBox[{
        RowBox[{"-", "b"}], "/", "2"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", 
         SuperscriptBox["w", "2"]], ")"}], 
       RowBox[{
        RowBox[{"-", "b"}], "/", "2"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Pi]"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", 
            SuperscriptBox["s", "2"]], ")"}], 
          RowBox[{"b", "/", "2"}]], " ", 
         RowBox[{"Cot", "[", 
          FractionBox[
           RowBox[{"b", " ", "\[Pi]"}], "2"], "]"}]}], "+", 
        RowBox[{"\[Pi]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", 
            SuperscriptBox["w", "2"]], ")"}], 
          RowBox[{"b", "/", "2"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["w", "2"], 
             SuperscriptBox["s", "2"]]}], ")"}], 
          RowBox[{"b", "/", "2"}]], " ", 
         RowBox[{"Csc", "[", 
          FractionBox[
           RowBox[{"b", " ", "\[Pi]"}], "2"], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", 
            SuperscriptBox["w", "2"]], ")"}], 
          RowBox[{"b", "/", "2"}]], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["w", "2"], 
             SuperscriptBox["s", "2"]]}], ")"}], 
          RowBox[{"b", "/", "2"}]], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{"1", "+", 
           FractionBox["b", "2"]}], "]"}], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["b", "2"]}], ",", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["w", "2"], 
             SuperscriptBox["s", "2"]]}]}], "]"}]}]}], ")"}]}], "\[Pi]"]}], 
   ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"w", "\[Element]", "Reals"}], "||", 
      RowBox[{
       RowBox[{"Re", "[", "w", "]"}], "\[Equal]", "0"}]}], ")"}], "&&", 
    RowBox[{
     SuperscriptBox["w", "2"], "\[Element]", "Reals"}], "&&", 
    RowBox[{"w", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", "w", "]"}], "\[NotEqual]", "0"}], "||", 
      RowBox[{"w", "\[NotElement]", "Reals"}]}], ")"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", 
      SuperscriptBox["s", "2"], "]"}], "\[GreaterEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "b", "]"}], ">", 
     RowBox[{"-", "2"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.821753759731719*^9, 3.8217553184824705`*^9, 
  3.821839695270445*^9, 3.82245249641241*^9, 3.825061139535475*^9, 
  3.8250612240176435`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReSigma", "[", "w_", "]"}], ":=", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["w", "2"], 
        SuperscriptBox["s", "2"]]}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", 
        SuperscriptBox["s", "2"]], ")"}], 
      RowBox[{
       RowBox[{"-", "b"}], "/", "2"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", 
        SuperscriptBox["w", "2"]], ")"}], 
      RowBox[{
       RowBox[{"-", "b"}], "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Pi]"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           SuperscriptBox["s", "2"]], ")"}], 
         RowBox[{"b", "/", "2"}]], " ", 
        RowBox[{"Cot", "[", 
         FractionBox[
          RowBox[{"b", " ", "\[Pi]"}], "2"], "]"}]}], "+", 
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           SuperscriptBox["w", "2"]], ")"}], 
         RowBox[{"b", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["w", "2"], 
            SuperscriptBox["s", "2"]]}], ")"}], 
         RowBox[{"b", "/", "2"}]], " ", 
        RowBox[{"Csc", "[", 
         FractionBox[
          RowBox[{"b", " ", "\[Pi]"}], "2"], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           SuperscriptBox["w", "2"]], ")"}], 
         RowBox[{"b", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["w", "2"], 
            SuperscriptBox["s", "2"]]}], ")"}], 
         RowBox[{"b", "/", "2"}]], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{"1", "+", 
          FractionBox["b", "2"]}], "]"}], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["b", "2"]}], ",", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox["w", "2"], 
            SuperscriptBox["s", "2"]]}]}], "]"}]}]}], ")"}]}], 
    "\[Pi]"]}]}]], "Input",
 CellChangeTimes->{{3.821839741047043*^9, 3.8218397592830734`*^9}, {
   3.8218452121259537`*^9, 3.8218452127185745`*^9}, 3.825061322359606*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SigmaR", "[", "w_", "]"}], ":=", " ", 
  RowBox[{"L", "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ReSigma", "[", "w", "]"}], "+", 
     RowBox[{"I", " ", "*", 
      RowBox[{"ImSigma", "[", "w", "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.821839778202778*^9, 3.8218398036582165`*^9}, {
  3.823038173203387*^9, 3.8230381802528486`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SigmaR", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.8218398069955335`*^9, 3.8218398119370995`*^9}}],

Cell[BoxData[
 RowBox[{"L", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["a", "2"], 
        SuperscriptBox["s", "2"]]}]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "s"}], "+", 
      RowBox[{"2", " ", "a", " ", 
       RowBox[{"DawsonF", "[", 
        FractionBox["a", "s"], "]"}]}]}], 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["s", "2"]]], " ", "s"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8218398127570295`*^9, 3.8230381828596225`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseFourierTransform", "[", 
  RowBox[{
   RowBox[{"SigmaR", "[", "w", "]"}], ",", "w", ",", "t", ",", 
   RowBox[{"FourierParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8218401317029853`*^9, 3.8218401516552687`*^9}, {
  3.8218401926371565`*^9, 3.8218402058454757`*^9}, {3.82184354174257*^9, 
  3.821843542105509*^9}, {3.8218436033623877`*^9, 3.82184360511215*^9}, {
  3.8218436425072947`*^9, 3.82184367876254*^9}, {3.8218438223023806`*^9, 
  3.821843823073576*^9}, {3.823038224640732*^9, 3.8230382250730515`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Pi]", 
      RowBox[{"5", "/", "2"}]]}]], 
   RowBox[{"\[ImaginaryI]", " ", "L", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       SuperscriptBox["s", "2"]], ")"}], 
     RowBox[{
      RowBox[{"-", "b"}], "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]]}]], 
       RowBox[{
        SuperscriptBox["\[Pi]", 
         RowBox[{"3", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           SuperscriptBox["s", "2"]], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox["b", "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]]}], ")"}], 
            "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", 
              SuperscriptBox["s", "2"]], ")"}], 
            RowBox[{"b", "/", "2"}]], " ", "t", " ", 
           RowBox[{"Gamma", "[", 
            FractionBox["b", "2"], "]"}], " ", 
           RowBox[{"Hypergeometric1F1", "[", 
            RowBox[{
             RowBox[{"1", "+", 
              FractionBox["b", "2"]}], ",", 
             FractionBox["3", "2"], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "4"]}], " ", 
              SuperscriptBox["s", "2"], " ", 
              SuperscriptBox["t", "2"]}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}], "2"]], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", 
                 FractionBox["1", 
                  SuperscriptBox["s", "2"]]}], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]], 
              " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}]}], ")"}], " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["s", "2"]]], " ", 
           RowBox[{"Gamma", "[", 
            FractionBox[
             RowBox[{"1", "+", "b"}], "2"], "]"}], " ", 
           RowBox[{"Hypergeometric1F1", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"1", "+", "b"}], "2"], ",", 
             FractionBox["1", "2"], ",", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["1", "4"]}], " ", 
              SuperscriptBox["s", "2"], " ", 
              SuperscriptBox["t", "2"]}]}], "]"}]}]}], ")"}]}]}], "+", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"2", "+", "b"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", 
          FractionBox["1", 
           SuperscriptBox["s", "2"]]}], ")"}], 
        RowBox[{"b", "/", "2"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "t"}], ")"}], 
        RowBox[{"-", "b"}]], " ", 
       SuperscriptBox["t", 
        RowBox[{
         RowBox[{"-", "1"}], "-", "b"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}], "2"]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"\[ImaginaryI]", " ", "t"}], ")"}], "b"]}], "-", 
         SuperscriptBox["t", "b"]}], ")"}], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"1", "+", "b"}], "2"], ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"], ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         FractionBox[
          RowBox[{
           SuperscriptBox["s", "2"], " ", 
           SuperscriptBox["t", "2"]}], "4"]}], "]"}]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.821840221328022*^9, 3.8218436833403797`*^9, 
  3.8224525125971365`*^9, 3.823038200710368*^9, 3.8230382309728703`*^9, 
  3.8250615568887987`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%9", "/.", 
  RowBox[{"{", 
   RowBox[{"t", "\[Rule]", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.823038315217091*^9, 3.8230383313054914`*^9}, {
  3.825061698057119*^9, 3.825061699166418*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Pi]", 
      RowBox[{"5", "/", "2"}]]}]], 
   RowBox[{"\[ImaginaryI]", " ", "L", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       SuperscriptBox["s", "2"]], ")"}], 
     RowBox[{
      RowBox[{"-", "b"}], "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]]}]], 
       RowBox[{
        SuperscriptBox["\[Pi]", 
         RowBox[{"3", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           SuperscriptBox["s", "2"]], ")"}], 
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          FractionBox["b", "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", " ", "\[ImaginaryI]", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]]}], ")"}], 
            "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", 
              SuperscriptBox["s", "2"]], ")"}], 
            RowBox[{"b", "/", "2"}]], " ", 
           RowBox[{"Gamma", "[", 
            FractionBox["b", "2"], "]"}], " ", 
           RowBox[{"Hypergeometric1F1", "[", 
            RowBox[{
             RowBox[{"1", "+", 
              FractionBox["b", "2"]}], ",", 
             FractionBox["3", "2"], ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"9", " ", 
                SuperscriptBox["s", "2"]}], "4"]}]}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}], "2"]], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"-", 
                 FractionBox["1", 
                  SuperscriptBox["s", "2"]]}], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", "b", " ", "\[Pi]"}]], 
              " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["1", 
                 SuperscriptBox["s", "2"]], ")"}], 
               RowBox[{"b", "/", "2"}]]}]}], ")"}], " ", 
           SqrtBox[
            FractionBox["1", 
             SuperscriptBox["s", "2"]]], " ", 
           RowBox[{"Gamma", "[", 
            FractionBox[
             RowBox[{"1", "+", "b"}], "2"], "]"}], " ", 
           RowBox[{"Hypergeometric1F1", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"1", "+", "b"}], "2"], ",", 
             FractionBox["1", "2"], ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"9", " ", 
                SuperscriptBox["s", "2"]}], "4"]}]}], "]"}]}]}], ")"}]}]}], 
      "+", 
      RowBox[{
       SuperscriptBox["\[ImaginaryI]", 
        RowBox[{"-", "b"}]], " ", 
       SuperscriptBox["2", 
        RowBox[{"2", "+", "b"}]], " ", 
       SuperscriptBox["3", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["3", "b"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"3", " ", "\[ImaginaryI]"}], ")"}], "b"], " ", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "b", " ", "\[Pi]"}], "2"]]}]}], 
        ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", 
          FractionBox["1", 
           SuperscriptBox["s", "2"]]}], ")"}], 
        RowBox[{"b", "/", "2"}]], " ", 
       RowBox[{"MeijerG", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"1", "+", "b"}], "2"], ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"], ",", 
             FractionBox[
              RowBox[{"2", "+", "b"}], "2"]}], "}"}], ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         FractionBox[
          RowBox[{"9", " ", 
           SuperscriptBox["s", "2"]}], "4"]}], "]"}]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.8230383318380437`*^9, 3.8250616998538017`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 695},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 209, 3, 49, "Subsection"],
Cell[792, 27, 163, 2, 30, "Text"],
Cell[958, 31, 309, 9, 30, "Input"],
Cell[1270, 42, 193, 6, 68, "Text"],
Cell[CellGroupData[{
Cell[1488, 52, 201, 5, 30, "Input"],
Cell[1692, 59, 390, 10, 44, "Output"]
}, Open  ]],
Cell[2097, 72, 145, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[2267, 77, 592, 16, 30, "Input"],
Cell[2862, 95, 1087, 33, 82, "Output"]
}, Open  ]],
Cell[3964, 131, 486, 15, 88, "Input"],
Cell[4453, 148, 386, 10, 30, "Input"],
Cell[CellGroupData[{
Cell[4864, 162, 129, 2, 30, "Input"],
Cell[4996, 166, 684, 22, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5717, 193, 622, 11, 30, "Input"],
Cell[6342, 206, 1563, 51, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7942, 262, 173, 4, 30, "Input"],
Cell[8118, 268, 1111, 38, 78, "Output"]
}, Open  ]],
Cell[9244, 309, 197, 3, 107, "Input"],
Cell[9444, 314, 72, 1, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9553, 320, 239, 3, 49, "Subsection"],
Cell[CellGroupData[{
Cell[9817, 327, 1427, 49, 107, "Input"],
Cell[11247, 378, 991, 34, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12275, 417, 1512, 51, 107, "Input"],
Cell[13790, 470, 2602, 91, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16429, 566, 628, 17, 30, "Input"],
Cell[17060, 585, 3563, 105, 199, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20660, 695, 83, 2, 30, "Input"],
Cell[20746, 699, 1659, 55, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22442, 759, 475, 10, 50, "Input"],
Cell[22920, 771, 1486, 50, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24443, 826, 1471, 50, 174, "Input"],
Cell[25917, 878, 999, 34, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26953, 917, 154, 4, 30, "Input"],
Cell[27110, 923, 721, 24, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27868, 952, 198, 5, 30, "Input"],
Cell[28069, 959, 747, 25, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28853, 989, 1115, 37, 110, "Input"],
Cell[29971, 1028, 1998, 66, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32006, 1099, 84, 2, 30, "Input"],
Cell[32093, 1103, 1646, 54, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33776, 1162, 260, 7, 50, "Input"],
Cell[34039, 1171, 1226, 41, 79, "Output"]
}, Open  ]],
Cell[35280, 1215, 89, 1, 50, "Input"],
Cell[CellGroupData[{
Cell[35394, 1220, 422, 9, 30, "Input"],
Cell[35819, 1231, 1337, 44, 82, "Output"]
}, Open  ]],
Cell[37171, 1278, 412, 12, 30, "Input"],
Cell[CellGroupData[{
Cell[37608, 1294, 125, 2, 30, "Input"],
Cell[37736, 1298, 798, 26, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38571, 1329, 150, 3, 30, "Input"],
Cell[38724, 1334, 829, 27, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39590, 1366, 421, 13, 30, "Input"],
Cell[40014, 1381, 1163, 36, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41214, 1422, 475, 13, 30, "Input"],
Cell[41692, 1437, 1229, 37, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42958, 1479, 1091, 34, 92, "Input"],
Cell[44052, 1515, 1063, 33, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45152, 1553, 1147, 34, 127, "Input"],
Cell[46302, 1589, 1127, 34, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47466, 1628, 819, 24, 50, "Input"],
Cell[48288, 1654, 7038, 129, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55363, 1788, 702, 21, 30, "Input"],
Cell[56068, 1811, 17709, 304, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73814, 2120, 696, 21, 30, "Input"],
Cell[74513, 2143, 18699, 320, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93249, 2468, 761, 24, 50, "Input"],
Cell[94013, 2494, 12937, 226, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106987, 2725, 742, 23, 50, "Input"],
Cell[107732, 2750, 26645, 450, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134414, 3205, 738, 23, 50, "Input"],
Cell[135155, 3230, 27739, 468, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162931, 3703, 202, 3, 30, "Input"],
Cell[163136, 3708, 137, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163310, 3715, 1299, 38, 88, "Input"],
Cell[164612, 3755, 240, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164889, 3763, 907, 29, 30, "Input"],
Cell[165799, 3794, 26517, 448, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192353, 4247, 946, 29, 30, "Input"],
Cell[193302, 4278, 24268, 411, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217607, 4694, 984, 30, 30, "Input"],
Cell[218594, 4726, 27625, 466, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246256, 5197, 988, 30, 30, "Input"],
Cell[247247, 5229, 444, 10, 21, "Message"],
Cell[247694, 5241, 712, 13, 23, "Message"],
Cell[248409, 5256, 169, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248615, 5264, 1303, 38, 30, "Input"],
Cell[249921, 5304, 639, 11, 23, "Message"],
Cell[250563, 5317, 205, 5, 22, "Print"],
Cell[250771, 5324, 372, 8, 21, "Message"],
Cell[251146, 5334, 637, 12, 23, "Message"],
Cell[251786, 5348, 203, 5, 22, "Print"],
Cell[251992, 5355, 374, 8, 21, "Message"],
Cell[252369, 5365, 641, 12, 23, "Message"],
Cell[253013, 5379, 345, 7, 21, "Message"],
Cell[253361, 5388, 206, 5, 22, "Print"],
Cell[253570, 5395, 374, 8, 21, "Message"],
Cell[253947, 5405, 345, 7, 21, "Message"],
Cell[254295, 5414, 203, 5, 22, "Print"]
}, Open  ]],
Cell[254513, 5422, 150, 2, 69, "Input"],
Cell[CellGroupData[{
Cell[254688, 5428, 1308, 38, 30, "Input"],
Cell[255999, 5468, 11755, 209, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267791, 5682, 1259, 37, 30, "Input"],
Cell[269053, 5721, 55577, 919, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324667, 6645, 122, 2, 30, "Input"],
Cell[324792, 6649, 86, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324915, 6655, 1391, 40, 30, "Input"],
Cell[326309, 6697, 10692, 191, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337038, 6893, 1247, 37, 30, "Input"],
Cell[338288, 6932, 126, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338451, 6939, 1500, 43, 50, "Input"],
Cell[339954, 6984, 4884, 93, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344875, 7082, 1723, 47, 50, "Input"],
Cell[346601, 7131, 5259, 99, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351897, 7235, 1552, 44, 50, "Input"],
Cell[353452, 7281, 4550, 88, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358039, 7374, 1440, 42, 30, "Input"],
Cell[359482, 7418, 14198, 245, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373717, 7668, 1438, 42, 30, "Input"],
Cell[375158, 7712, 9289, 169, 229, "Output"]
}, Open  ]],
Cell[384462, 7884, 174, 3, 88, "Input"],
Cell[CellGroupData[{
Cell[384661, 7891, 466, 11, 30, "Input"],
Cell[385130, 7904, 141, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385308, 7911, 286, 8, 30, "Input"],
Cell[385597, 7921, 88, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385722, 7927, 288, 8, 30, "Input"],
Cell[386013, 7937, 87, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386137, 7943, 286, 8, 30, "Input"],
Cell[386426, 7953, 91, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386554, 7959, 286, 8, 30, "Input"],
Cell[386843, 7969, 89, 1, 30, "Output"]
}, Open  ]],
Cell[386947, 7973, 87, 1, 50, "Input"],
Cell[387037, 7976, 1053, 17, 30, "Input"],
Cell[CellGroupData[{
Cell[388115, 7997, 1837, 50, 50, "Input"],
Cell[389955, 8049, 448, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390440, 8060, 1988, 53, 50, "Input"],
Cell[392431, 8115, 669, 12, 23, "Message"],
Cell[393103, 8129, 3673, 74, 229, "Output"]
}, Open  ]],
Cell[396791, 8206, 133, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[396949, 8213, 1917, 54, 50, "Input"],
Cell[398869, 8269, 372, 8, 21, "Message"],
Cell[399244, 8279, 649, 12, 23, "Message"],
Cell[399896, 8293, 8553, 154, 236, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[408498, 8453, 267, 3, 41, "Subsection"],
Cell[408768, 8458, 182, 2, 30, "Text"],
Cell[408953, 8462, 437, 12, 30, "Input"],
Cell[409393, 8476, 137, 5, 68, "Text"],
Cell[CellGroupData[{
Cell[409555, 8485, 201, 5, 30, "Input"],
Cell[409759, 8492, 463, 12, 44, "Output"]
}, Open  ]],
Cell[410237, 8507, 143, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[410405, 8512, 592, 16, 30, "Input"],
Cell[411000, 8530, 3221, 98, 101, "Output"]
}, Open  ]],
Cell[414236, 8631, 2448, 77, 73, "Input"],
Cell[416687, 8710, 386, 10, 30, "Input"],
Cell[CellGroupData[{
Cell[417098, 8724, 129, 2, 30, "Input"],
Cell[417230, 8728, 684, 22, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417951, 8755, 622, 11, 30, "Input"],
Cell[418576, 8768, 5818, 164, 149, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[424431, 8937, 221, 5, 30, "Input"],
Cell[424655, 8944, 5612, 161, 182, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

